<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Future Tech Blog - フューチャーアーキテクト</title>
  <subtitle>フューチャーアーキテクト開発者ブログ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://future-architect.github.io/"/>
  <updated>2017-05-25T09:25:56.333Z</updated>
  <id>https://future-architect.github.io/</id>
  
  <author>
    <name>Future Architect Consultants</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AIを使って顔画像から「常連さん」を判定しよう！</title>
    <link href="https://future-architect.github.io/articles/20170526/"/>
    <id>https://future-architect.github.io/articles/20170526/</id>
    <published>2017-05-26T07:15:31.000Z</published>
    <updated>2017-05-25T09:25:56.333Z</updated>
    
    <content type="html"><![CDATA[<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>こんにちは。データ分析チーム・入社1年目のルーキー、小池です。<br>データ分析チームでは、画像処理・自然言語処理など様々な分野に取り組んでおり、機械学習や多変量解析を用いたデータの分析を行っています。</p>
<p>そんな中で私は機械学習・Deep Learningによる画像処理系の分析を行っています。<br>本記事では、私達の取り組みの一部をご紹介すると同時に、画像分析の面白さを体感していただければと思います。</p>
<h1 id="今回のテーマ"><a href="#今回のテーマ" class="headerlink" title="今回のテーマ"></a>今回のテーマ</h1><p>今回のテーマは、AI(機械学習・Deep Learning等)を用いて、 <strong>大量にある顔画像の中から同一人物をクラスタリングし、頻出する顔画像の抽出</strong> を行いたいと思います。<br>簡単に言うと、 <strong>たくさんある画像から同じ人を見つけること</strong> を機械(AI)にやらせるということです。</p>
<h1 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h1><p>「たくさんある画像から同じ人を見るけること」ができれば、以下1～3の流れで、店舗に来るお客さんが常連さんか否かが判定ができるのではないかと考えています。</p>
<ol>
<li>店舗にカメラを設置し、1ヶ月程来店したお客さんの顔画像を収集</li>
<li>収集した顔画像に対して同じ人の画像があるかどうかを見つける</li>
<li>同じ人の画像が見つからなかったら新規のお客さん、見つかったら常連さんと判定</li>
</ol>
<p>画像により新規のお客さん・常連さんの判定ができたとすると、マーケティング分析やサービスの向上への活用が期待できそうです。</p>
<ul>
<li>よく来店するお客さんと初めて来店されるお客さんの購買行動を比較し、マーケティング戦略に活かす</li>
<li>今回のテーマで抽出した顔画像を元にDeep Learningのモデルを作り、その場で常連さんか否かを判断し、現場のサービス向上につなげる</li>
</ul>
<p>前者の顧客分析は、従来はポイントカードを発行しPOSレジをお店に導入しないとなかなか実現できなかったのではないかと思います。また、後者のサービス向上についても、現時点では店員さんの記憶や経験だけに頼っている現場が多いのが実情では無いでしょうか？</p>
<p>こういったことが、今回のような画像処理技術とカメラ1つで実現できそうだということで、非常にワクワクしています。</p>
<h1 id="方針"><a href="#方針" class="headerlink" title="方針"></a>方針</h1><p>「たくさんある画像から同じ人を見るけること」実現に向け、下記1～3で進めていきます。</p>
<p><img src="/images/20170523/photo_20170523_01.png"></p>
<ol>
<li>OpenFace API(Deep Learning)を利用し、顔画像を抽出・表現獲得を行う<ul>
<li>結果は128次元ベクトルに変換される</li>
</ul>
</li>
<li>顔画像に対して次元削減を行い、ユークリッド平面にプロットし可視化</li>
<li>表現獲得した画像をクラスタリングして同一人物をまとめる</li>
</ol>
<h1 id="開発環境の構築"><a href="#開発環境の構築" class="headerlink" title="開発環境の構築"></a>開発環境の構築</h1><h2 id="画像解析と相性が良いDockerを使おう"><a href="#画像解析と相性が良いDockerを使おう" class="headerlink" title="画像解析と相性が良いDockerを使おう"></a>画像解析と相性が良いDockerを使おう</h2><p><a href="https://www.docker.com/" target="_blank" rel="external">Docker</a>とは、仮想化のためのオープンソースで、1つのOS上に複数の仮想環境を簡単に用意できます。<br>また、Docker HubというDockerで構築された環境をシェアする仕組みがあり、ありがたいことにエンジニアが数日間かけて構築したような複雑な環境も数多く共有されています。</p>
<p>今回のような画像分析の開発構築は、一昔前までちょっとした環境差異でインストールができなかったりと非常に苦労を伴ったそうですが、今ならDockerを利用することでコマンド一つで準備できます。<br>また、Deep LearningではGPGPUを用いていますが、<a href="https://github.com/NVIDIA/nvidia-docker" target="_blank" rel="external">nvidia-docker</a>があればGPGPU環境も整います。<br>みなさんもぜひ導入してみて下さい。<br>今回はGPU環境を利用しないので、Dockerのみ入っていればOKです。</p>
<h2 id="開発環境"><a href="#開発環境" class="headerlink" title="開発環境"></a>開発環境</h2><ul>
<li>Ubuntu 16.04 LTS<ul>
<li>私はUbuntuを開発で利用していますが、Dockerが入っていれば問題ないと思います</li>
</ul>
</li>
<li>Docker 1.13.0 (Client,Server)</li>
</ul>
<h2 id="環境構築手順"><a href="#環境構築手順" class="headerlink" title="環境構築手順"></a>環境構築手順</h2><p>Dockerは導入されている前提で進めます。</p>
<h3 id="1-コンテナを取得-amp-実行"><a href="#1-コンテナを取得-amp-実行" class="headerlink" title="1. コンテナを取得 &amp; 実行"></a>1. コンテナを取得 &amp; 実行</h3><p>bamosさんの作成したopenface(後に記述）の環境を使わせていただきます。<br>python2,3、numpy、OpenCV、scikit-learn、Dlibが入っているのですぐに画像解析が始めることができます。</p>
<figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ docker pull bamos/openface</div><div class="line">$ docker run -v /home/&#123;your <span class="built_in">dir</span>&#125;:/home/ -it bamos/openface /bin/bash</div></pre></td></tr></table></figure>
<p><code>-v</code> オプションで、コンテナとホスト側でディレクトリを共有できます。<br><code>{your dir}</code> は自分の共有したいディレクトリに書き換えてください。</p>
<h3 id="2-ディレクトリの確認"><a href="#2-ディレクトリの確認" class="headerlink" title="2. ディレクトリの確認"></a>2. ディレクトリの確認</h3><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> /root/openface/demos</div></pre></td></tr></table></figure>
<p>無事demosディレクトリに入れたら環境構築完了です。<br>Dockerは便利です！</p>
<h1 id="OpenFaceによる表現獲得"><a href="#OpenFaceによる表現獲得" class="headerlink" title="OpenFaceによる表現獲得"></a>OpenFaceによる表現獲得</h1><p>さて、いよいよ画像解析をはじめていきましょう！<br>顔画像から表現を獲得する方法はいくつかありますが、今回はGoogleが出している<a href="http://www.cv-foundation.org/openaccess/content_cvpr_2015/app/1A_089.pdf" target="_blank" rel="external">FaceNet:A Unified Embedding for Recognition and Clustering</a>に記載されている手法を実装した、<a href="https://cmusatyalab.github.io/openface/" target="_blank" rel="external">OpenFace</a>を使います。</p>
<p><img src="/images/20170523/photo_20170523_02.jpg"></p>
<p>OpenFaceのAPIを利用すると、人の顔画像を128次元ベクトルへ変換し、画像同士のユークリッド距離が直接類似度となるようにマッピングを行ってくれます。</p>
<p>実際に2つの画像を特徴変換し、ユーグリッド距離（類似度）を出してみましょう。<br>利用する画像は次の2枚です。(Dockerコンテナを立てた際にこの2枚のサンプル画像も入っています)</p>
<p><img src="/images/20170523/photo_20170523_03.jpeg"><br>lennon-1.jpg</p>
<p><img src="/images/20170523/photo_20170523_04.jpeg"><br>carell.jpg</p>
<p><code>/root/openface/demo/</code> フォルダに以下のファイルを作成します。</p>
<figure class="highlight py"><figcaption><span>compare_images.py</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python2</span></div><div class="line"><span class="comment"># -*-coding:utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> cv2</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line">np.set_printoptions(precision=<span class="number">2</span>)</div><div class="line"></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> openface</div><div class="line"><span class="keyword">import</span> glob</div><div class="line"><span class="keyword">import</span> itertools</div><div class="line"></div><div class="line">fileDir = os.path.dirname(os.path.realpath(__file__))</div><div class="line">modelDir = os.path.join(fileDir, <span class="string">'..'</span>, <span class="string">'models'</span>)</div><div class="line">dlibModelDir = os.path.join(modelDir, <span class="string">'dlib'</span>)</div><div class="line">openfaceModelDir = os.path.join(modelDir, <span class="string">'openface'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rep</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        <span class="comment"># モデル読み込み</span></div><div class="line">        self.align = openface.AlignDlib(os.path.join(dlibModelDir, <span class="string">"shape_predictor_68_face_landmarks.dat"</span>))</div><div class="line">        self.net = openface.TorchNeuralNet(os.path.join(openfaceModelDir, <span class="string">'nn4.small2.v1.t7'</span>), <span class="number">96</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_rep</span><span class="params">(self,imgPath)</span>:</span></div><div class="line"></div><div class="line">        <span class="comment"># 画像の読み込み</span></div><div class="line">        bgrImg = cv2.imread(imgPath)</div><div class="line">        rgbImg = cv2.cvtColor(bgrImg, cv2.COLOR_BGR2RGB)</div><div class="line"></div><div class="line">        <span class="comment"># boundingboxやalign faceなどを作成</span></div><div class="line">        bb = self.align.getLargestFaceBoundingBox(rgbImg)</div><div class="line">        alignedFace = self.align.align(<span class="number">96</span>, rgbImg, bb,landmarkIndices=openface.AlignDlib.OUTER_EYES_AND_NOSE)</div><div class="line"></div><div class="line">        <span class="comment"># 128D vectorに変換</span></div><div class="line">        rep = self.net.forward(alignedFace)</div><div class="line">        <span class="keyword">return</span> rep</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</div><div class="line"></div><div class="line">    reps = Rep()</div><div class="line">    img1,img2 = sys.argv[<span class="number">1</span>],sys.argv[<span class="number">2</span>]</div><div class="line"></div><div class="line">    <span class="comment"># get rep array</span></div><div class="line"></div><div class="line">    img1_rep, img2_rep = reps.get_rep(img1),reps.get_rep(img2)</div><div class="line"></div><div class="line">    <span class="comment"># 各画像のベクトル表示</span></div><div class="line">    <span class="comment">#print(img1_rep,img2_rep)</span></div><div class="line"></div><div class="line">    <span class="comment"># 類似度計算</span></div><div class="line">    d = img1_rep - img2_rep</div><div class="line">    print(np.dot(d,d))</div></pre></td></tr></table></figure>
<p>実行は以下のコマンドで行います。</p>
<figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ python compare_images.py /root/openface/images/examples/lennon-<span class="number">1</span>.jpg /root/openface/images/examples/carell.jpg</div><div class="line"></div><div class="line"><span class="number">1</span>.<span class="number">9628270995</span></div></pre></td></tr></table></figure>
<p>この場合は第一引数に <code>lennon-1.jpg</code> 、第二引数に <code>carell.jpg</code> をとり、両者を比較しています。</p>
<p><code>1.9628270995</code> という実行結果はユークリッド距離（類似度）で、0に近いほど同一人物ということが言えます。<br>論文では、類似度の閾値を1.1程度としています。つまり、類似度が1.1以下なら同一人物、<br>1.1以上なら別人物というわけですね。ただし、光の加減やピクセル数等によって閾値は多少前後します。1.1を基準とし、しっくりくる閾値を見つけてみてください。</p>
<p>本テーマである来店数の多い人（常連さん）を発見するには、画像から取得した表現をユーグリッド空間にプロットし、それをクラスタリングすることで、同一人物のクラスタを作成することを考えます。</p>
<p>参考として、どのようなことをすればよいかを可視化しました。<br>可視化のために各画像を主成分分析(PCA<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>)により50次元まで次元削減し、t-sne<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>によって2次元まで顔画像を落としこみプロットしています。<br>koike,liさん,yonetaniさんの顔画像を50枚前後用意し、次元削減を行い2次元に無理やり落とし込みました。<br>(※次元削減しているので、各点間の距離が直接の類似度になるとは限らないので注意）</p>
<p><img src="/images/20170523/photo_20170523_05.png"></p>
<p>各点は、顔画像を無理やりに２次元に落とし込んだものです。<br>なんとなくクラスタリングできそうですね！</p>
<h1 id="クラスタリング手法について"><a href="#クラスタリング手法について" class="headerlink" title="クラスタリング手法について"></a>クラスタリング手法について</h1><p>では、クラスタリングはどのように行えば良いでしょうか。<br>今回のクラスタリングは、 <strong>クラスタ数が事前にわかりません</strong>。<br>来店するお客さんの例で説明すると、来店した人の顔画像はあるけど、よく来店する人の数（クラスター数）はわからない状況です。<br>そこで、クラスタリングの中でもクラスタ数を指定しないアプローチをしなければなりません。<br>クラスター数を指定しないアルゴリズムはMeanShift、DBSCAN、x-meansなどがありますが<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>、<br>今回はDBSCANを利用してクラスタリングを行います。</p>
<h1 id="DBSCANによるクラスタリング"><a href="#DBSCANによるクラスタリング" class="headerlink" title="DBSCANによるクラスタリング"></a>DBSCANによるクラスタリング</h1><p>DBSCANの簡単な説明をします。<br>ある点 \(p\) から近傍半径 \(\xi\) 以内に少なくとも \(minPts\) 数の点があれば、<br>その点 \(p\) は \(core-points\) といいます。また、近傍半径内にある点を到達可能点と言います。<br>点pの近傍半径 \(\xi\) 内の点を \(core-points\) か判断し、\(core-points\) を移動させながら同じ動作を繰り返します。<br>各点から到達可能である点は同じクラスタと判断します。<br>視覚的に表すと以下のようになり、密接な点を同一クラスとみなしてクラスタリングを行っていることがわかります。</p>
<p><img src="/images/20170523/photo_20170523_06.png"></p>
<p>(厳密に言うと、条件があったり等少々異なった箇所がありますが、今回はこのような理解で構いません。)</p>
<p>DBSCANは、指定するパラメータは2で良いです。1つは近傍半径 \(\xi\) 、もう1つは円内に含まれる最低オブジェクト数 \(minPts\) です。<br>今回のクラスタリングは、\(\xi = 0.7\)、\(minPts = 1\)として行いました。<br>（ただし、先ほど類似度の所でも述べましたが、被写体の光の具合・撮影距離等によって近傍半径の調整が必要です。クラスタリングを行う場合、まずは少数データで近傍半径を調整した後にクラスタリングすることをおすすめします）</p>
<p>このクラスタリングを行うにはいろいろな人の顔画像を用意する必要があります。<br>顔画像データセットを <code>/home/</code> 以下に設置してください。<br>(ディレクトリを共有しているので、ホスト側の<code>/home/{your dir}</code>に画像データをおいてOKです。)</p>
<p>なお、今回私は以下のように画像を用意しました。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">/home/</div><div class="line">|-- 0aaa.jpg</div><div class="line">|-- 0bbb.jpg</div><div class="line">|-- 0ccc.jpg</div><div class="line">|-- 0ddd.jpg</div><div class="line">|-- 10bbb.jpg</div><div class="line">|-- 10ccc.jpg</div><div class="line">|-- 11aaa.jpg</div><div class="line">|-- 11bbb.jpg</div><div class="line">|-- 11ccc.jpg</div><div class="line">|-- 12bbb.jpg</div><div class="line">|-- 8aaa.jpg</div><div class="line">|-- 8bbb.jpg</div><div class="line">|-- 8ccc.jpg</div><div class="line">|-- 9bbb.jpg</div><div class="line">|-- 9ccc.jpg</div><div class="line">|-- carell.jpg</div><div class="line">|-- lennon-1.jpg</div><div class="line">(以下略)</div></pre></td></tr></table></figure>
<p>それぞれの合計枚数は下表のとおりです。</p>
<table>
<thead>
<tr>
<th style="text-align:center">名前</th>
<th style="text-align:center">画像枚数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">aaaさん</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">bbbさん</td>
<td style="text-align:center">17</td>
</tr>
<tr>
<td style="text-align:center">cccさん</td>
<td style="text-align:center">20</td>
</tr>
<tr>
<td style="text-align:center">dddさん</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">carellさん</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">lenon-1さん</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
<p>この5人の顔画像をランダムに集め、 <code>/home/</code> に置きました。lenonさん、carellさんは先ほどのサンプル画像をそのまま使用しています。<br>なお、カメラ撮影の関係でファイル名は <code>index+名前.jpg</code> となっています<br>（例えば、 <code>0aaa.jpg</code> はaaaさんが映った画像です）</p>
<p>そして以下のpythonファイルを作成し、実行します。</p>
<figure class="highlight py"><figcaption><span>dbscan.py</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python2</span></div><div class="line"><span class="comment"># -*-coding:utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> cv2</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line">np.set_printoptions(precision=<span class="number">2</span>)</div><div class="line"></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> openface</div><div class="line"><span class="keyword">import</span> glob</div><div class="line"><span class="keyword">import</span> itertools</div><div class="line"></div><div class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> DBSCAN</div><div class="line"></div><div class="line">fileDir = os.path.dirname(os.path.realpath(__file__))</div><div class="line">modelDir = os.path.join(fileDir, <span class="string">'..'</span>, <span class="string">'models'</span>)</div><div class="line">dlibModelDir = os.path.join(modelDir, <span class="string">'dlib'</span>)</div><div class="line">openfaceModelDir = os.path.join(modelDir, <span class="string">'openface'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rep</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.align = openface.AlignDlib(os.path.join(</div><div class="line">            dlibModelDir, <span class="string">"shape_predictor_68_face_landmarks.dat"</span>))</div><div class="line">        self.net = openface.TorchNeuralNet(os.path.join(</div><div class="line">            openfaceModelDir, <span class="string">'nn4.small2.v1.t7'</span>), <span class="number">96</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_rep</span><span class="params">(self, imgPath)</span>:</span></div><div class="line"></div><div class="line">        bgrImg = cv2.imread(imgPath)</div><div class="line">        rgbImg = cv2.cvtColor(bgrImg, cv2.COLOR_BGR2RGB)</div><div class="line">        bb = self.align.getLargestFaceBoundingBox(rgbImg)</div><div class="line"></div><div class="line">        alignedFace = self.align.align(</div><div class="line">            <span class="number">96</span>, rgbImg, bb, landmarkIndices=openface.AlignDlib.OUTER_EYES_AND_NOSE)</div><div class="line">        rep = self.net.forward(alignedFace)</div><div class="line">        <span class="keyword">return</span> rep</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_all_reps</span><span class="params">(self, files)</span>:</span></div><div class="line"></div><div class="line">        <span class="comment"># initialize x</span></div><div class="line">        reps = <span class="keyword">None</span></div><div class="line"></div><div class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</div><div class="line">            <span class="keyword">if</span> reps <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">                reps = self.get_rep(file)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="comment"># 画像に顔がなかった場合の例外処理</span></div><div class="line">                <span class="keyword">try</span>:</div><div class="line">                    reps = np.vstack((reps, self.get_rep(file)))</div><div class="line">                <span class="keyword">except</span>:</div><div class="line">                    <span class="keyword">pass</span></div><div class="line"></div><div class="line">        <span class="keyword">return</span> reps</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line"></div><div class="line">    getreps = Rep()</div><div class="line"></div><div class="line">    <span class="comment"># get files</span></div><div class="line">    files = glob.glob(<span class="string">"/home/*.jpg"</span>)</div><div class="line"></div><div class="line">    <span class="comment"># get Reps</span></div><div class="line">    reps = getreps.get_all_reps(files)</div><div class="line"></div><div class="line">    print(reps)</div><div class="line">    EPS = <span class="number">0.7</span></div><div class="line">    MINPTS = <span class="number">1</span></div><div class="line"></div><div class="line">    <span class="comment"># dbscan clustering</span></div><div class="line">    dbscan = DBSCAN(eps=EPS, min_samples=MINPTS).fit(reps)</div><div class="line">    ans = dbscan.fit_predict(reps)</div><div class="line"></div><div class="line">    print(<span class="string">"class"</span>, <span class="string">"img"</span>)</div><div class="line">    <span class="keyword">for</span> a, f <span class="keyword">in</span> zip(ans, files):</div><div class="line">        print(a, f)</div></pre></td></tr></table></figure>
<p>出力は、<code>(クラスタ番号,画像名）</code> となっています。</p>
<figure class="highlight sh"><figcaption><span>実行結果</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">(<span class="string">'class'</span>, <span class="string">'img'</span>)</div><div class="line">(0, <span class="string">'/home/0aaa.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/9bbb.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/3ccc.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/17ccc.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/11ccc.jpg'</span>)</div><div class="line">(3, <span class="string">'/home/lennon-1.jpg'</span>)</div><div class="line">(0, <span class="string">'/home/17aaa.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/3bbb.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/18ccc.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/2ccc.jpg'</span>)</div><div class="line">(0, <span class="string">'/home/19aaa.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/18bbb.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/13bbb.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/15ccc.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/11bbb.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/15bbb.jpg'</span>)</div><div class="line">(4, <span class="string">'/home/1ddd.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/13ccc.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/5bbb.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/12bbb.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/9ccc.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/0ccc.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/14ccc.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/0bbb.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/16ccc.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/6ccc.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/7ccc.jpg'</span>)</div><div class="line">(0, <span class="string">'/home/6aaa.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/1ccc.jpg'</span>)</div><div class="line">(5, <span class="string">'/home/carell.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/10bbb.jpg'</span>)</div><div class="line">(0, <span class="string">'/home/13aaa.jpg'</span>)</div><div class="line">(4, <span class="string">'/home/2ddd.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/4ccc.jpg'</span>)</div><div class="line">(0, <span class="string">'/home/15aaa.jpg'</span>)</div><div class="line">(6, <span class="string">'/home/19bbb.jpg'</span>)</div><div class="line">(0, <span class="string">'/home/8aaa.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/10ccc.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/14bbb.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/16bbb.jpg'</span>)</div><div class="line">(0, <span class="string">'/home/11aaa.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/8ccc.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/12ccc.jpg'</span>)</div><div class="line">(0, <span class="string">'/home/14aaa.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/5ccc.jpg'</span>)</div><div class="line">(4, <span class="string">'/home/0ddd.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/1bbb.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/6bbb.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/8bbb.jpg'</span>)</div><div class="line">(1, <span class="string">'/home/17bbb.jpg'</span>)</div><div class="line">(2, <span class="string">'/home/19ccc.jpg'</span>)</div><div class="line">(0, <span class="string">'/home/16aaa.jpg'</span>)</div></pre></td></tr></table></figure>
<p>出力を確認すると、aaaさんはクラスタ0、bbbさんはクラスタ1、cccさんはクラスタ2、dddさんはクラスタ4、lennon-1さんはクラスタ3、carellさんはクラスタ5にうまく分類されていることがわかります。<br>この結果から、常連さんをSVMまたはCNNで学習させモデルを作成することで、次回から常連さんをその場で判別させることができると思います。</p>
<h1 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a>最後に</h1><p>今回は複数枚ある顔画像からよく頻出する人をクラスタリングし、常連（よく出現する人）さんを機械的に抽出できることを具体的なコードを追いながら実践しました。<br>この技術の応用方法は多くあり、さまざまビジネスへつなげることができると考えています。</p>
<p>フューチャーアーキテクトのデータ分析チームでは、技術的視点だけでなく、ビジネス視点からも応用先を考え技術検証を行っています。</p>
<p>これからもどんどん面白そうな記事を書いていきますので、よろしくお願いします。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">PCAについては <a href="http://d.hatena.ne.jp/hgshrs/20130407/1365335916" target="_blank" rel="external">こちら</a> も参考にしてください</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">t-sneについては <a href="http://blog.albert2005.co.jp/2015/12/02/tsne/" target="_blank" rel="external">こちら</a> も参考にしてください</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;">k-meansのクラスタ数をhyperparameterとしてグリッドサーチするのも1つの手ですが。</span><a href="#fnref:3" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h1&gt;&lt;p&gt;こんにちは。データ分析チーム・入社1年目のルーキー、小池です。&lt;br&gt;データ分析チームでは、画像処理・自然言語処理など様々な
    
    </summary>
    
      <category term="DataScience" scheme="https://future-architect.github.io/categories/DataScience/"/>
    
    
      <category term="Python" scheme="https://future-architect.github.io/tags/Python/"/>
    
      <category term="MachineLearning" scheme="https://future-architect.github.io/tags/MachineLearning/"/>
    
      <category term="DeepLearning" scheme="https://future-architect.github.io/tags/DeepLearning/"/>
    
  </entry>
  
  <entry>
    <title>マネージャーがうれしいRedmineデータのダッシュボード表示方法を公開します！！</title>
    <link href="https://future-architect.github.io/articles/20170510/"/>
    <id>https://future-architect.github.io/articles/20170510/</id>
    <published>2017-05-10T09:00:00.000Z</published>
    <updated>2017-05-12T07:56:11.976Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/20170510/photo_20170510_00.jpg" alt=""></p>
<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>こんにちは。近藤です。</p>
<p>前回までの関連記事です</p>
<ul>
<li><a href="https://future-architect.github.io/articles/20160920/">1記事目</a> はRedmineのデータをKibanaで表示しました</li>
<li><a href="https://future-architect.github.io/articles/20170119/">2記事目</a> はRedmineのデータからEVMグラフを作成しKibanaで表示しました</li>
</ul>
<p>3記事目となる本記事ではRedmineデータを可視化するダッシュボードをKibana上に構築します。Kibanaを使うことによって例えば、担当者別のタスク量、トラッカー別のタスク量、EVMグラフを同時に把握できます。</p>
<p>◆ダッシュボード例</p>
<p><img src="/images/20170510/photo_20170510_39.png" alt=""></p>
<p>では早速、Kibanaを使ってみましょう。</p>
<p>なお、下記を前提としています。</p>
<ul>
<li>Windows環境で構築する</li>
<li>Redmineのデータベース(MySQL)に直接接続する</li>
</ul>
<h2 id="大まかな流れ"><a href="#大まかな流れ" class="headerlink" title="大まかな流れ"></a>大まかな流れ</h2><p>下記の手順でグラフを表示します。</p>
<ol>
<li>環境構築</li>
<li>データ投入</li>
<li>ダッシュボード構築 </li>
</ol>
<h2 id="1-環境構築"><a href="#1-環境構築" class="headerlink" title="1.環境構築"></a>1.環境構築</h2><p>今回もELK+Timelionを利用して、Redmineデータの可視化環境を構築します。</p>
<p><img src="/images/20170510/photo_20170510_99.png" alt=""></p>
<h3 id="モジュールのダウンロード"><a href="#モジュールのダウンロード" class="headerlink" title="モジュールのダウンロード"></a>モジュールのダウンロード</h3><p>前回の投稿から時間がたち、ELKのバージョンが上がったのであらためて最新のモジュールをダウンロードします。</p>
<ul>
<li>Elastic Search Download URL<ul>
<li><a href="https://www.elastic.co/jp/downloads/elasticsearch" target="_blank" rel="external">https://www.elastic.co/jp/downloads/elasticsearch</a></li>
<li>私の場合は、「elasticsearch-5.4.0.zip」をダウンロードしました。</li>
</ul>
</li>
<li>Kibana Download URL<ul>
<li><a href="https://www.elastic.co/downloads/kibana" target="_blank" rel="external">https://www.elastic.co/downloads/kibana</a></li>
<li>私の場合は、「kibana-5.4.0-windows-x86.zip」をダウンロードしました。</li>
</ul>
</li>
<li>Logstash Download URL<ul>
<li><a href="https://www.elastic.co/downloads/logstash" target="_blank" rel="external">https://www.elastic.co/downloads/logstash</a></li>
<li>私の場合は、「logstash-5.4.0.zip」をダウンロードしました。</li>
</ul>
</li>
</ul>
<h3 id="モジュールの配備"><a href="#モジュールの配備" class="headerlink" title="モジュールの配備"></a>モジュールの配備</h3><p>次に、「C:\elastic」というフォルダを作成。そして、先ほどダウンロードしたそれぞれの圧縮ファイルを解凍し、「C:\elastic」へ配置します。</p>
<p>最終的には下記のようなフォルダ構成になります。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">C:\elastic</div><div class="line"> └ elasticsearch<span class="number">-5.4</span><span class="number">.0</span></div><div class="line"> └ kibana<span class="number">-5.4</span><span class="number">.0</span>-windows-x86</div><div class="line"> └ logstash<span class="number">-5.4</span><span class="number">.0</span></div></pre></td></tr></table></figure></p>
<h3 id="JDBCドライバ設定"><a href="#JDBCドライバ設定" class="headerlink" title="JDBCドライバ設定"></a>JDBCドライバ設定</h3><p>次に、JDBCドライバを用意します。</p>
<p><a href="https://future-architect.github.io/articles/20160920/">前々回</a>ダウンロードした「mysql-connector-java-5.1.39-bin.jar」というファイルを、<br>「C:\elastic\logstash-5.4.0\bin」以下に配置します。</p>
<p>次に、「redmine.txt」というファイルを作成。中身は下記のようにします。（★を含む箇所は皆様の環境に合わせた値へ変えてください。）</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line">    jdbc &#123;</div><div class="line">        jdbc_connection_string =&gt; <span class="string">"jdbc:mysql://★IP★:3306/★サービス名★"</span></div><div class="line">        jdbc_user =&gt; <span class="string">"★ユーザ名★"</span></div><div class="line">        jdbc_password =&gt; <span class="string">"★パスワード★"</span></div><div class="line">        jdbc_driver_library =&gt;<span class="string">"mysql-connector-java-5.1.39-bin.jar"</span></div><div class="line">        jdbc_driver_class =&gt; <span class="string">"com.mysql.jdbc.Driver"</span></div><div class="line">        statement =&gt; <span class="string">"</span></div><div class="line">select</div><div class="line">	iss.due_date due_date</div><div class="line">	, iss.updated_on updated_on</div><div class="line">	, iss.estimated_hours pv</div><div class="line">	, iss.estimated_hours * iss.done_ratio / 100 ev</div><div class="line">	, tim.hours ac</div><div class="line">	, concat(usr.lastname, usr.firstname) user_name</div><div class="line">	, tra.name tracker_name</div><div class="line">from</div><div class="line">	issues iss</div><div class="line">	left join (</div><div class="line">		select</div><div class="line">			issue_id</div><div class="line">			, sum(hours) hours</div><div class="line">		from</div><div class="line">			time_entries</div><div class="line">		group by</div><div class="line">			issue_id</div><div class="line">	) tim</div><div class="line">	on iss.id = tim.issue_id</div><div class="line">	left join users usr</div><div class="line">	on iss.assigned_to_id = usr.id</div><div class="line">	left join trackers tra</div><div class="line">	on iss.tracker_id = tra.id</div><div class="line">"</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">output &#123;</div><div class="line">    elasticsearch &#123;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>中に記載されているSQLでは、下記7つの値を取得します。なお、pv、ec、acについては、<a href="https://future-architect.github.io/articles/20170119/#EVMとは？">前回の記事:EVMとは？</a>をご参照ください。</p>
<table>
<thead>
<tr>
<th style="text-align:left">SQL上の項目名</th>
<th style="text-align:left">Redmine上の項目名 　</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">due_date 　</td>
<td style="text-align:left">「期日」 　　　　　　　　</td>
</tr>
<tr>
<td style="text-align:left">updated_on</td>
<td style="text-align:left">「更新日」　　　　　　　</td>
</tr>
<tr>
<td style="text-align:left">pv 　　　　　</td>
<td style="text-align:left">「予定工数」        　</td>
</tr>
<tr>
<td style="text-align:left">ev</td>
<td style="text-align:left">「予定工数」×「進捗率」</td>
</tr>
<tr>
<td style="text-align:left">ac     　　</td>
<td style="text-align:left">「作業時間の記録」 　　　</td>
</tr>
<tr>
<td style="text-align:left">user_name</td>
<td style="text-align:left">「担当者名」 　　　</td>
</tr>
<tr>
<td style="text-align:left">tracker_name</td>
<td style="text-align:left">「トラッカー名」 　　　</td>
</tr>
</tbody>
</table>
<p>この「redmine.txt」も「C:\elastic\logstash-5.4.0\bin」に配置します。</p>
<p>結果的に、下記のようなフォルダ構成になります。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">C:\elastic</div><div class="line"> └ elasticsearch<span class="number">-5.4</span><span class="number">.0</span></div><div class="line"> └ kibana<span class="number">-5.4</span><span class="number">.0</span>-windows-x86</div><div class="line"> └ logstash<span class="number">-5.4</span><span class="number">.0</span></div><div class="line"> └ bin</div><div class="line">   └ mysql-connector-java<span class="number">-5.1</span><span class="number">.39</span>-bin.jar</div><div class="line">   └ redmine.txt</div></pre></td></tr></table></figure>
<h2 id="2-RedmineデータをELKに取り込む"><a href="#2-RedmineデータをELKに取り込む" class="headerlink" title="2.RedmineデータをELKに取り込む"></a>2.RedmineデータをELKに取り込む</h2><h3 id="ElasticSearchの起動"><a href="#ElasticSearchの起動" class="headerlink" title="ElasticSearchの起動"></a>ElasticSearchの起動</h3><p>まず、ElasticSearchを実行します。<br>「C:\elasticsearch-5.4.0\bin」フォルダで下記のコマンドを実行。</p>
<p><code>elasticsearch.bat</code></p>
<p>コマンドプロンプトの右下に”started”と表示されたら起動完了です。</p>
<h3 id="Logstashを使ったデータ取り込み"><a href="#Logstashを使ったデータ取り込み" class="headerlink" title="Logstashを使ったデータ取り込み"></a>Logstashを使ったデータ取り込み</h3><p>次に、Logstashを使って、RedmineのデータをElasticSearchへ取り込みます。<br>「C:\elastic\logstash-5.4.0\bin」フォルダで下記コマンドを実行。</p>
<p><code>logstash.bat -f redmine.txt</code></p>
<p><img src="/images/20170510/photo_20170510_40.png" alt=""></p>
<p>取り込みが完了しました。</p>
<h3 id="Kibanaの起動"><a href="#Kibanaの起動" class="headerlink" title="Kibanaの起動"></a>Kibanaの起動</h3><p>次に、Kibanaを起動します。<br>「C:\elastic\kibana-5.4.0-windows-x86\bin」フォルダで下記コマンドを実行。</p>
<p><code>kibana.bat</code></p>
<p><img src="/images/20170510/photo_20170510_02.png" alt=""></p>
<p>Kibanaが起動しました。</p>
<h3 id="Kibanaでグラフ表示"><a href="#Kibanaでグラフ表示" class="headerlink" title="Kibanaでグラフ表示"></a>Kibanaでグラフ表示</h3><p>では、Kibanaを表示します。ブラウザで <code>http://localhost:5601</code>を開く。</p>
<p><img src="/images/20170510/photo_20170510_03.png" alt=""></p>
<p>[Configure an index pattern]という画面が開くので、[Time-field name]に”due_date”を指定します。</p>
<p>そして、[Create]をクリック。</p>
<p><img src="/images/20170510/photo_20170510_10.png" alt=""></p>
<p>そして、左側の[Visualize]をクリックすると、Visualizeの画面が開きます。</p>
<p><img src="/images/20170510/photo_20170510_06.png" alt=""></p>
<p>ここで、「Create a visualizetion」をクリック。</p>
<p><img src="/images/20170510/photo_20170510_11.png" alt=""></p>
<p>[Select visualization type]画面が表示されるので、「Vertical bar」をクリックします。</p>
<p><img src="/images/20170510/photo_20170510_08.png" alt=""></p>
<p>そして、「logstash-*」をクリックすると、</p>
<p><img src="/images/20170510/photo_20170510_12.png" alt=""></p>
<p>グラフ画面が出ましたね！</p>
<h3 id="担当者別のPVグラフ作成"><a href="#担当者別のPVグラフ作成" class="headerlink" title="担当者別のPVグラフ作成"></a>担当者別のPVグラフ作成</h3><p>次は、担当者別のPVを表示するグラフを作成。下記の設定箇所にそれぞれの値を設定します。</p>
<table>
<thead>
<tr>
<th style="text-align:left">設定箇所</th>
<th style="text-align:left">値 　</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">[metrics]-&gt;[Y-Axis]-&gt;[Aggregation]</td>
<td style="text-align:left">Sum</td>
</tr>
<tr>
<td style="text-align:left">[metrics]-&gt;[Y-Axis]-&gt;[Field]</td>
<td style="text-align:left">pv</td>
</tr>
<tr>
<td style="text-align:left">[buckets]-&gt;[X-Axis]-&gt;[Terms]</td>
<td style="text-align:left">user_name.keyword</td>
</tr>
</tbody>
</table>
<p>そして、画面左上の「再生ボタン」をクリックすると、</p>
<p><img src="/images/20170510/photo_20170510_13.png" alt=""></p>
<p>担当者別のPVが表示されました！</p>
<p>では、グラフを保存します。</p>
<p>画面右上の「Save」をクリック。<br>テキストボックスが表示されるので”PvUser”と入力します。</p>
<p><img src="/images/20170510/photo_20170510_15.png" alt=""></p>
<p>そして、青色の「Save」をクリックすると、グラフが保存されました。</p>
<h2 id="3-ダッシュボード構築"><a href="#3-ダッシュボード構築" class="headerlink" title="3.ダッシュボード構築"></a>3.ダッシュボード構築</h2><p>続いて、画面左側の「Dashboard」をクリックします。</p>
<p><img src="/images/20170510/photo_20170510_16.png" alt=""></p>
<p>画面中央の「Create a dashboard」をクリック。</p>
<p><img src="/images/20170510/photo_20170510_17.png" alt=""></p>
<p>そして、画面中央の「Add」をクリックします。</p>
<p><img src="/images/20170510/photo_20170510_18.png" alt=""></p>
<p>続いて、「PvUser」をクリックすると、</p>
<p><img src="/images/20170510/photo_20170510_19.png" alt=""></p>
<p>グラフが追加されました！</p>
<p><img src="/images/20170510/photo_20170510_19.png" alt=""></p>
<p>次にダッシュボードを保存します。</p>
<p>右上の「Save」をクリックし、表示されたテキストボックスに”main”と入力。</p>
<p><img src="/images/20170510/photo_20170510_20.png" alt=""></p>
<p>「Save」をクリックします。これで作成したダッシュボードが保存されました。</p>
<p><img src="/images/20170510/photo_20170510_21.png" alt=""></p>
<p>では、もう一つグラフを作成します。</p>
<p>作成したグラフの上にカーソルを当てると、右上にボタンが出てくるので、</p>
<p><img src="/images/20170510/photo_20170510_22.png" alt=""></p>
<p>その中の「鉛筆マーク」をクリックします。</p>
<p><img src="/images/20170510/photo_20170510_23.png" alt=""></p>
<p>グラフの編集画面が開きました。</p>
<p>今度、トラッカー別のPVを表示するグラフを作成。下記の通り値を変更し、「再生ボタン」をクリックし、画面右上の「Save」をクリック。</p>
<table>
<thead>
<tr>
<th style="text-align:left">設定箇所</th>
<th style="text-align:left">値 　</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">[buckets]-&gt;[X-Axis]-&gt;[Terms]</td>
<td style="text-align:left">tracker_name.keyword</td>
</tr>
</tbody>
</table>
<p>表示されたテキストボックスに”PvTracker”と入力し、「Save as a new visualization」にチェックを入れます。</p>
<p><img src="/images/20170510/photo_20170510_27.png" alt=""></p>
<p>そして、「Save」をクリック。グラフが保存されます。</p>
<p>画面左の「Dashboard」をクリック。そして、画面右上の、「Add」をクリックします。</p>
<p><img src="/images/20170510/photo_20170510_25.png" alt=""></p>
<p>「PvTracker」をクリックすると、</p>
<p><img src="/images/20170510/photo_20170510_28.png" alt=""></p>
<p>トラッカー別PVグラフが追加されました。</p>
<p>次に右上の「Add new Visualization」ボタンをクリック。</p>
<p><img src="/images/20170510/photo_20170510_30.png" alt=""></p>
<p>「Select visualization type」画面で「Timelion」をクリックします。</p>
<p>ここで、EVMグラフを作成します。</p>
<p>内容は<a href="https://future-architect.github.io/articles/20170119/">前回</a>のEVMグラフと一緒。</p>
<p>まず、「Timelion」画面が開くので、「Interval」に”1d”を指定。</p>
<p>次に、「Timelion Expression」に下記の値を指定し、再生ボタンをクリックします。</p>
<p><code>.es(metric=&#39;sum:pv&#39;, timefield=&#39;due_date&#39;).cusum().label(&#39;[累積]pv&#39;),.es(metric=&#39;sum:ev&#39;, timefield=&#39;updated_on&#39;).cusum().label(&#39;[累積]ev&#39;),.es(metric=&#39;sum:ac&#39;, timefield=&#39;updated_on&#39;).cusum().label(&#39;[累積]ac&#39;)</code></p>
<p><img src="/images/20170510/photo_20170510_31.png" alt=""></p>
<p>EVMグラフが表示されました。</p>
<p>右上の「Save」をクリック。表示されるテキストボックスに、”EvmAll”と入力し、青い「Save」をクリックします。</p>
<p>これでEVMグラフが保存されました。</p>
<p>画面左側の「Dashboard」をクリック。</p>
<p>そして、画面右上の「Add」をクリックし、「EvmAll」をクリックします。</p>
<p><img src="/images/20170510/photo_20170510_33.png" alt=""></p>
<p>さらに、画面右上の”＾”をクリックすると、</p>
<p><img src="/images/20170510/photo_20170510_34.png" alt=""></p>
<p>EVMグラフの大きさを調整すると、</p>
<p><img src="/images/20170510/photo_20170510_35.png" alt=""></p>
<p>ダッシュボードの完成です。</p>
<p>ではドリルダウン機能も使ってみましょう。</p>
<p>操作はとても簡単。</p>
<p>例えば、特定の担当者名をクリックすると。</p>
<p><img src="/images/20170510/photo_20170510_36.png" alt=""></p>
<p>その担当者が、アサインされているチケットのトラッカー、及び担当者のEVMが表示されます。</p>
<p><img src="/images/20170510/photo_20170510_37.png" alt=""></p>
<p>また、表示期間を絞り込む事もできます。Timelion上で期間を選択することで、</p>
<p><img src="/images/20170510/photo_20170510_38.png" alt=""></p>
<p>この通り。選択された期間で絞り込むことができました。</p>
<h2 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a>最後に</h2><p>今回は、Redmineデータを可視化するダッシュボードを構築しました。今回の設定を拡張することで、様々な軸で、様々な値を可視化することが可能。RedmineをKibanaと組み合わせることで、結果的にプロジェクト状況の把握が容易になります。</p>
<p>本記事が、皆様のプロジェクトマネジメントに役に立てば幸いです。<br>みなさまにとって参考になりそうでしたら「いいね！」をクリックして頂けますと幸いです。執筆の励みになります。＾＾</p>
<p>なお、次回以降私がブログを執筆する際は、ダッシュボード画像のメール配信に関する方法を記載する予定。<br>今後ともよろしくお願い致します。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/20170510/photo_20170510_00.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;
    
    </summary>
    
      <category term="Management" scheme="https://future-architect.github.io/categories/Management/"/>
    
    
      <category term="Elastic-Stack" scheme="https://future-architect.github.io/tags/Elastic-Stack/"/>
    
      <category term="Kibana" scheme="https://future-architect.github.io/tags/Kibana/"/>
    
      <category term="Redmine" scheme="https://future-architect.github.io/tags/Redmine/"/>
    
  </entry>
  
  <entry>
    <title>Unity未経験者がHoloLensアプリの開発をしてみた</title>
    <link href="https://future-architect.github.io/articles/20170421/"/>
    <id>https://future-architect.github.io/articles/20170421/</id>
    <published>2017-04-21T03:00:00.000Z</published>
    <updated>2017-05-09T01:57:18.468Z</updated>
    
    <content type="html"><![CDATA[<p>Unity, C# の未経験者がHoloLensのアプリを開発しました。<br>まだまだHoloLensについての開発情報が少ないと思いますので、アプリを作っていく流れをまとめます。<br>なにか少しでもお役に立てれば嬉しいです！</p>
<p>HoloLensに関する過去記事はこちらをどうぞ。</p>
<ul>
<li><a href="https://future-architect.github.io/articles/20170210/">会社に届いたHoloLensを使ってみた</a></li>
<li><a href="https://future-architect.github.io/articles/20170405/">HoloLensの空間共有サービスを使ってみよう</a></li>
</ul>
<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>はじめまして。名古屋大学の澤田周吾です。就職活動中にフューチャーアーキテクト株式会社さんと出会い、 インターンとしてHoloLens アプリの開発を担当させていただきました。</p>
<p>キッカケはある懇親会の時。私がいきなり「来週からホロレンズ開発のインターンさせてください！」という要望をぶつけたのですが、あっさり「いいよ」と一言。インターンの日程もサクサク決まりHoloLensアプリの開発が始まりました。無茶振りにも華麗に応えてくれるフューチャーさん、好きです。</p>
<h1 id="何を作ったか"><a href="#何を作ったか" class="headerlink" title="何を作ったか"></a>何を作ったか</h1><p>人の前で発表する時って、やっぱり緊張しますよね。<br><img src="/images/20170418/photo_20170418_00.png"></p>
<p>真面目な人の顔って、圧迫感がありますから。</p>
<p><img src="/images/20170418/photo_20170418_01.png"></p>
<p>このような人達の前で発表するのは相当緊張すると思います。<br>しかし、この人達が全てジャガイモだったらどうでしょうか。</p>
<p><img src="/images/20170418/photo_20170418_02.png"><br>発表しやすくなった！<br>みなさん、そう感じると思います。ジャガイモって、ほっこりしますよね。<br>ということで、人類芋化計画を実現させていきます。</p>
<p>つまり <strong>人の顔をジャガイモに置き換える</strong> アプリ、名づけて <strong>Potato Heads</strong> です。</p>
<p>実現に向けての技術的な見通しは…</p>
<ol>
<li>HoloLensのカメラから、顔認証技術を使って顔の部分の位置座標を検出</li>
<li>そこに画像の大きさを合わせて出力する<br>という2段構えで実現できると考えました。</li>
</ol>
<p>実際に作った Potato Heads の動画はこちら↓↓↓</p>
<p><blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">私が作ったHoloLensアプリの Potato Heads !<br>人の顔をジャガイモにします！ <a href="https://t.co/nu5SOPSrME" target="_blank" rel="external">pic.twitter.com/nu5SOPSrME</a></p>&mdash; sSgo (@ssogoss) <a href="https://twitter.com/ssogoss/status/852385164814450688" target="_blank" rel="external">2017年4月13日</a></blockquote></p>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<h1 id="使用したもの"><a href="#使用したもの" class="headerlink" title="使用したもの"></a>使用したもの</h1><ul>
<li>HoloLens</li>
<li>Unity 5.5</li>
<li>C#</li>
<li>HoloToolkit-Unity</li>
<li>OpenCV For Unity</li>
<li>HoloLensWithOpenCVForUnityExample.unitypackage</li>
<li>PCスペック<ul>
<li>windows10 Home<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></li>
<li>メモリ4GB<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></li>
</ul>
</li>
</ul>
<h1 id="開発環境構築"><a href="#開発環境構築" class="headerlink" title="開発環境構築"></a>開発環境構築</h1><p>UnityとVisual Studioのインストールについてはこちらを参考にさせていただきました。<br><a href="http://azure-recipe.kc-cloud.jp/2016/12/hololens-install/" target="_blank" rel="external">HoloLens UnityとVisual Studioのインストール | ナレコムazureレシピ</a></p>
<h2 id="Unityのプロジェクトを作成"><a href="#Unityのプロジェクトを作成" class="headerlink" title="Unityのプロジェクトを作成"></a>Unityのプロジェクトを作成</h2><ol>
<li>Unityを起動</li>
<li>右上のNEWボタンを押します</li>
<li>Project Name 記入、任意の保存先選択、3Dを選択</li>
<li>Create projectボタンを押します</li>
</ol>
<p>これで新しいプロジェクトが作成されます。</p>
<p>Unityのレイアウトについては右上のLayoutドロップダウンから2by3を選択すると以下のように配置されます。</p>
<p><img src="/images/20170418/photo_20170418_03.png"><br>(引用：<a href="http://qiita.com/2dgames_jp/items/11bb76167fb44bb5af5f" target="_blank" rel="external">http://qiita.com/2dgames_jp/items/11bb76167fb44bb5af5f</a>)</p>
<h2 id="HoloToolkit-Unityのダウンロード"><a href="#HoloToolkit-Unityのダウンロード" class="headerlink" title="HoloToolkit-Unityのダウンロード"></a>HoloToolkit-Unityのダウンロード</h2><p>アプリ開発を効率よくしてくれる HoloToolkit は、Unity用に HoloToolkit-Unity が存在するので、Unityで開発する場合はそちらを利用します。<br><a href="https://github.com/Microsoft/HoloToolkit-Unity" target="_blank" rel="external">GitHub:HoloToolkit-Unity</a><br>↑ここからZIPファイルをダウンロードして、任意の場所に展開しておきます。</p>
<h2 id="初期設定"><a href="#初期設定" class="headerlink" title="初期設定"></a>初期設定</h2><ol>
<li>先ほどダウンロードして展開しておいたHoloToolkit-Unityフォルダを開き、<br><code>任意の場所\HoloToolkit-Unity-master\Assets</code> 内の <code>HoloToolkitフォルダ</code> と<br><code>HoloToolkit.meta</code> をProjectビューのAssetsにドラッグアンドドロップします。<br>インポートが始まるのでしばし待ちます。<br>ここまでうまくいっていればメインメニューに「 HoloToolkit 」が追加されているはずです。<br>ここからHoloLensアプリに必要な初期設定を簡単に行うことができます。</li>
<li>まずはプロジェクトの初期設定<ol>
<li><code>メインメニューのHoloToolkit &gt; Configure &gt; ApplyHoloLensProjextSettings</code> をクリック<br><img src="/images/20170418/photo_20170418_04.png"></li>
<li>以下のようなポップアウトが開くので全てにチェックを入れてApplyボタンを押します。<br><img src="/images/20170418/photo_20170418_05.png"></li>
<li>Reload now? と聞かれるのでYesをクリックします。</li>
<li>いったんUnityが閉じ、開き直されます。<br>これでプロジェクトの初期設定は完了です。</li>
</ol>
</li>
<li>次にメインカメラの初期設定をします。<ol>
<li><code>メインメニューのHoloToolkit &gt; Configure &gt; ApplyHoloLensSceneSettings</code> をクリック<br><img src="/images/20170418/photo_20170418_06.png"><br>2.先ほどと同じようにポップアウトが開くので全てにチェックを入れてApplyボタンを押します。<br><img src="/images/20170418/photo_20170418_07.png"></li>
</ol>
</li>
</ol>
<p>HoloLensでは黒は透過を意味するので、背景は黒に設定する必要があり、そのような設定がここで行われています。</p>
<p>ここまでで、初期設定は終了です。<br>アプリを作る際、ここまでの作業は毎回行うことになると思います。</p>
<h2 id="余談"><a href="#余談" class="headerlink" title="余談"></a>余談</h2><p>HoloLensにおいて <strong>現実世界のモノを消す技術</strong>（＝DR: DIMINISHED REALITY）は難しいです。<br>カメラ映像の世界では何年も前からDRが実現できている<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>ので不思議に思った方も多いと思います。</p>
<p>HoloLensは現実世界の物は透過して、プラスしたいモノをレンズに光をプラスすることによって、上乗せて表示させるような原理になっています。そのため、何か消したいとしても光を上乗せすることしかできず、それゆえどうしてもリアリティの差が出てしまいます。現実世界の物とプラスした光の物の区別ができないレベルまでリアリティをもたすことができれば可能になると思いますが、まだまだ技術の進歩を待つ必要がありそうです。</p>
<h1 id="アプリ開発"><a href="#アプリ開発" class="headerlink" title="アプリ開発"></a>アプリ開発</h1><p>ここからHoloLensアプリケーション開発の流れを説明します。</p>
<h2 id="簡単なオブジェクトの作成"><a href="#簡単なオブジェクトの作成" class="headerlink" title="簡単なオブジェクトの作成"></a>簡単なオブジェクトの作成</h2><p>簡単な物なら、<code>Hierarchyビュー右クリック &gt; 3D Object &gt; Cube</code> から立方体を作成します。<br>Inspectorビューの設定を以下のようにすると視認性が高く表示できます。</p>
<ul>
<li>Position : 0, 0, 1</li>
<li>Rotation : 45, 45, 45</li>
<li>Scale : 0.1, 0.1, 0.1<br><img src="/images/20170418/photo_20170418_08.png"></li>
</ul>
<p>作業を残したい場合は <code>メインメニュー File &gt; Save Scenes</code> から作成したSceneに任意の名前を入力して保存できます。</p>
<h2 id="Potato-Headsのつくり方"><a href="#Potato-Headsのつくり方" class="headerlink" title="Potato Headsのつくり方"></a>Potato Headsのつくり方</h2><p>Potato Headsの設定をここから記載します。<br>とりあえず簡単なものを動かしてみたい方は、上記の簡単なオブジェクトを作成したら、この小段落は飛ばしてビルドに移ってください。</p>
<ol>
<li>導入するアセットを下記からダウンロード<ul>
<li>顔認証を使うために OpenCV を導入します。また、OpenCV を HoloLens で動くようにするためのアセットが HoloLensWithOpenCVForUnityExample.unitypackage です<ul>
<li><a href="https://www.assetstore.unity3d.com/jp/#!/content/21088" target="_blank" rel="external">OpenCV For Unity</a>　(私は2.1.5を購入)</li>
<li><a href="https://github.com/EnoxSoftware/HoloLensWithOpenCVForUnityExample" target="_blank" rel="external">HoloLensWithOpenCVForUnityExample.unitypackage</a></li>
</ul>
</li>
</ul>
</li>
<li>先ほどHoloToolkit-Unityをインポートした時と同様に、インポート<ol>
<li><code>OpenCVforUnity/Assets</code> 内の OpenCVForUnity, OpenCVForUnity.meta をプロジェックトの Assets にドラッグアンドドロップ</li>
<li><code>HoloLensWithOpenCVForUnityExample/Assets</code> 内のすべて4ファイルをプロジェクトのAssets にドラッグアンドドロップ</li>
<li><code>Assets/OpenCVForUnity/StreamingAssets</code> を Assets 直下に出します</li>
<li><code>Assets/OpenCVForUnity/OpenCVForUnityUWP_Beta3</code> 圧縮ファイルを展開</li>
<li><code>Assets/OpenCVForUnity/OpenCVForUnityUWP_Beta3/OpenCVForUnityUWP_Beta3</code> を実行</li>
<li>OpenCV を HoloLens で使用するために必要なファイルがインポートされるので、Allを選択し、Importボタンをクリック</li>
</ol>
</li>
</ol>
<p>ここまでできていれば以下の画像のようなAssets構造になっているはずです。<br><img src="/images/20170418/photo_20170418_09.png"></p>
<p>この状態で <code>HoloLensWithOpenCVForUnityExample/Scenes</code>内のサンプルはHoloLens上でも動きます。</p>
<p>ここで私は <code>Scene/HoloLensAnonymousFaceExample</code> を使用します。<br>人の顔を検知して画像をかぶせるサンプルです。</p>
<p>好きな画像にしたい場合は、以下の1～2手順で変更できます。</p>
<ol>
<li><code>Assets/HoloLensAnonymousFaceExample/Resources</code> に画像を保存</li>
<li><code>Assets/HoloLensAnonymousFaceExample/Scripts/Overlay/AnonymousRectQuad</code> のInspectorビューの一番下の AnonymousRectQuadMaterial の左下の下三角を押すと詳細がでるので、そこで画像のSelectから好きな画像を選択（下画像を参照）<br><img src="/images/20170418/photo_20170418_10.png"></li>
</ol>
<h1 id="ビルド"><a href="#ビルド" class="headerlink" title="ビルド"></a>ビルド</h1><ol>
<li><code>メインメニュー &gt; Build Settings</code> をクリック</li>
<li>以下の設定の確認します<ul>
<li>SDK : Universal 10</li>
<li>UWP Build Type : D3D</li>
</ul>
</li>
<li>Unity C# Projects にチェックをつけます</li>
<li>Add Open Scenesボタンから先ほどビルドしたいSceneを追加します</li>
<li>Build ボタンをクリック<br><img src="/images/20170418/photo_20170418_11.png"></li>
<li>ビルド先が聞かれるので、開かれるフォルダの中にAppフォルダを作って、そこをビルド先にするといいです</li>
<li>ビルドが完了したら、フォルダが自動で開かれるので、先ほどのビルド先フォルダ内の <code>[プロジェクト名].sln</code> をVisual Studioで開きます</li>
<li>Visual Studioで開いたら、上にあるドロップダウンを Release, x86, Device に設定します<br><img src="/images/20170418/photo_20170418_12.png"></li>
<li>HoloLensをPCに接続し、電源をつけておきます</li>
<li><code>メインメニュー デバッグ &gt; デバッグなしで開始</code> をクリック</li>
</ol>
<p>1～10の作業を行えば、HoloLens用にアプリがビルド・デプロイされます。<br>うまく完了すれば、HoloLensに転送したアプリが自動で起動して、開発したアプリを見ることができるはずです。</p>
<p>以上で、一連のHoloLensアプリの開発は完了です。</p>
<h1 id="デバッグについて"><a href="#デバッグについて" class="headerlink" title="デバッグについて"></a>デバッグについて</h1><p>私はWindows10 Home で開発していて、Emulatorが使えない環境だったので、HoloLensで起動しているアプリのログをとることができませんでした。<br>そのため「3D Text」をつくり、それを変更することでログとしての役割を持たせデバッグしていました。</p>
<figure class="highlight c"><figcaption><span>TextChange.cs</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> System.Collections;</div><div class="line"><span class="keyword">using</span> System.Collections.Generic;</div><div class="line"><span class="keyword">using</span> UnityEngine;</div><div class="line"></div><div class="line"><span class="keyword">namespace</span> DlibFaceLandmarkDetectorExample &#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">class</span> TextChange : MonoBehaviour &#123;</div><div class="line">        <span class="built_in">string</span> text = <span class="string">""</span>;</div><div class="line"></div><div class="line">        <span class="comment">// Use this for initialization</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span><span class="params">()</span> </span>&#123;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// Update is called once per frame</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Update</span><span class="params">()</span> </span>&#123;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Change</span><span class="params">(<span class="built_in">string</span> newtext)</span></span></div><div class="line">        &#123;</div><div class="line">            text = text + newtext;</div><div class="line">            GetComponent&lt;TextMesh&gt;().text = text;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>上のメソッドを用意しておいて、デバッグしたいコードの中でこのメソッドに飛ばすという形です。<br>クラスの中でパスを定義↓しまして…</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">TextChange textChange;</div><div class="line">GameObject refObj;</div><div class="line">refObj = GameObject.Find(<span class="string">"3DText名"</span>);</div></pre></td></tr></table></figure>
<p>メソッドに飛ばします↓</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">textChange = refObj.GetComponent&lt;TextChange&gt;();            </div><div class="line">textChange.Change(<span class="string">"test\n"</span>);</div></pre></td></tr></table></figure>
<p>この手法を用いてデバッグを行いました。</p>
<h1 id="インターン成果発表会"><a href="#インターン成果発表会" class="headerlink" title="インターン成果発表会"></a>インターン成果発表会</h1><p>インターン当初はもっと高度なことをやろうと計画立てていましたが、開発期間4日間という短い期間だったため、途中で方向転換し、期間内で物をつくりあげることを大切にしました。</p>
<p><img src="/images/20170418/photo_20170418_13.png"></p>
<p>最後の発表会はHoloLensをつけて、オーディエンスをイモにしてリラックスしながら進めました。笑</p>
<p><img src="/images/20170418/photo_20170418_14.png"></p>
<p>発表会の後には体験もしてもらい、なぜかイモになる側が盛り上がりました。</p>
<p><img src="/images/20170418/photo_20170418_15.png"></p>
<p>HoloLensごしから撮影すると上記のような感じです。<br>無理やり撮影しているので色がおかしいですが、人間が見るとキレイにジャガイモに見えます。<br>ちなみに、距離が離れたメガネの人は顔認識が行いにくいようです。</p>
<h1 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h1><p>Unity上では動くけれどHoloLensに転送するとうまく動かないといったものもあり、大変なところもありました。<br>具体的には、入力画像をマトリックスで処理していく際、その処理のメソッドに飛ばすところで止まってしまうことがありました。</p>
<p>HoloLensのアプリを開発するにあたって、使用する技術の分野は未経験でしたがアプリとして形にすることができました。<br>フューチャーさんの技術的アドバイスがあったからこそだと感じています。</p>
<p>Potato Heads はストア申請をしていて、近日中にWindowsストアに公開されると思います！<br>→公開されました！(2017/04/14時点)<br>　<a href="https://www.microsoft.com/en-us/store/p/poteto-heads/9pmqvw7znj1v" target="_blank" rel="external">Potato Heads - Microsoft Store</a></p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">エディションHomeは HoloLens のアプリ開発ではイバラの道。PC上でシミュレーションできるemulatorが入らないからです</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">windowsの推奨は8GBですが、4GBでも開発できました</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;">(参考) <a href="http://developer.cybozu.co.jp/akky/2010/10/ar-diminished/" target="_blank" rel="external">http://developer.cybozu.co.jp/akky/2010/10/ar-diminished/</a></span><a href="#fnref:3" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Unity, C# の未経験者がHoloLensのアプリを開発しました。&lt;br&gt;まだまだHoloLensについての開発情報が少ないと思いますので、アプリを作っていく流れをまとめます。&lt;br&gt;なにか少しでもお役に立てれば嬉しいです！&lt;/p&gt;
&lt;p&gt;HoloLensに関する過去
    
    </summary>
    
      <category term="VR" scheme="https://future-architect.github.io/categories/VR/"/>
    
    
      <category term="Unity" scheme="https://future-architect.github.io/tags/Unity/"/>
    
      <category term="HoloLens" scheme="https://future-architect.github.io/tags/HoloLens/"/>
    
  </entry>
  
  <entry>
    <title>Elixir Conf Japan 2017 参加レポート</title>
    <link href="https://future-architect.github.io/articles/20170414/"/>
    <id>https://future-architect.github.io/articles/20170414/</id>
    <published>2017-04-14T03:00:00.000Z</published>
    <updated>2017-05-09T01:57:18.463Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/20170412/photo_20170412_01.png" class="img-small-size"></p>
<h1 id="Elixir-Conf-Japan-2017-に参加しました"><a href="#Elixir-Conf-Japan-2017-に参加しました" class="headerlink" title="Elixir Conf Japan 2017 に参加しました"></a>Elixir Conf Japan 2017 に参加しました</h1><p>弊社がミッションクリティカルなシステムを構築する際には、実績やノウハウが充実した固い技術要素を選択することも多いのですが、絶え間無く進化する技術の恩恵を享受すると共に自身もコミッタとして貢献するべく、先端技術のキャッチアップにも注力しています。そんな技術調査の一環として4月1日、秋葉原コンベンションホールで開催された<a href="http://www.elixirconf.jp/" target="_blank" rel="external">Elixir Conf Japan 2017</a>に参加してきました。<br>未だ社内には採用実績が無くウォッチャーも少ない言語の為、言語仕様と歴史的背景の大まかな理解のみを携えて、まずは採用事例やその背景を伺う事を目的としました。</p>
<h2 id="Elixir-とは"><a href="#Elixir-とは" class="headerlink" title="Elixir とは"></a>Elixir とは</h2><p>Elixirは、一言で言えば<strong>「モダンなErlang」</strong>です。Erlangは30年前から電話会社のネットワークシステムを支えてきた、耐障害性と強力な並行処理のサポートを持つ言語で、それらの実装を支えるライブラリとデザイン集である<strong>「OTP」</strong>とセットで多くの場合<strong>「Erlang/OTP」</strong>と呼ばれます。</p>
<p>ErlangはWebサービスの様な高レベルなアプリケーションサーバではなく、低層のネットワークサーバやミドルウェアが主用途とされてきた為、独自の発展を遂げて仕様やライブラリやビルドシステムは一般的に馴染みのある他言語の使用感とは一線を画していました。</p>
<p>Elixirは、Erlang/OTPの特長はそのままに、近年のトレンドであるパッケージ管理やビルドの仕組やメタプログラミング、LL風のプログラミングスタイルといった物を持ち込んで、世の中の多くのプログラマーにとって馴染み易い言語となっています。</p>
<ul>
<li>紹介リンク<ol>
<li><a href="https://elixirschool.com/jp/lessons/basics/basics/" target="_blank" rel="external">Elixir School</a></li>
<li><a href="http://dev.classmethod.jp/server-side/web_language_topic-elixir_introduction/" target="_blank" rel="external">最近話題のWeb言語 Elixirのご紹介</a>（2015年11月の記事）</li>
</ol>
</li>
</ul>
<h2 id="Elixir-Conf-Japan-2017-概要"><a href="#Elixir-Conf-Japan-2017-概要" class="headerlink" title="Elixir Conf Japan 2017 概要"></a>Elixir Conf Japan 2017 概要</h2><p>[<a href="https://elixirconf.connpass.com/event/47856/presentation/" target="_blank" rel="external">発表資料</a>]<br>Elixirのコミュニティの活動としては、 <a href="http://sapporo-beam.github.io/" target="_blank" rel="external">Sapporo.beam</a> や <a href="https://beam-lang.connpass.com/" target="_blank" rel="external">tokyo.ex</a> と言ったイベントが開催されています。そんな中、今回のカンファレンスはElixir作者のJosé Valim氏を招聘し、300人規模の会場で9時間で8セッション・8LTと日本では過去最大規模のイベントとなりました。有料(¥4,000)にも関わらず前日には参加枠が埋まり、当日はホールも懇親会会場も満員御礼の大盛況でした。</p>
<p>まだ若い言語だけあってセッションでは「運用してみて課題が見えて来た」「本格的な稼働はこれから」といった報告が多めでした。またElixir Confと銘打ちながらもErlang/OTPの話題に触れる機会が多く、「Erlang/OTPを使う手段としてのElixir」という位置付けの印象が強かったです。事実、主催者の方を含め複数の人が「次回は”Erlang &amp; Elixir Conf”で良いんじゃないか？」との感想をお持ちの様です。</p>
<p>参加者層は（あくまで見た感じでの主観ですが）幅広い年齢層、女性が3～4%、外国人が5%くらい？という印象でした。9割9分がMBP/Macbookでした。開演の挨拶で「メリットを強調しようとすると他をディスる論調になりがちだけど絶対やめて！！！」と強く釘を刺されていました。</p>
<h2 id="Opening-Keynote-Jose-Valim-さん"><a href="#Opening-Keynote-Jose-Valim-さん" class="headerlink" title="Opening Keynote - José Valim さん"></a>Opening Keynote - José Valim さん</h2><p>オープニングの基調講演は、Elixirの生みの親による、Elixir誕生前夜の舞台裏から今後の展望について。Railsのコアメンバーでもある同氏は、Rubyで並行プログラムを安全にかつフル活用する良い方法が見付からず悩んでいた所に <a href="https://www.amazon.co.jp/dp/193435659X" target="_blank" rel="external">Seven Languages in Seven Weeks</a> でErlang/OTPを知り、並行プログラムとの親和性の高さや安全性に惹かれ……といった所から始まり、メタプログラミングの導入と明示性の確保の間の苦悩等、言語開発者ならではの興味深い示唆と人間味の混じった誕生秘話が披露されました。今後の導入予定として語られた内容は以下1～3です。</p>
<h3 id="1-UTF-8-Atoms-in-progress"><a href="#1-UTF-8-Atoms-in-progress" class="headerlink" title="1. UTF-8 Atoms  (in progress)"></a>1. UTF-8 Atoms  (in progress)</h3><ul>
<li>日本語でテストが書ける</li>
<li><del>Emojiでソースが書ける</del><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">from 🍺 <span class="keyword">in</span> 🍻, </div><div class="line">    <span class="symbol">order_by:</span> 🍺.💰,</div><div class="line">    <span class="symbol">join:</span> 🍗 <span class="keyword">in</span> assoc(🎉, <span class="symbol">:</span>🍴)</div><div class="line">    |&gt; Repo.all</div><div class="line">    |&gt; Enum.each(💸)</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-genHTTP-early-research"><a href="#2-genHTTP-early-research" class="headerlink" title="2. genHTTP (early research)"></a>2. genHTTP (early research)</h3><ul>
<li>HTTPに応答するlow levelなビヘイビア？名前からして超気になる所ですが詳細は聞き取れませんでした。<ul>
<li>Type System (early research)</li>
</ul>
</li>
<li>静的型付け！公言したのはメーリングリスト含め今会場が初めてだそうです。どよめきました。</li>
<li>現時点では、ErlangVMには所謂厳密な静的型システムが有りませんが、Dialyzerという静的解析ツールをコンパイル後に実行する事でチェックする事が出来ます。ただ後のvoluntasさんのお話によると1万行のモジュールの解析に1分近くかかるとの事<ul>
<li>また懇親会で伺った話によると <a href="https://github.com/skirino/croma" target="_blank" rel="external">skirino/croma</a> というツール(日本の方!)を提供されていて、マクロによりコンパイル時の型チェックを実現できているという事でした。<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">import Croma.Defun</div><div class="line">defun f(a <span class="symbol">:</span>: integer, b <span class="symbol">:</span>: String.t) <span class="symbol">:</span>: String.t <span class="keyword">do</span></div><div class="line">  <span class="string">"<span class="subst">#&#123;a&#125;</span> <span class="subst">#&#123;b&#125;</span>"</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h3 id="3-Data-Stream-amp-Property-based-testing-early-research"><a href="#3-Data-Stream-amp-Property-based-testing-early-research" class="headerlink" title="3. Data Stream &amp; Property based testing (early research)"></a>3. Data Stream &amp; Property based testing (early research)</h3><ul>
<li>QuickCheck的な物ですね</li>
</ul>
<h2 id="Session-1-Phoenix-で作るスケーラブルなリアルタイムゲームサーバー-株式会社ミクシィ-XFLAG-STUDIO-古城秀隆さん"><a href="#Session-1-Phoenix-で作るスケーラブルなリアルタイムゲームサーバー-株式会社ミクシィ-XFLAG-STUDIO-古城秀隆さん" class="headerlink" title="Session 1 - Phoenix で作るスケーラブルなリアルタイムゲームサーバー - 株式会社ミクシィ XFLAG STUDIO 古城秀隆さん"></a>Session 1 - Phoenix で作るスケーラブルなリアルタイムゲームサーバー - 株式会社ミクシィ XFLAG STUDIO 古城秀隆さん</h2><p>「Elixir歴が日本一長い」と自負するXFLAGでの採用経緯と運用事例です。</p>
<h3 id="利用用途"><a href="#利用用途" class="headerlink" title="利用用途"></a>利用用途</h3><ul>
<li>モンストのバックエンドの他、”XFLAG STATION”のアプリケーションサーバとしてElixir、Phoenixを使用中</li>
</ul>
<h3 id="モバイルゲームの特徴"><a href="#モバイルゲームの特徴" class="headerlink" title="モバイルゲームの特徴"></a>モバイルゲームの特徴</h3><ul>
<li>大量の更新リクエスト</li>
<li>イベント開催中のトラフィック増</li>
<li>協力プレイなどでリアルタイム通信は当たり前。サーバからのプッシュ通信もしたい</li>
</ul>
<h3 id="Elixirがもたらしたもの"><a href="#Elixirがもたらしたもの" class="headerlink" title="Elixirがもたらしたもの"></a>Elixirがもたらしたもの</h3><ul>
<li>メモリがあふれない限り大量のリクエストを漏らさず打ち返す。スループットはリクエストの量とサーバリソースに対して概ね線形に推移する</li>
<li>ErlangVMのホットデプロイでクライアントを切断する事無くサーバサイドのバージョンアップが実現する……かに思えたが実際には不具合に悩まされた<br>VM内にバージョン違いのモジュールが一時的に混在したり、旧バージョンの関数への参照を保持していたプロセスが予期せず落ちたり等<br>※これは<a href="http://sile.github.io/slide/kbkz_tech_05/#/18" target="_blank" rel="external">ドワンゴさんも通って来た道ですね。</a></li>
<li>MySQLは大量のリクエストを受けると詰まる。ectoのプロセスが緩和してくれた</li>
</ul>
<h3 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h3><ul>
<li>モバイルは通信がよく切れたり別経路で再接続したりする。cowboyのWebsocketとRabbitMQによるpubsubで対応した</li>
<li>Erlangのデフォルトのpubsubはサーバのクラスタリングが必要だったためRabbitMQにした</li>
</ul>
<h2 id="Session-2-Elixirから始める関数型言語-Claude-Tech株式会社-CTO-Perez-Danielさん"><a href="#Session-2-Elixirから始める関数型言語-Claude-Tech株式会社-CTO-Perez-Danielさん" class="headerlink" title="Session 2 - Elixirから始める関数型言語 - Claude Tech株式会社 CTO Perez Danielさん"></a>Session 2 - Elixirから始める関数型言語 - Claude Tech株式会社 CTO Perez Danielさん</h2><p>会社でのElixir採用歴1年、Tokyo.exでもよく登壇されているとの事。関数型言語の初心者向けに、以下1～4の特徴やElixirでの使用方法についての発表でした。個人的には、知っている人には「ああ、あれね」で通じるが初心者にとっては宇宙語では…？という印象を持った発表内容とスピードでしたが、心配には及ばず好評のようです。</p>
<ol>
<li>パターンマッチ</li>
<li>再帰</li>
<li>高階関数</li>
<li>不変性</li>
</ol>
<h2 id="Session-3-Elixir導入提案-株式会社gumi-CTO-幾田雅仁さん"><a href="#Session-3-Elixir導入提案-株式会社gumi-CTO-幾田雅仁さん" class="headerlink" title="Session 3 - Elixir導入提案 - 株式会社gumi CTO 幾田雅仁さん"></a>Session 3 - Elixir導入提案 - 株式会社gumi CTO 幾田雅仁さん</h2><p>nine nines(99.9999999%)のSLAを実現できると知って以来Erlang/OTPに惚れ込み10年になる幾田さん。隙あらばErlangなErlangおじさん。<strong>「今後gumiはElixirとともにある。Python2は3へは移行しません」</strong>と宣言しました。社内外含め初の公表だそうです。Alchemist的には勇気づけられますが、pythonistaの心境や如何に。</p>
<ul>
<li>10年前の職場で決済代行サービスにErlang/OTPを導入したが、perlとの接続等もあって複雑な構造になり、勉強会を何度も開催しても後続が育たなかった。気付けば皆Scalaに行った</li>
<li>gumi入社後、認証・課金の共通基盤を手掛ける事になり、早速Erlangでの開発を決めて時雨堂さんに発注した。以来4年間、計画的停止とAWS障害の2回を除き止まった事が無い。サーバ運用が超楽に、かつ安く上がっている。しかしErlang/OTPで組まれたシステムのメンテナンスは相変わらずトラックナンバー1</li>
<li>Elixirは馴染みやすい文法でErlang/OTPの信頼性とスケーラビリティを享受できる</li>
<li>現在は基盤のErlang/OTPをElixirに置き換えつつある</li>
<li>まだ一般社員向けの体系的トレーニングには至っていない。ゲームのサービスとしてリリースされるのは3年程先か</li>
<li>Erlang/OTPのプロセス設計は他の処理系には無い特徴が有り難しい。Elixirでもその点は同様。教育でもOTPに重点を置いている</li>
<li>シンガポールにオフショア開発を委託した実績がある</li>
<li>Dynamoを使う上でectoは不要で、Plugとcowboyで充分だったのでPhoenixは採用しなかった</li>
<li>求人数を調べると辛うじてErlangに勝っていた。Ruby:5k Elixir:54 Erlang:46</li>
</ul>
<h2 id="Session-4-Elixir-はリアルタイムWeb-に強いというのは本当か？-mururuさん"><a href="#Session-4-Elixir-はリアルタイムWeb-に強いというのは本当か？-mururuさん" class="headerlink" title="Session 4 - Elixir はリアルタイムWeb に強いというのは本当か？ - mururuさん"></a>Session 4 - Elixir はリアルタイムWeb に強いというのは本当か？ - mururuさん</h2><p>東京大学大学院の院生にして、時雨堂から高難易度の仕事を任されたり、サンフランシスコのErlang Factoryで飛び入りLTしたりと、日本屈指のErlang/OTP・Elixirのエキスパートmururuさん。まず「リアルタイムWeb」という言葉の要件を定義して、そこにElixirはどう寄与するか？というお話。</p>
<ul>
<li>リアルタイムWebの課題<ul>
<li>大量コネクション</li>
<li>ステートフル</li>
<li>低遅延</li>
<li>耐障害性</li>
</ul>
</li>
<li>Erlang/OTPの軽量プロセスの特長<ul>
<li>一般的なグリーンスレッドと比べてもフットプリントが小さく、大量に起動してもメモリフレンドリー</li>
<li>軽量プロセス間でデータを共有しないのでGCがプロセス単位。stop the worldしない</li>
<li>グリーンスレッドを謳う処理系も、実は内部にCooperativeな部分が相当残っているErlang/OTPは極めてPreemptiveなスケジューリング（※例えば<a href="https://github.com/golang/go/issues/114629" target="_blank" rel="external">goroutineは”partially preemptive”</a>とか言われていますね）</li>
<li>軽量プロセス間で独立しているので障害が他の軽量プロセスに波及しない。逆に軽量プロセス別に障害を監視してハンドリングする事も可能</li>
</ul>
</li>
<li>リアルタイムWebシステムが抱える課題に対し、軽量プロセスがもたらすメリットを挙げた上で、「それでもそれらを正しく活かすプロセス設計は大変」</li>
<li>プロセス設計がプアだと、メッセージパッシングがボトルネックになってパフォーマンス劣化に繋がり易い</li>
<li>Phoenix 等のフレームワークに乗れば、複雑なプロセス設計を賄ってくれる</li>
</ul>
<h2 id="Session-5-Rubyist-gt-o-gt-Alchemist-〜Elixirの採用からサービス稼動までの記録〜-株式会社ドリコム-大原常徳さん"><a href="#Session-5-Rubyist-gt-o-gt-Alchemist-〜Elixirの採用からサービス稼動までの記録〜-株式会社ドリコム-大原常徳さん" class="headerlink" title="Session 5 - Rubyist |&gt; (^o^) |&gt; Alchemist 〜Elixirの採用からサービス稼動までの記録〜 - 株式会社ドリコム 大原常徳さん"></a>Session 5 - Rubyist |&gt; (^o^) |&gt; Alchemist 〜Elixirの採用からサービス稼動までの記録〜 - 株式会社ドリコム 大原常徳さん</h2><p>ここまでとは毛色が変わって導入におけるチーミングや運用の話がメインでした。</p>
<ul>
<li>RailsからElixirへの移行</li>
<li>開発者に求めるスキルは「テストが書ける」事が実務の壁。並行処理やプロセス設計への理解はレビュアに求めるスキル</li>
<li>Elixirを使えば並行プログラムは簡単に書ける、だが逐次処理はもっと簡単に書けてしまう。意識して並行化可能なプログラムを書く必要がある点は他と変わらない</li>
<li>Red-Green-Refactorのサイクルに「平行化する」（あるいは「しないと判断する」）ステップを加える。という提唱</li>
<li>一般的なHeartBeatによる死活監視だと、プロセスが死んでもSuperviserがすぐ再起動するので検知できない。対応した通知機構を持つ必要がある</li>
<li>Erlang/OTP,Elixirはバージョンアップの頻度が高い。しかもErlang/OTPとElixirとのバージョンの組み合わせの選択も発生する。Elixirが年2回マイナーバージョンアップ、Erlang/OTPが年1回メジャーバージョンアップ</li>
<li>デバッグ中にErlangで書かれたソースを読む機会が往々にしてある</li>
<li>関数型言語の学習にはHaskel入門がおすすめ（※と言ってもElixirにはプレーンな状態だと関数合成やらカリー化やらモナドやらも無いので意図して深みにハマらない限りそこまでモナモナしい領域には達しないと思います）</li>
</ul>
<h2 id="Session-6-ニコニコを支えるErlang-Elixir-〜-大規模運用して初めて見えたアレやコレ-株式会社ドワンゴ-原耕司さん"><a href="#Session-6-ニコニコを支えるErlang-Elixir-〜-大規模運用して初めて見えたアレやコレ-株式会社ドワンゴ-原耕司さん" class="headerlink" title="Session 6 - ニコニコを支えるErlang/Elixir 〜 大規模運用して初めて見えたアレやコレ - 株式会社ドワンゴ  原耕司さん"></a>Session 6 - ニコニコを支えるErlang/Elixir 〜 大規模運用して初めて見えたアレやコレ - 株式会社ドワンゴ  原耕司さん</h2><p>ニコニコ動画のコンテンツ配信システム Dwango Media Clusterについて。開発者20人で55万行のErlangに2万行のRustなど文字通り桁外れです。残念ながらElixirの話はほぼありませんでした。DMCでは形式的記述で「レシピ」を書くとErlang/C++/Lua等々のソース6万行を自動生成とか、開発部門の作業スケジュールを工数と優先度から自動生成＆公開しているとかいった発表内容自体は面白かったです。</p>
<p>今回の発表では触れられませんでしたが、<a href="http://niconare.nicovideo.jp/watch/kn2178" target="_blank" rel="external">ニコニコ動画の生放送の配信システムでもErlang/OTPが使われていて、こちらは10万locという事が以前発表されていました。</a></p>
<ul>
<li>巨大なバイナリデータをshared heap領域で管理し軽量プロセスはそこへのポインタを持つ形で構成していた。プロセスが死んだ後もshared heap内でデータが生き残り、毎時2GBのメモリリークが発生した。monitorが死んだプロセスのDOWNを発信しなかった。根本的に解決出来なかったが自力でmonitor_with_pollingして回避した。</li>
</ul>
<h2 id="LT"><a href="#LT" class="headerlink" title="LT"></a>LT</h2><p>よくある勉強会のノリでみなさん思い思いの「作ってみた」等々披露されていました。時間切れの銅鑼の音が心臓に悪いと不評で、音量を控えめにしてからは「ホワァ～ン」と気の抜けた音になったりしました。</p>
<ul>
<li>Why did we decide to start using Elixir?<ul>
<li>by ma2geさん</li>
<li>楽しんで進化する為</li>
</ul>
</li>
<li>「Surge」 - Amazon DynamoDB for Elixir<ul>
<li>by hirocaster</li>
<li>AWSのSDKにElixir用が無かったので</li>
</ul>
</li>
<li>初心者のElixir |&gt; Flow,GenStage |&gt; Concurrent MapReduce<ul>
<li>by ovrmrvさん</li>
<li>Elixirと言えど気を抜くと逐次処理になるぞ、性能落ちるぞ、を端的に見せ付けられて非常に良かったです</li>
</ul>
</li>
<li>Elixir client from OpenAPI(Swagger) definition<ul>
<li>by niku_nameさん</li>
<li>SwaggerでElixirクライアントソースを生成</li>
</ul>
</li>
<li>AngulaとElixirの新しい関係 <ul>
<li>by isyumi_netさん</li>
<li>[<a href="https://www.slideshare.net/ssuserd34c39/angulaelixir" target="_blank" rel="external">スライド</a>]</li>
<li>サーバとクライアントの2階建てMVC辛い。FluxのView部分だけAngularで書いて、後は全部Elixir/Phoenixで提供して1階建てMVCにするという夢のような悪夢のような試み。この方式、個人的に将来性がとても気になります</li>
</ul>
</li>
<li>ElixirでHubotを倒す<ul>
<li>ne_sachirouさん</li>
<li>実家のような安心感のある結論でした</li>
</ul>
</li>
<li>「APIサーバーとしてのCowboy」<ul>
<li>by hayabusa333さん</li>
<li>日本で数少ない(少なかった)Elixir書籍、エーフィーのアトリエの著者としてお馴染みのはやぶささん、いつの間にドリコムに</li>
</ul>
</li>
<li>「<a href="http://www.erlang-factory.com/sfbay2017/" target="_blank" rel="external">Erlang and Elixir Factory San Francisco Bay 2017</a> 参加報告」<ul>
<li>by jj1bdx (力武健次)さん</li>
<li>1週間の有料トレーニングの真ん中にカンファレンスがある、という日程</li>
<li>発表内容は濃い物も多いがトレーニーでも充分楽しめる</li>
<li>コンパイラの挙動の解説やノード間通信の可視化の話、FPGAとErlangなどコアな講演から、「言語がコミュニティの特徴を方向付ける」等と言った抽象的な物まで</li>
<li>日本人もどんどん登壇すべき。今日のConfを見て行けると思った</li>
</ul>
</li>
</ul>
<h1 id="Closing-Keynote-voluntasさん"><a href="#Closing-Keynote-voluntasさん" class="headerlink" title="Closing Keynote - voluntasさん"></a>Closing Keynote - voluntasさん</h1><p>日本でErlang/OTPと言えば時雨堂ですね。Elixirの話は皆無でWhy Erlang/OTPの話しかしない、との英断、見事にはまっていたと思います。</p>
<ul>
<li>Elixirは使った事が無く使う予定も無い。皆Erlang書くの辛いと言うが、手を付けて10年で辛いと思った事が無い</li>
<li>Erlangを採用するシステムは内情が明らかにされないケースが多いので採用の実態は把握し難い。公に出来る情報は氷山の一角</li>
<li>誰もOTPの話をしなかったのが残念。mururuかgumiはしてくれると思ったのに</li>
<li>Erlang/OTPを軽く試してみたいならまずネットワークサーバを書いてみると良い。HTTPサーバでも、HTTPを超えるオレオレプロトコルでも</li>
<li>Erlangで書かれたシステムは大体1万行程度。ドワンゴの55万行は世界的に見ても大きい方</li>
<li>有名どころだとWhatsAppがユーザー10億人、秒間7000万リクエストを捌くのにエンジニアは30人。ErlangVMにも手を入れてる。ゲーム会社ではRiotがある（※ 昔からRiotではLeague of Legendsのチャットサーバに使われている事が公開されていましたが、<a href="https://engineering.riotgames.com/news/riot-messaging-service" target="_blank" rel="external">最近ゲームサーバのメッセージング部分もErlangで実装しているという記事が公開されました。</a>更にゲーム繋がり(?)で言うと<a href="https://blog.discordapp.com/how-discord-handles-push-request-bursts-of-over-a-million-per-minute-with-elixirs-genstage-8f899f0221b4" target="_blank" rel="external">Discordでのバーストやバックプレッシャーの話も興味深いです。</a>）</li>
<li>Why not Golang<ul>
<li>goで良い。狭いながらもErlangが勝てる領域があるのでそこで戦っているだけ</li>
</ul>
</li>
<li>Why Erlang/OTP<ul>
<li>適当に書いても動く</li>
<li>適当に書いても落ちない。落ちる時も軽量プロセスが単独で逝く</li>
<li>適当に書いてもスケールする。ARM96コアで利用率8000%まで行けた</li>
</ul>
</li>
<li>巷で「MacでErlang試してみたけど落ちたぞ」と言ってるのは大体FD枯渇。デフォルトでは256しかないので</li>
<li>DSLでネットワークサーバ関連の記述が充実しているので超短く書ける</li>
<li>プロセス設計は難しい。だから僕にプロセス設計の依頼が来る</li>
<li>パターンマッチ最高。一度経験すると無い言語には戻れない</li>
<li>クラッシュダンプが読み難い。皆一度は読んで絶望する</li>
<li>E2Eテストが容易。HTTP非同期のテスト等も実際のTCPコネクションを使って簡単にテストできる</li>
<li>Erlang/OTP関係で問題が起きてSOSが回って来る時は9割方RabbitMQ。辛いので大抵断る</li>
<li>軽量プロセスについて<ul>
<li>Erlang/OTPは1プロセスでは性能が出ない。複数プロセスを起動すると綺麗に終わらせるのが難しい</li>
<li>supervisorが死んでErlangVMが死ぬ事はある。simple_one_for_oneでtemporaryで、死に際に綺麗にログを出して～とやりだすとsupervisor不要</li>
<li>軽量プロセスは実はしぶとい。殺したつもりのプロセスが生きていて「プロセスリーク」の状態になる。waitingでもなくshutdownの一歩手前で生き残っている事がある</li>
<li>毎秒10万メッセージ辺りでキューが詰まり出す。これはErlangVMのメッセージパッシング速度が上がらないとどうしようもない</li>
<li>RabbitMQの場合、キュー溢れに対する挙動は「キューを捨てて再起動」</li>
</ul>
</li>
<li>OTP 20.0 coming<ul>
<li>2017-06-21 にリリース</li>
<li>やっとシグナルがハンドル可能になる。今まではCtrl+Cで止まらない等、コンテナ技術と相性が悪かった</li>
<li>stringモジュールがUnicode対応</li>
<li>古い言語の割にドラスティックにソースを変更する</li>
<li>etsが性能向上する</li>
<li>JITはLLVMベースで実験中</li>
</ul>
</li>
</ul>
<h2 id="懇親会"><a href="#懇親会" class="headerlink" title="懇親会"></a>懇親会</h2><p><img src="/images/20170412/photo_20170412_02.jpeg"></p>
<p>スリーモンキーズカフェにて。会場は「最大300人」を謳ってますが相当すし詰め状態でした。そしてビュッフェの料理がデプロイされるテーブルがシングルスレッドでキュー溢れしてました。<br>私は初手でディープな方々のテーブルに突撃するのはハードルが高かったので比較的親しみ易い話題のテーブルをうろうろしていましたが、感想として多かったのは「やっぱりErlang/OTPか」と「どこに使えば良いんだ…？」でした。自己紹介すると「エンプラでElixirって使うんですか？」と訊かれ「それを探りに来ました」と返す会話が多かったです。そこは予想していた通りでしたが、使える場面を考える上で開発者の確保（教育/採用/調達全て込みで）はどうしたもんだろうねという話は、ほとんどど通じなかったのは意外でした。</p>
<h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>今回のElixir Conf Japanを通してのトピックを以下にピックアップします。</p>
<ul>
<li>まずErlang/OTPの概念と現実から始めよう。すごいE本を読もう！</li>
<li>Erlangは遅いがスケールする</li>
<li>プロセス設計は難しいがPhoeninx等のFWの恩恵に預かれればその限りではない</li>
<li>導入も教育もまだまだ手探り中</li>
</ul>
<p>なかなか使い所に迷う技術ではあるものの、１プログラマーの視点で見れば「書いていて楽しい」という最高に魅力的な言語には違いないので、引き続き知見を積んで行こうと思います。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/20170412/photo_20170412_01.png&quot; class=&quot;img-small-size&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Elixir-Conf-Japan-2017-に参加しました&quot;&gt;&lt;a href=&quot;#Elixir-Co
    
    </summary>
    
      <category term="Programming" scheme="https://future-architect.github.io/categories/Programming/"/>
    
    
      <category term="Elixir" scheme="https://future-architect.github.io/tags/Elixir/"/>
    
  </entry>
  
  <entry>
    <title>HoloLensの空間共有サービスを使ってみよう</title>
    <link href="https://future-architect.github.io/articles/20170405/"/>
    <id>https://future-architect.github.io/articles/20170405/</id>
    <published>2017-04-05T03:00:00.000Z</published>
    <updated>2017-05-09T01:57:18.457Z</updated>
    
    <content type="html"><![CDATA[<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>こんにちは。HoloLens記事第二弾です。</p>
<ul>
<li>前回の記事は<a href="https://future-architect.github.io/articles/20170210/">こちら</a>をご参照ください。</li>
</ul>
<p>今回は、HoloLensでこれから多く使われるであろう<font color="red"><strong>空間共有サービス（以下シェアリングサービス）</strong></font>の特性と実装方法の触りについて紹介します。</p>
<h1 id="HoloLensの空間共有サービスとは"><a href="#HoloLensの空間共有サービスとは" class="headerlink" title="HoloLensの空間共有サービスとは"></a>HoloLensの空間共有サービスとは</h1><p>HoloLensの醍醐味は、現実世界と仮想世界が融合することです。つまりHoloLensゴーグルをかけると、スマホを通さずとも視野の中にに様々な情報や仮想的なオブジェクトを出現させることができます。</p>
<p>ARとして流行ったポケモンGOを例にすると、スマホの画面上で現実の背景の上にポケモンの画像が合成されて表示されていましたよね？HoloLensを身につけると、散歩中にふと公園を見ると「ピカチュウが花壇から出てきた！」という風景を自然に見ることができます。また、HoloLensは<strong>現実世界のオブジェクトをスキャンしてマッピング</strong>を行っているので、「ピカチュウが滑り台を滑る」といったことが比較的容易に実現できちゃいます。</p>
<p>でも悲しいかな、HoloLensをそのまま装着しても、みんな別々、パラレルワールドのマサラタウンにいるのです。ある人はそこにピカチュウがいるというけれど、私には見えない、そんな状態です。それでは盛り上がりもかけますし、結局は自分にしか見えない仮想的なものなんだという儚い気持ちになってしまいますよね。</p>
<p>そこで登場HoloLensの<strong><font color="red">シェアリングサービス</font></strong>です。<strong>これを使うと、あるHoloLensで見ているものが、他のHoloLensでも同様に見ることができ、空間の共有が行えます。</strong>「ベンチの上でピカチュウがバク転した！かわゆす」というのを皆で一緒に見ることが可能となります。</p>
<h1 id="閑話。（仮想現実と現実に対する哲学的考察をちょっと）"><a href="#閑話。（仮想現実と現実に対する哲学的考察をちょっと）" class="headerlink" title="閑話。（仮想現実と現実に対する哲学的考察をちょっと）"></a>閑話。（仮想現実と現実に対する哲学的考察をちょっと）</h1><p>みんながそこにピカチュウがいると言う。これはもはやピカチュウが現実となったと言えるのではないでしょうか。</p>
<p><strong>「この世は人間に記録（観測）されるまでは存在しない」</strong>とどこかの偉い方が言いましたが、逆に認識されればそれは現実の世界になるのです。HoloLensを通さないと見えないから現実の世界なわけないじゃんというあなた、あなたは視覚を司る「目」という器官を通して世界を認識しています。この世界も目が無いと、見えなくなるから現実な世界なわけないと言っているのと同じかなと思います。</p>
<p><strong>昆虫は紫外線を見ることができるため、人間とは全く別の世界が広がっていますが、HoleLensが映し出す世界も似たようなものではないでしょうか。</strong>また、実際触れるじゃないかと思ったあなた、触れるという現象も触覚も持って感知しているにすぎず、本当の意味でそこに物体があるかどうかなんてだれにもわからないのではないかなと思います。</p>
<h1 id="シェアリングサービスの仕組み"><a href="#シェアリングサービスの仕組み" class="headerlink" title="シェアリングサービスの仕組み"></a>シェアリングサービスの仕組み</h1><p>哲学の話は置いて、本題に戻りましょう。<br>シェアリングを行うためには、<strong>お互いの空間情報を中継するためのサーバー（PC）が必要</strong>です。</p>
<p>アプリケーションの構成によりますが、本記事ではMicrosoftがHoloLensの開発ノウハウを公開している<a href="https://developer.microsoft.com/en-us/windows/mixed-reality/academy" target="_blank" rel="external">HolographicAcademy</a>にてシェアリングサービスを紹介している<a href="https://developer.microsoft.com/en-us/windows/mixed-reality/holograms_240" target="_blank" rel="external">Holograms240</a>の仕組みを説明します。</p>
<p>まず試したいという方は、<a href="https://developer.microsoft.com/en-us/windows/mixed-reality/holograms_240" target="_blank" rel="external">Holograms240の公式サイト</a>に実行方法が記載されています。<br>もしくは日本語で実施方法を記載してくださっている方がいるので<a href="https://docs.com/kaorun55/7627/hololens-sharing?c=euXVvL" target="_blank" rel="external">ここ</a>を見ると良いと思います。</p>
<p>Holograms240では<strong><a href="https://github.com/Microsoft/HoloToolkit-Unity" target="_blank" rel="external">HoloToolKit-Unity</a></strong>というUnity上でHoloLensの機能を使用するためのツール群を利用しています。このHoloToolKit-Unityにはシェアリングサービスが含まれています。開発者はこれを使用して、複数HoloLens間でのシェアリングを行うことができます。またHoloToolKit-Unityの中には、<strong>サーバーで起動するためのシェアリングサービスの実行ファイルが準備されている</strong>ので、シェアリングを行うためにはこれをPC上で実行して利用することができます。</p>
<p><strong>Holograms240は以下のような仕組みで動いています（下図）。</strong><br>まずはアプリ起動時にアンカー情報と呼ばれる、現実世界のマッピングとUnity上での座標を紐づけるための目印を共有します。<br><img src="/images/20170405/photo_20170405_01.jpeg"></p>
<p>次に、アプリ内で共有が必要なデータを逐次送受信して、同じオブジェクトの同期を行っています。<br><img src="/images/20170405/photo_20170405_02.jpeg"></p>
<p><strong>実空間とのマッピングがされているのはアンカーだけです。</strong></p>
<p>実空間をスキャンした情報とアンカーとのマッピング情報はデータ量が多いです。同期するのに長いと1分以上の時間がかかります！その後の共有情報はデータ量は少ないですが、<strong>各オブジェクトやアクションごとにデータの型や、送信処理、受信時の動作を実装してあげなくてはいけません。</strong>さすがに楽々と視野すべてを一括で同期して、というのはできないのですね…。今後もっと便利なライブラリができることを期待します。</p>
<h1 id="HoloToolKit-Unityの仕組みを少しだけ紹介"><a href="#HoloToolKit-Unityの仕組みを少しだけ紹介" class="headerlink" title="HoloToolKit-Unityの仕組みを少しだけ紹介"></a>HoloToolKit-Unityの仕組みを少しだけ紹介</h1><p>次にHoloToolKit-Unity内で何が行われているのか、かいつまんで紹介します。</p>
<h2 id="ImportExportAnchorManager"><a href="#ImportExportAnchorManager" class="headerlink" title="ImportExportAnchorManager"></a>ImportExportAnchorManager</h2><p>Holograms240ではこれを、HologramCollection（HoloLensで扱うオブジェクトの大親）につけてますね。このスクリプトは1機目ではアンカー（Unity上のオブジェクト）を物理的に固定（現実世界にマッピング）して、そのアンカー情報を共有サーバーにエクスポートしています。また2機目以降は、1機目のアンカー情報をインポートして、自身の現実世界のマッピング情報上にアンカーを設置します。これによって<strong>Unityの世界では1機目と2機目の座標軸がアンカーを中心として一致</strong>します。</p>
<h2 id="CustomMessages"><a href="#CustomMessages" class="headerlink" title="CustomMessages"></a>CustomMessages</h2><p>デバイス間で共有するデータの形式の定義と、送受信時の処理が記載されていますこれはアプリの仕様ごとに、がっつり個別実装する必要があります。<br>以下の流れで見ていきます。</p>
<ol>
<li>送受信用のデータ形式</li>
<li>送信処理について</li>
<li>受信処理について</li>
</ol>
<h3 id="1-送受信用のデータ形式"><a href="#1-送受信用のデータ形式" class="headerlink" title="1. 送受信用のデータ形式"></a>1. 送受信用のデータ形式</h3><p>TestMessageIDは<strong>デバイス間で共有（送受信）するデータを定義しています。</strong><br>オブジェクトやアクションの種類ごとに定義しています。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> TestMessageID : byte</div><div class="line">&#123;</div><div class="line">    HeadTransform = MessageID.UserMessageIDStart,</div><div class="line">    UserAvatar,</div><div class="line">    UserHit,</div><div class="line">    ShootProjectile,</div><div class="line">    StageTransform,</div><div class="line">    ResetStage,</div><div class="line">    ExplodeTarget,</div><div class="line">    Max</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-送信処理について"><a href="#2-送信処理について" class="headerlink" title="2. 送信処理について"></a>2. 送信処理について</h3><p><strong>Sendメソッドは送信処理を実装しています。</strong><br>例えばSendShootProjectleはユーザーがゲーム内で発射するオブジェクトの送信処理です。<br>起点となるpositionと打ち出される方向directionをアンカーからの相対位置に変換して送信しています。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SendShootProjectile</span><span class="params">(Vector3 position, Vector3 direction)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">// If we are connected to a session, broadcast our head info</span></div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.serverConnection != null &amp;&amp; <span class="keyword">this</span>.serverConnection.IsConnected())</div><div class="line">    &#123;</div><div class="line">        <span class="comment">// Create an outgoing network message to contain all the info we want to send</span></div><div class="line">        NetworkOutMessage msg = CreateMessage((byte)TestMessageID.ShootProjectile);</div><div class="line"></div><div class="line">        AppendVector3(msg, position + (direction * <span class="number">0.016f</span>));</div><div class="line">        AppendVector3(msg, direction);</div><div class="line"></div><div class="line">        <span class="comment">// Send the message as a broadcast, which will cause the server to forward it to all other users in the session.</span></div><div class="line">        <span class="keyword">this</span>.serverConnection.Broadcast(</div><div class="line">            msg,</div><div class="line">            MessagePriority.Immediate,</div><div class="line">            MessageReliability.Reliable,</div><div class="line">            MessageChannel.Avatar);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="3-受信処理について"><a href="#3-受信処理について" class="headerlink" title="3. 受信処理について"></a>3. 受信処理について</h3><p><strong>受信時の処理はMessageHandlersを使って登録しています。</strong><br>例えば上記で送信している発射物の受信時の処理はProjectileLauncher.csに記載されています。下記のコードで受信時イベントの登録を行っています。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CustomMessages.Instance.MessageHandlers[CustomMessages.TestMessageID.ShootProjectile] = <span class="keyword">this</span>.ProcessRemoteProjectile;</div></pre></td></tr></table></figure>
<p>そして、実際の受信処理は下記のProcessRemoteProjectileです。受信した発射物のアンカーからの位置情報（Position）と方向（Direction）から同じ位置にオブジェクトを生成しています。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">ProcessRemoteProjectile</span><span class="params">(NetworkInMessage msg)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">// Parse the message</span></div><div class="line">    <span class="keyword">long</span> userID = msg.ReadInt64();</div><div class="line">    Vector3 remoteProjectilePosition = CustomMessages.Instance.ReadVector3(msg);</div><div class="line"></div><div class="line">    Vector3 remoteProjectileDirection = CustomMessages.Instance.ReadVector3(msg);</div><div class="line"></div><div class="line">    Transform anchor = ImportExportAnchorManager.Instance.gameObject.transform;</div><div class="line">    ShootProjectile(anchor.TransformPoint(remoteProjectilePosition), anchor.TransformDirection(remoteProjectileDirection), userID);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>このように、<strong>現実世界上の位置情報として同期されるのはアンカーだけで、その他のオブジェクトを同期したい場合は、個別に定義して処理を記載する必要</strong>があります。</p>
<h1 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h1><ul>
<li>シェアリングサービスはHoloToolKit-Unityを使うことで実装できる</li>
<li>実空間に固定されているのはアンカーだけであり、アンカーの同期には時間がかかる</li>
<li>その他のアプリ内情報は個別に連携データの形式と送受信処理を実装する必要がある</li>
</ul>
<h1 id="おまけ～最新（2017-04-03時点）特ダネ情報～"><a href="#おまけ～最新（2017-04-03時点）特ダネ情報～" class="headerlink" title="おまけ～最新（2017/04/03時点）特ダネ情報～"></a>おまけ～最新（2017/04/03時点）特ダネ情報～</h1><ul>
<li><a href="https://github.com/HoloMagicians/HolographicAcademyJP" target="_blank" rel="external">英語弱者（筆者も）待望！Holographic Academyを日本語訳してくださっている神サイト</a></li>
<li><a href="https://github.com/the6th/StartupScene-for-Academy-240-on-HoloLens" target="_blank" rel="external">SharingサービスのサーバーIPをアプリ起動時に設定できるようにするプラグイン</a></li>
<li><a href="https://docs.com/xin9le/1447/sharing-deep-dive" target="_blank" rel="external">Hololens meetup vol2で発表されたHoloToolKitよりイケている共有サービス</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h1&gt;&lt;p&gt;こんにちは。HoloLens記事第二弾です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前回の記事は&lt;a href=&quot;https://fut
    
    </summary>
    
      <category term="VR" scheme="https://future-architect.github.io/categories/VR/"/>
    
    
      <category term="Unity" scheme="https://future-architect.github.io/tags/Unity/"/>
    
      <category term="HoloLens" scheme="https://future-architect.github.io/tags/HoloLens/"/>
    
  </entry>
  
  <entry>
    <title>Elastic{ON}-2017 レポート ~セッション編~</title>
    <link href="https://future-architect.github.io/articles/20170403/"/>
    <id>https://future-architect.github.io/articles/20170403/</id>
    <published>2017-04-03T03:00:00.000Z</published>
    <updated>2017-05-09T01:57:18.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>こんにちは！齋場です。<br>本記事ではElastic{ON}-2017のセッション内容を紹介します。カンファレンスの様子は<a href="https://future-architect.github.io/articles/20170331/">こちらの記事</a>で紹介しています。</p>
<p><img src="/images/20170403/photo_20170403_01.jpeg"></p>
<h1 id="セッションの紹介"><a href="#セッションの紹介" class="headerlink" title="セッションの紹介"></a>セッションの紹介</h1><p>3日間にわたり、およそ<a href="https://www.elastic.co/elasticon/conf/2017/sf" target="_blank" rel="external">90セッション</a>が行われました。主に、Elastic社からの新製品の紹介とユーザ事例の発表に分かれます。<br>(※以下は、主なセッションを抜粋しました。)</p>
<ul>
<li>Elasticsearch<ul>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/what-is-evolving-in-elasticsearch" target="_blank" rel="external">What’s Evolving in Elasticsearch?</a> (5.xシリーズでの新機能、6.0でリリース予定の機能を紹介)</li>
</ul>
</li>
<li>Kibana<ul>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/what-is-cookin-in-kibana" target="_blank" rel="external">What’s Cookin’ in Kibana?</a> (ヒートマップ表示対応、ログのコンテキスト表示、CSVエクスポート等の新機能の紹介)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/kibana-visualizations-deep-dive" target="_blank" rel="external">Kibana Visualizations Deep Dive</a> (Kibanaの新たな可視化機能の詳細紹介)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/timelion-magic-math-and-everything-in-the-middle" target="_blank" rel="external">Timelion: Magic, Math, and Everything in the Middle</a> (新たにKibanaに組み込まれたTimelionでの可視化、分析方法の紹介)</li>
</ul>
</li>
<li>Beats<ul>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/what-is-brewing-in-beats" target="_blank" rel="external">What’s Brewing in Beats</a> (Beatsモジュール機能、Heartbeatによるモニタリング機能の紹介)</li>
</ul>
</li>
<li>Logstash<ul>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/what-is-the-latest-in-logstash" target="_blank" rel="external">What’s the Latest in Logstash?</a> (Logstashのモニタリング機能、新たな設定方法、今後のUIについて)</li>
</ul>
</li>
<li>Elastic Cloud<ul>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/what-is-next-for-elastic-cloud" target="_blank" rel="external">What’s Next for Elastic Cloud</a> (Elastic Cloud Enterpriseの紹介、AWSへのデプロイについて)</li>
</ul>
</li>
<li>Machine Learning<ul>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/machine-learning-in-the-elastic-stack" target="_blank" rel="external">Machine Learning in the Elastic Stack</a> (新たにElastic Stackに組み込まれた”Machine Learning”の紹介)</li>
</ul>
</li>
<li>ユーザ事例<ul>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/near-real-time-retail-analytics-walmart" target="_blank" rel="external">Walmart</a> : リアルタイム購買分析事例 (スーパーマーケットチェーン)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/elastic-at-general-mills-the-journey-continues" target="_blank" rel="external">General Mills</a> : Webサイト検索精度向上事例 (食品加工企業)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/hotel-nersc-data-collect-where-data-checks-in-but-never-checks-out" target="_blank" rel="external">NERSC</a> : マシンルーム整備データ分析事例 (データ分析企業)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/streaming-healthcare-and-research-story-of-elasticsearch-at-ucla-health" target="_blank" rel="external">UCLA Health</a> : 健康に関するデータ分析事例(ヘルスケア)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/data-intelligence-with-the-elastic-stack-at-scale-nvidia-user-experience-streaming-analytics" target="_blank" rel="external">NVIDIAs</a> : ユーザーエクスペリエンス分析事例(ゲームのストリーミングプラットフォーム)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/products-support-commerce-and-relevancy-the-story-behind-search-on-dell-com" target="_blank" rel="external">Dell.com</a> : Dell.comの検索機能実装事例 (コンピュータメーカー)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/tinder-using-the-elastic-stack-to-make-connections-around-the-world" target="_blank" rel="external">Tinder</a> : ユーザマッチングアプリ実装事例 (マッチングアプリ)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/advancing-earth-science-with-elasticsearch-at-terradue" target="_blank" rel="external">Terradue</a> : 地球科学での活用事例 (地球科学研究機関)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/elasticsearch-as-a-service-at-ebay" target="_blank" rel="external">eBay</a> : ECサイト構築事例 (オンラインショッピングサイト)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/it-as-the-transmission-of-the-sprint-business-engine" target="_blank" rel="external">Sprint</a> : ビジネス情報、IT運用管理情報の可視化システム構築事例 (携帯電話事業者)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/how-workday-search-built-their-metrics-pipeline-with-the-elastic-stack" target="_blank" rel="external">Workday</a> : ECサイト検索事例 (薬局チェーン)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/elastic-cloud-at-fandango-how-they-shifted-deployment-model-to-scale-and-meet-their-deadlines" target="_blank" rel="external">Fandango</a> : Elastic Cloud活用事例 (映画関連事業)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/walgreens-journey-to-creating-an-end-to-end-search-platform" target="_blank" rel="external">Walgreens</a> : アプリケーション監視システム構築事例 (薬局チェーン)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/integrating-human-genetic-data-to-help-drive-drug-discovery-elastic-at-merck" target="_blank" rel="external">Merck</a> : 遺伝子データ分析事例 (化学品・医薬品メーカー)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/powering-uber-marketplace-real-time-data-needs-with-elasticsearch" target="_blank" rel="external">Uber</a> : 配車サービスアプリ実装事例 (配車アプリ)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/evolution-of-log-insight-at-mz-games" target="_blank" rel="external">MZ Games</a> : オンラインゲームログ分析事例 (オンラインゲーム会社)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/engine-for-key-security-platforms-at-barclays" target="_blank" rel="external">Barclays</a> : セキュリティ分析事例 (国際金融グループ)</li>
<li><a href="https://www.elastic.co/elasticon/conf/2017/sf/security-at-slack" target="_blank" rel="external">Slack</a> : セキュリティ分析事例 (チャットアプリ)</li>
<li>(and more..)</li>
</ul>
</li>
<li>その他、Elastic製品のノウハウをレクチャーしてくれるセッションも多数行われました。</li>
</ul>
<h1 id="ロードマップ-Opening-Keynote"><a href="#ロードマップ-Opening-Keynote" class="headerlink" title="ロードマップ(Opening Keynote)"></a>ロードマップ(Opening Keynote)</h1><p><a href="https://www.elastic.co/elasticon/conf/2017/sf/opening-keynote" target="_blank" rel="external">Opening Keynote</a>で発表された、Elastic{ON}-2017の主要トピックを紹介します！</p>
<p>以下の順番で説明していきます。</p>
<ol>
<li>New Products</li>
<li>今後リリース予定の機能紹介</li>
</ol>
<h2 id="1-New-Products"><a href="#1-New-Products" class="headerlink" title="1. New Products"></a>1. New Products</h2><p>今年の春にリリースが予定されている新製品および新機能の発表です。</p>
<h3 id="Filebeat-Modules"><a href="#Filebeat-Modules" class="headerlink" title="Filebeat Modules"></a>Filebeat Modules</h3><p>Filebeatのログファイル設定、Elasticsearchのテンプレート、Kibanaのダッシュボードがモジュール化され、ログデータの収集、分析、可視化までを自動化してくれます。まずはApache、Nginx、MySQLなどのサービスがモジュール化されるようです。</p>
<p><img src="/images/20170403/photo_20170403_02.jpeg"></p>
<p>デモでは、moduleコマンドによってKibanaで可視化するまでを行ってくれました。基本的なアクセスログ分析に加えて、アクセス元のmap表示も組み込まれていました。コマンドのmodule=xxxの部分を変えるだけで他のサービスに対応可能で、非常に使いやすそうです。</p>
<p><img src="/images/20170403/photo_20170403_03.png"></p>
<h3 id="Kibana-Time-Series-Visual-Builder"><a href="#Kibana-Time-Series-Visual-Builder" class="headerlink" title="Kibana-Time Series Visual Builder"></a>Kibana-Time Series Visual Builder</h3><p>Kibanaの時系列データの可視化機能を拡張するTime Series Visual Builderです。ヒストグラム、ゲージ、メトリック、トップN等の可視化も可能になります。</p>
<p><img src="/images/20170403/photo_20170403_04.png"></p>
<p>非常にリッチな監視ダッシュボードの作成が可能になりそうです。時系列グラフを横断的に観測できるのが、メトリクス監視の観点で嬉しいですね。<br>特に、Timelionは複雑なクエリを作るのが大変でしたが、WEB画面上でプルダウン選択にてグラフを生成するのは非常に簡単そうでした。(Grafanaのグラフ設定よりも簡単そうでした。)</p>
<p><img src="/images/20170403/photo_20170403_05.png"></p>
<h3 id="Machine-Learning"><a href="#Machine-Learning" class="headerlink" title="Machine Learning"></a>Machine Learning</h3><p>Elastic StackにPrelert社の教師なし機械学習技法が統合された”Machine Learning”。これにより、生成された予測モデルに基づきデータの異常値や外れ値を自動的に検知することが可能になります。</p>
<p><img src="/images/20170403/photo_20170403_06.jpeg"></p>
<p>デモでは、時系列データのサンプルからモデルを生成、異常値の検知が行われました。<br>Beta版では、機械学習ジョブの結果はジョブ完了後にTimelionでグラフ化する必要がありましたが、今回のデモではグラフ上でデータが読み取られて随時モデルが生成されているのが描写されていたので、非常にイメージがつきやすいですね。</p>
<p><img src="/images/20170403/photo_20170403_07.jpeg"></p>
<h3 id="Elastic-Cloud-Enterprise"><a href="#Elastic-Cloud-Enterprise" class="headerlink" title="Elastic Cloud Enterprise"></a>Elastic Cloud Enterprise</h3><p>Elasitc Cloud EnterpriseはElastic Cloudと同等なオーケストレーション、プロビジョニングをオンプレミス環境で可能とします。<br>Elastic Stackのクラスターの設定、管理、運用作業を単一のコンソールで行うことができ、もちろん、Elastic StackやX-Packは最新の機能が提供されます。</p>
<p><img src="/images/20170403/photo_20170403_08.jpeg"></p>
<p>クラスターの状態(メモリ使用率等)も一目でわかるダッシュボードで、さまざまな設定もダッシュボード上で完結していたため、管理コストが抑えられそうです。</p>
<h2 id="2-今後リリース予定の機能紹介"><a href="#2-今後リリース予定の機能紹介" class="headerlink" title="2. 今後リリース予定の機能紹介"></a>2. 今後リリース予定の機能紹介</h2><p>リリース時期は未定ですが、今後リリースが予定されている機能も発表されました。</p>
<h3 id="Elasticsearch-SQL"><a href="#Elasticsearch-SQL" class="headerlink" title="Elasticsearch SQL"></a>Elasticsearch SQL</h3><p>SQLのインターフェースでデータの検索が可能になります。<br>デモでは基本的なクエリを実行してくれました。基本的なFunctionも使用可能で、平均値等の算出もデモしてくれました。</p>
<p><img src="/images/20170403/photo_20170403_09.jpeg"><br>(show tablesとSELECT文を実行)</p>
<p>ODBCでの接続も可能になり、DbVisualizer(接続クライアントソフト)での接続も行っていました。</p>
<p><img src="/images/20170403/photo_20170403_10.png"></p>
<p>ElasticsearchにてSQLが標準で使用可能になることで、利用用途の幅も広がりますね。</p>
<h3 id="Kibana-Canvas"><a href="#Kibana-Canvas" class="headerlink" title="Kibana Canvas"></a>Kibana Canvas</h3><p>ボランティアのモチベーションについての円グラフが並ぶプレゼンが始まりました。</p>
<p><img src="/images/20170403/photo_20170403_11.jpeg"></p>
<p>実はこれはKibanaの新機能”Kibana Canvas” Kibanaの画面上で、プレゼンテーションが作成できる機能です。</p>
<p><img src="/images/20170403/photo_20170403_12.png"></p>
<p>Kibanaの画面からだけでリアルタイムのデータによるプレゼンテーション、インフォグラフィックスの作成が可能になります。十数個のオブジェクトが使用でき、自由に移動・回転ができるので表現力も申し分なさそうです。何より見た目がキレイ!<br>これがあるとレポート作成のためだけのExcel、PowerPointの作業は必要なくなりますし、今までは考えられなかったリアルタイムに反映されるデータでのプレゼンテーションが可能になりますね。</p>
<h1 id="最後に-セキュリティ用途としてのElastic-Stackについて"><a href="#最後に-セキュリティ用途としてのElastic-Stackについて" class="headerlink" title="最後に (セキュリティ用途としてのElastic Stackについて)"></a>最後に (セキュリティ用途としてのElastic Stackについて)</h1><p>ユーザ事例は、やはりサーチの分野の事例が多い中、ログ解析、セキュリティ(異常検知・分析)といった分野の事例も目立ちました。</p>
<ul>
<li>Barclays(国際金融業)、USAA(アメリカ軍関連の金融業)等でのセキュリティ分析の事例もあり、ミッションクリティカルな場面でも利用されています。</li>
<li>ArcSightとElastic Stackの連携についてのセッションでは以下のElastic Stackの要素が、SIEM<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>としての要件にマッチしていることが述べられていました。<ul>
<li>容易にスケールが可能</li>
<li>リアルタイムに近い分析が可能なパフォーマンス</li>
<li>REST APIによる拡張性</li>
</ul>
</li>
<li>また、新たに発表された”Machine Learning”もセキュリティ用途の追い風となりそうです。<ul>
<li>メトリクスの異常検知から、マルウェアに感染しているかを検査、普段発生しないログメッセージを検知し、インシデントへの対策を行う等の利用が考えられます。</li>
<li>(Machine Learning Beta版の検証をしてみましたが、ユーザは異常検知のための閾値、ロジック、パラメータを意識せず、データを読み込ませるのみで容易に実行可能でした。)</li>
</ul>
</li>
<li>Demoコーナーでも、機械学習を用いたエンドポイントセキュリティ対策を行っており、Elastic社としても力を入れているのが分かりました。</li>
</ul>
<p>上記のように、Elastic Stackのセキュリティ分野への応用は今後活発になることが予想されます。弊社としても、Elastic Stackの新機能を用いて新しいソリューションを提案できるように検討中です。</p>
<p>Elastic{ON}-2017のセッション内容を紹介させていただきました。<br>本記事で、Elastic{ON}参加レポートは完結です。ありがとうございました。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">SIEM: さまざまなネットワーク機器やサーバーから、多様かつ膨大なログを収集して一元管理し、それらを基に不正を検知する新しいセキュリティシステムのこと</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h1&gt;&lt;p&gt;こんにちは！齋場です。&lt;br&gt;本記事ではElastic{ON}-2017のセッション内容を紹介します。カンファレンスの様子は
    
    </summary>
    
      <category term="Event" scheme="https://future-architect.github.io/categories/Event/"/>
    
    
      <category term="Elastic-Stack" scheme="https://future-architect.github.io/tags/Elastic-Stack/"/>
    
  </entry>
  
  <entry>
    <title>Elastic{ON}-2017 レポート ~概要編~</title>
    <link href="https://future-architect.github.io/articles/20170331/"/>
    <id>https://future-architect.github.io/articles/20170331/</id>
    <published>2017-03-31T01:57:43.000Z</published>
    <updated>2017-05-09T01:57:18.446Z</updated>
    
    <content type="html"><![CDATA[<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>こんにちは！齋場です。</p>
<p>今回、サンフランシスコで行われた<strong><a href="https://www.elastic.co/elasticon/conf/2017/sf" target="_blank" rel="external">Elastic{ON}-2017</a></strong> に参加してきましたのでレポートさせていただきます！</p>
<p>※他サンフランシスコ出張報告の記事は以下</p>
<ul>
<li><a href="https://future-architect.github.io/articles/20170321/">スタンフォード大学で食べたピーナッツサラダは、格別だった。。</a></li>
<li><a href="https://future-architect.github.io/articles/20170322/">シリコンバレー巡礼</a></li>
</ul>
<h1 id="Elastic-ON-とは"><a href="#Elastic-ON-とは" class="headerlink" title="Elastic{ON}とは"></a>Elastic{ON}とは</h1><p>Elastic社主催のユーザカンファレンスです。2015年が初回で開催されてから、今回で3回目になります。Elastic Stackのプロダクトのセッション&amp;デモがメインで、ユーザ企業のセッションも多く行われます。<br>Elasticの最新動向をフォローするために、我々もこのサンフランシスコの地へやってきました。</p>
<p>本記事では主にElastic{ON}のカンファレンスの様子を紹介します。<br>セッション内容については、次回の記事に記載します。</p>
<h1 id="カンファレンスの様子紹介"><a href="#カンファレンスの様子紹介" class="headerlink" title="カンファレンスの様子紹介"></a>カンファレンスの様子紹介</h1><h2 id="会場到着"><a href="#会場到着" class="headerlink" title="会場到着"></a>会場到着</h2><p>会場はPier48という、サンフランシスコベイエリアに位置するイベントブースです。</p>
<p><img src="/images/20170330/photo_20170330_01.jpeg"></p>
<p>ちなみに会場近くはこんな感じです。隣にAT&amp;Tのスタジアムが見えます。</p>
<p><img src="/images/20170330/photo_20170330_02.jpeg"></p>
<p>受付の様子です。日本人の方もちらほらと<br>今回、日本から参加された方はおよそ50人程度とのこと。</p>
<p><img src="/images/20170330/photo_20170330_03.jpeg"></p>
<h2 id="AMA-Ask-Me-Anything"><a href="#AMA-Ask-Me-Anything" class="headerlink" title="AMA (Ask Me Anything)"></a>AMA (Ask Me Anything)</h2><p>カンファレンス開催時に1日中Elasticのサポートエンジニア&amp;開発エンジニアに対してElasticに関する質問ができるコーナーです。<br>私もカンファレンス中に検証中の機能がうまく動かなかったため、PC片手に質問しに言ったら速攻で解決してくれました。</p>
<p><img src="/images/20170330/photo_20170330_04.jpeg"></p>
<p>机がホワイトボードになっているため、議論もスムーズに進みます。</p>
<p><img src="/images/20170330/photo_20170330_05.jpeg"></p>
<h2 id="Seating-Area"><a href="#Seating-Area" class="headerlink" title="Seating Area"></a>Seating Area</h2><p>会場には電源完備のテーブルがたくさん用意されており、参加者はそこで作業&amp;食事をすることも可能です。<br>私が座っていた隣では、Kibanaの画面を見ながら白熱に議論しているエンジニアの方もいました。</p>
<p><img src="/images/20170330/photo_20170330_06.jpeg"></p>
<h2 id="Food-Truck"><a href="#Food-Truck" class="headerlink" title="Food Truck"></a>Food Truck</h2><p>朝・昼食時には隣の駐車場に、サンフランシスコっ子も認めるおしゃれなFood Truckが集結してくれます。</p>
<p><img src="/images/20170330/photo_20170330_07.jpeg"></p>
<p>私はワッフルをいただきました。</p>
<p><img src="/images/20170330/photo_20170330_08.jpeg"></p>
<h1 id="Sponsorブース"><a href="#Sponsorブース" class="headerlink" title="Sponsorブース"></a>Sponsorブース</h1><p>22の企業が参加しており、多くはモニタリングツールや機械学習関連のサービスを紹介していました。</p>
<p><img src="/images/20170330/photo_20170330_09.jpeg"></p>
<p><img src="/images/20170330/photo_20170330_10.jpeg"></p>
<p>2016年9月、Elastic社が買収したPrelert社<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>も前回のElastic{ON}にスポンサーとしてブース展示をしていたそうです。Prelert社は教師なし機械学習技法によるデータセットの異常発見を自動化する技術を持っており、Elastic社は2016年秋この機能をElastic Stackへ統合しました。<br>今回参加していたスポンサー企業の中には、Elasticの競合ともなりえるサービスを提供する企業もありました。このことをElastic社の人に聞いてみたところ、Prelert社と同様、良い技術を持った企業は共にビジネスを開拓できるか常に検討しているそうです。</p>
<h1 id="Demoブース"><a href="#Demoブース" class="headerlink" title="Demoブース"></a>Demoブース</h1><p>Elastic Stackのデモブースです。<br>直接対話できるので最新プロダクトの使い方も丁寧にレクチャーしてくれます。</p>
<p><img src="/images/20170330/photo_20170330_11.jpeg"></p>
<p>デモブースは以下4つのテーマで行われていました。</p>
<ol>
<li><strong>Search &amp; Analytics</strong><ul>
<li>Eコマースの分析を例にして、ビジネス分析を実施</li>
</ul>
</li>
<li><strong>Security Analytics</strong><ul>
<li>ネットワークのアクセスパターンをKibanaの”Graph”で可視化し、感染した端末を検知、Logstashで最新化したブラックリストで接続元IPチェック</li>
</ul>
</li>
<li><strong>Operational Analytics</strong><ul>
<li>Elastic{ON}の会場のデータをリアルタイムに可視化<ol>
<li>どのセッションが人気？</li>
<li>ランチブースの待ち時間は？</li>
</ol>
</li>
</ul>
</li>
<li><strong>Elastic Cloud Enterprise</strong><ul>
<li>実際のコンソール画面で、クラスターのスケールアップ・スケールアウトがいかに簡単にできるかをデモ</li>
</ul>
</li>
</ol>
<h1 id="Opening-Keynote"><a href="#Opening-Keynote" class="headerlink" title="Opening Keynote"></a>Opening Keynote</h1><p>Opening Keynoteは、ダンスから開始！<br>ダンサーの四肢にはセンサーが付けられ、ダンサーの動きはリアルタイム(グラフを見る限り1sec以内)でKibanaによって可視化されています。</p>
<p><img src="/images/20170330/photo_20170330_12.jpeg"></p>
<h1 id="その他紹介"><a href="#その他紹介" class="headerlink" title="その他紹介"></a>その他紹介</h1><h2 id="Conference-T-Shirt"><a href="#Conference-T-Shirt" class="headerlink" title="Conference T-Shirt"></a>Conference T-Shirt</h2><p>カンファレンスTシャツのプレゼントですが、なんと工房がありました。その場でプリントしてくれます。工房スペースもなかなか広い。</p>
<p><img src="/images/20170330/photo_20170330_13.jpeg"></p>
<p>まずは、サイズを選んで…(男女別で色は決められていました)</p>
<p><img src="/images/20170330/photo_20170330_14.jpeg"></p>
<p>4つの柄から好きな柄を選びます。</p>
<p><img src="/images/20170330/photo_20170330_15.jpeg"></p>
<p>私はHeartBeatの柄をチョイス!<br>最初からプリントしたものを配布した方が明らかに効率的ですが、わざわざスペース・機材・人員を用意してまでオーダーメードTシャツをプレゼントしてくれるのはうれしいですね。ユーザエクスペリエンスを重要視しているElastic社らしいエンターテイメントだと感じました。</p>
<p><img src="/images/20170330/photo_20170330_16.jpeg"></p>
<h2 id="Elastic-Heart"><a href="#Elastic-Heart" class="headerlink" title="Elastic{Heart}"></a>Elastic{Heart}</h2><p>手のひらの脈をリアルタイムにグラフに描写する展示も行われていました。ArduinoとRaspberry Piにより測定したデータをKibanaによって可視化していました。</p>
<p><img src="/images/20170330/photo_20170330_17.jpeg"></p>
<p>Keynoteでのダンサーの動きの可視化も同様、今後はIoT x Elastic Stackの組み合わせも活発になりそうです。</p>
<h2 id="ゲームコーナー"><a href="#ゲームコーナー" class="headerlink" title="ゲームコーナー"></a>ゲームコーナー</h2><p>なんと会場裏にはアーケードゲームコーナが！終始人が絶えませんでした。プレイする方も結構本気。</p>
<p><img src="/images/20170330/photo_20170330_18.jpeg"></p>
<p>Tシャツ工房と同様スペースも大きく、Elastic社の遊び心が垣間見えますね。</p>
<h2 id="パーティ"><a href="#パーティ" class="headerlink" title="パーティ"></a>パーティ</h2><p>パーティ会場は、カリフォルニア科学博物館を貸切です。<br>博物館内の植物園見学、地震シミュレーターをはじめとした展示をお酒と食事とともに楽しめました。</p>
<p><img src="/images/20170330/photo_20170330_19.jpeg"></p>
<p>博物館中央のホールはDJスペースに様変わり。エンジニアたちが踊り明かす姿はなかなかの見ものでした。</p>
<p><img src="/images/20170330/photo_20170330_20.jpeg"></p>
<h2 id="Elastic-Cause-Awards"><a href="#Elastic-Cause-Awards" class="headerlink" title="Elastic Cause Awards"></a>Elastic Cause Awards</h2><p>Elastic Stackを使い現実の社会問題を解決している非営利団体のノミネートも行われました。今回ノミネートされていたのは以下の3つです。</p>
<ol>
<li>人身売買と奴隷取引にテクノロジーで立ち向かった <strong>“IST Research”</strong><ul>
<li>危険に晒されている人々を特定し、意思疎通することを可能にするシステムを構築<br><img src="/images/20170330/photo_20170330_21.jpeg"></li>
</ul>
</li>
<li>National School Security Databaseを用いて校内暴力の低減に貢献した <strong>“NoSchoolViolence.org”</strong><ul>
<li>学生の挙動パターンから、リスクを洗い出すことを可能にしたシステムを構築<br><img src="/images/20170330/photo_20170330_22.jpeg"></li>
</ul>
</li>
<li>エボラ熱に対応するコールセンターと健康状態監視アプリケーションを開発した <strong>“eHealth Africa”</strong><ul>
<li>リアルタイムで疾病の流行傾向を分析できるシステムを構築<br><img src="/images/20170330/photo_20170330_23.jpeg"></li>
</ul>
</li>
</ol>
<p>Elasticの<a href="https://www.elastic.co/blog/elastic-heart-the-center-of-the-elastic-cause-awards" target="_blank" rel="external">カルチャー</a>に則り、Elastic Stackを用いてより良い未来に向けた進化と貢献が認められたプロジェクトを選定しているそうです。<br>自分たちのProductが社会問題の解決に役に立っていることに非常に誇りを持っていて、素敵な企業文化であると感じました。私もますますElasticのファンになりました！</p>
<h1 id="おわりに"><a href="#おわりに" class="headerlink" title="おわりに"></a>おわりに</h1><p>本記事では、Elastic{ON}のカンファレンスの様子をリポートさせていただきました。<br>セッションの内容は、次回の記事にて紹介しています。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;"><a href="http://www.jcnnewswire.com/pressrelease/32377/3" target="_blank" rel="external">Elastic、行動分析大手のPrelertを買収</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h1&gt;&lt;p&gt;こんにちは！齋場です。&lt;/p&gt;
&lt;p&gt;今回、サンフランシスコで行われた&lt;strong&gt;&lt;a href=&quot;https://ww
    
    </summary>
    
      <category term="Event" scheme="https://future-architect.github.io/categories/Event/"/>
    
    
      <category term="Elastic-Stack" scheme="https://future-architect.github.io/tags/Elastic-Stack/"/>
    
  </entry>
  
  <entry>
    <title>オープンソースカンファレンス2017 Tokyo/Spring登壇＆ブース出展レポート</title>
    <link href="https://future-architect.github.io/articles/20170327/"/>
    <id>https://future-architect.github.io/articles/20170327/</id>
    <published>2017-03-27T03:00:00.000Z</published>
    <updated>2017-05-09T01:57:18.441Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/20170327/photo_20170327_00.jpeg"></p>
<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>こんにちは。星です。</p>
<p>前回の<a href="https://future-architect.github.io/articles/20170323/">「ヒカ☆ラボ初参戦！AWS x IoTで若手エンジニアが登壇してきました」</a>に引き続き、3/10〜11の2日間、オープンソースカンファレンス（OSC）2017 Tokyo/Springにて、セミナー登壇、ブース出展をしてきましたので、今回はそのレポートをお届けしたいと思います！！</p>
<p><strong>オープンソースカンファレンス(OSC）とは？</strong></p>
<blockquote>
<p>オープンソースカンファレンスとは、2004年からスタートし、60回以上の開催をしているオープンソースの今を伝えるイベントです。<br>東京だけでなく、北は北海道、南は沖縄まで全国規模で開催されており、オープンソースのコミュニティや協賛企業、後援団体による、オープンソース関連のセミナーや展示などをお楽しみ頂けます。<br>普段オープンソースに触れている方、オープンソースに興味がある方、これからオープンソースを使ってみたい方、オープンソースの最新情報を得たい方、コミュニティに参加したい方、コミュニティに既に参加している方。大学や学校教員や学生さんにも多く参加いただいています。<br>出展者、来場者ともに業界で活躍されている方が多く関わっていますので、有名人やあなたが読んでいる書籍の著者にばったり会えるかもしれません。 </p>
</blockquote>
<h1 id="1日目-ブース設営"><a href="#1日目-ブース設営" class="headerlink" title="1日目 - ブース設営"></a>1日目 - ブース設営</h1><p>会場は明星大学です。11時からのブースの展示開始に向けて、9:30頃には中央大学・明星大学駅に有志で集合して会場に向かいました。好天に恵まれ、普段の喧騒とは打って変わって、空気のおいしさも感じます。</p>
<p><img src="/images/20170327/photo_20170327_01.jpeg"></p>
<p>会場に到着して、まずは202号室の下見。そう、12時からのLT大会と我々が登壇する14時からのセミナー会場がこの202号室なんですね。もちろん、プレゼンは教壇にて行うわけですから、ちょっとした先生気分になりそうだなぁと思いながら、展示ブースへと向かいました。</p>
<p><img src="/images/20170327/photo_20170327_02.jpeg"></p>
<p>会社から持ち込んだタペストリーをテーブルの後ろに配置しました。下図は新人の小松が真剣な表情でモニタを設置する様子です。<br>実はモニタの電源ケーブルを忘れるという大失敗をしたのですが、OSC主催者の宮原徹さんにモニタごとお借りして、午後から参加するメンバに電源ケーブルを持ってきてもらい、何とか事なきを得ました。</p>
<p><img src="/images/20170327/photo_20170327_03.jpeg"></p>
<p>そして、ブースが完成です！！まずは記念写真。会社にいるメンバに写真をシェアしたら、若さが足りない・・・と指摘を受けましたが、抜群の安定感と前向きに捉えつつ。。。</p>
<p><img src="/images/20170327/photo_20170327_04.jpeg"></p>
<p>今回展示しているVuls、uroboroSQL、Urushiのステッカーとフューチャーのロゴ入りボールペンも用意して、あとは来場者の皆さんを待つだけですね。</p>
<p><img src="/images/20170327/photo_20170327_05.jpeg"></p>
<h1 id="1日目-ブース大盛況！！"><a href="#1日目-ブース大盛況！！" class="headerlink" title="1日目 - ブース大盛況！！"></a>1日目 - ブース大盛況！！</h1><p>お昼を前にして、だんだんと来場者数が増えてきました。<br>社会人、学生だけでなく海外からの方達も来られて、ブースは大盛況です！！</p>
<p><img src="/images/20170327/photo_20170327_06.jpeg"></p>
<p>OSC初心者のための展示ツアーでは、OSC宮原さんに当社のブースに立ち寄って頂きました。またVuls開発者の神戸も駆けつけ、学生の方に説明もしていました。</p>
<p>そんなこんなで、当社ブースでは、常時3〜5名が来場者の皆さんに説明しているという大忙しの状況に！！</p>
<p><img src="/images/20170327/photo_20170327_07.jpeg"></p>
<h1 id="1日目-ライトニングトーク＆セミナー登壇"><a href="#1日目-ライトニングトーク＆セミナー登壇" class="headerlink" title="1日目 - ライトニングトーク＆セミナー登壇"></a>1日目 - ライトニングトーク＆セミナー登壇</h1><p>いよいよ午後からは当社からのプレゼンが始まります。</p>
<h2 id="ライトニングトーク：Vulsで始めよう！DevSecOps-by-牛田"><a href="#ライトニングトーク：Vulsで始めよう！DevSecOps-by-牛田" class="headerlink" title="ライトニングトーク：Vulsで始めよう！DevSecOps! by 牛田"></a>ライトニングトーク：Vulsで始めよう！DevSecOps! by 牛田</h2><p>まずは12時のライトニングトークに牛田が登場しました。</p>
<p>自分の出番になると上着を脱いて、Vuls Tシャツを颯爽と見せながら登壇しました！！</p>
<p><img src="/images/20170327/photo_20170327_08.jpeg"></p>
<iframe src="//www.slideshare.net/slideshow/embed_code/key/blSxOd7FDgMGKZ" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<h2 id="No-1-Vulsをバズらせるためにやったこと-by-神戸"><a href="#No-1-Vulsをバズらせるためにやったこと-by-神戸" class="headerlink" title="No.1 Vulsをバズらせるためにやったこと by 神戸"></a>No.1 Vulsをバズらせるためにやったこと by 神戸</h2><p>そして、14時からの当社セミナーは、3本立ての構成にしました。</p>
<p>私が3分ほど会社紹介をさせて頂いた後、まずは神戸が登壇しました。<br>神戸がついに発表した「バズらせFlowChart」はきっと今後のOSS開発者の役に立つはず！？</p>
<p><img src="/images/20170327/photo_20170327_09.jpeg"></p>
<h3 id="発表資料-OSC2017-Tokyo-Spring-Vulsをバズらせるためにやったこと"><a href="#発表資料-OSC2017-Tokyo-Spring-Vulsをバズらせるためにやったこと" class="headerlink" title="発表資料:OSC2017 Tokyo/Spring Vulsをバズらせるためにやったこと"></a><a href="http://qiita.com/kotakanbe@github/items/e7678773adcdb80ae7cd" target="_blank" rel="external">発表資料:OSC2017 Tokyo/Spring Vulsをバズらせるためにやったこと</a></h3><h2 id="No-2-uroboroSQL〜エンプラで培った秘伝のSQL開発手法をOSS化！〜-by-星"><a href="#No-2-uroboroSQL〜エンプラで培った秘伝のSQL開発手法をOSS化！〜-by-星" class="headerlink" title="No.2 uroboroSQL〜エンプラで培った秘伝のSQL開発手法をOSS化！〜 by 星"></a>No.2 uroboroSQL〜エンプラで培った秘伝のSQL開発手法をOSS化！〜 by 星</h2><p>続いて、私がOSCで初公開となったuroboroSQLの紹介をしました。<br>できるだけ面白く・・・をコンセプトにプレゼンしたのですが、あまり笑いを取れず（苦笑）</p>
<p>とはいえ、これまでのJavaのO/Rマッパーとは一味違うuroboroSQLには興味を持って頂けたようでした。</p>
<p><img src="/images/20170327/photo_20170327_10.jpeg"></p>
<iframe src="//www.slideshare.net/slideshow/embed_code/key/bOHqva5K4q4X7R" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>

<h2 id="No-3-エンプラでSPAで最新UI！？-よし、作ってOSS化！-by-平川"><a href="#No-3-エンプラでSPAで最新UI！？-よし、作ってOSS化！-by-平川" class="headerlink" title="No.3 エンプラでSPAで最新UI！？ よし、作ってOSS化！ by 平川"></a>No.3 エンプラでSPAで最新UI！？ よし、作ってOSS化！ by 平川</h2><p>最後は、平川がWeb component Frameworkの「Urushi」を発表しました。<br>数多のJSフレームワークが存在する中、なぜ自身で作るという決断をしたのか、共感して頂いた方も多かったようですね。</p>
<p><img src="/images/20170327/photo_20170327_11.jpeg"></p>
<iframe src="//www.slideshare.net/slideshow/embed_code/key/8g7C5jv0aWXKAl" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>

<h1 id="1日目終了、そして、懇親会"><a href="#1日目終了、そして、懇親会" class="headerlink" title="1日目終了、そして、懇親会"></a>1日目終了、そして、懇親会</h1><p>セミナー終了後も、ブースは人が途切れることなく賑わいを見せました。<br>そして、夕方、無事1日目のブース出展が完了し、いよいよOSC恒例の出展者・参加者が大集合する懇親会が始まります。</p>
<p>懇親会が始まる前の写真です。丸一日、全力で来場者の皆さんに説明をした当社メンバはちょっとぐったりしていますね！！</p>
<p><img src="/images/20170327/photo_20170327_12.jpeg"></p>
<p>しかし、お腹は減ったし、やりきった感もあり酒も飲みたい・・・ということで、乾杯です！！</p>
<p><img src="/images/20170327/photo_20170327_13.jpeg"></p>
<p>その後、色々なOSSユーザー会の方々や企業の方々と名刺交換させて頂きつつ、楽しい話に花を咲かせました。</p>
<p>懇親会からの帰り道、記念写真を後ろから歩いてきた方にお願いして取って頂きました！！<br>OSC参加者はみんなフランクで良いですね。</p>
<p><img src="/images/20170327/photo_20170327_14.jpeg"></p>
<h1 id="2日目＆まとめ"><a href="#2日目＆まとめ" class="headerlink" title="2日目＆まとめ"></a>2日目＆まとめ</h1><p>2日目はセミナーがなかったので、ブース出展のみでしたが、やはり盛況でした。</p>
<p>1日目は来場者の傾向として、インフラエンジニアが多かった印象でしたが、2日目は休日ということもあり、開発者の方や当社の近くのビルにお勤めの方もいて、バラエティに富んだバッググラウンドの方が多かったように思います。</p>
<p>ノベルティやパンフレットが足りなくなって、会社から急遽送ってもらったり、近くのコンビニへコピーに行ったりと、様々な課題はありましたが、総じて出展者として参加してよかったなと思います。</p>
<p>振り返ってみると、当社メンバも疲れはしましたが、楽しかったし、なんだか結束力が増したような、そんな充実感も得られたイベントになったと感じています。</p>
<p>今年、沖縄や名古屋など、OSCは各地で開催されますので、また参加したいと思います！！</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li>オープンソースカンファレンス2017 Tokyo/Spring - オープンソースの文化祭！<ul>
<li><a href="https://www.ospn.jp/osc2017-spring/" target="_blank" rel="external">https://www.ospn.jp/osc2017-spring/</a></li>
</ul>
</li>
<li>3/10(金)タイムテーブル<ul>
<li><a href="https://www.ospn.jp/osc2017-spring/modules/eventrsv/?id=1&amp;noform=1" target="_blank" rel="external">https://www.ospn.jp/osc2017-spring/modules/eventrsv/?id=1&amp;noform=1</a></li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/20170327/photo_20170327_00.jpeg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h1&gt;&lt;p&gt;こんに
    
    </summary>
    
      <category term="Event" scheme="https://future-architect.github.io/categories/Event/"/>
    
    
      <category term="Conference" scheme="https://future-architect.github.io/tags/Conference/"/>
    
      <category term="vuls" scheme="https://future-architect.github.io/tags/vuls/"/>
    
      <category term="UI/UX" scheme="https://future-architect.github.io/tags/UI-UX/"/>
    
      <category term="SQL" scheme="https://future-architect.github.io/tags/SQL/"/>
    
      <category term="uroboroSQL" scheme="https://future-architect.github.io/tags/uroboroSQL/"/>
    
      <category term="Urushi" scheme="https://future-architect.github.io/tags/Urushi/"/>
    
  </entry>
  
  <entry>
    <title>ヒカ☆ラボ初参戦！AWS x IoTで若手エンジニアが登壇してきました</title>
    <link href="https://future-architect.github.io/articles/20170323/"/>
    <id>https://future-architect.github.io/articles/20170323/</id>
    <published>2017-03-23T03:00:00.000Z</published>
    <updated>2017-05-09T01:57:18.436Z</updated>
    
    <content type="html"><![CDATA[<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>皆さん、<a href="https://teratail.com/" target="_blank" rel="external">teratail</a>使ってますか？</p>
<p>エンジニアの方にはお馴染みのプログラミング系Q＆Aサイトですが、実は3/16より「teratail Report」というのができたのはご存知でしょうか？</p>
<p><img src="/images/20170323/photo_20170323_01.jpeg"></p>
<p>そう、実はこのレポート第１弾に登場しているのが、弊社のエンジニア、須田と武田です！！</p>
<h1 id="経緯"><a href="#経緯" class="headerlink" title="経緯"></a>経緯</h1><p>昨年10月、teratailを運営するレバレジーズさんとお話をする機会があり、ヒカ☆ラボというイベントを運営されていることを伺い、フューチャーさんもどうですか？とお誘いを受けました。</p>
<p>まだ誰が登壇する？どんなトピックにするかも決まってませんでしたが、「やります！！」と勢いでお伝えして、結局今年に入ってから急ピッチで準備を開始しました。</p>
<p>当初は参加者枠は50名にしておこう、参加希望者が少なかった悲しい・・・なんて心配もしていましたが、最終的には270名を超える方にお申込みをして頂くことができました。</p>
<h1 id="当日の模様"><a href="#当日の模様" class="headerlink" title="当日の模様"></a>当日の模様</h1><p>当日のタイムテーブルは下表の通りです。</p>
<table>
<thead>
<tr>
<th>時間</th>
<th>講演内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>19:30～19:35</td>
<td>弊社から挨拶</td>
</tr>
<tr>
<td>19:35～19:40</td>
<td>What’s　FUTURE？</td>
</tr>
<tr>
<td>19:40～20:05</td>
<td>スマートファクトリーを支えるIoTインフラをつくった話</td>
</tr>
<tr>
<td>20:05～20:30</td>
<td>AWSマネージドサービスをフル活用したヘルスケアIoTプラットフォーム</td>
</tr>
<tr>
<td>20:30～20:45</td>
<td>質疑応答</td>
</tr>
<tr>
<td>20:45～21:30</td>
<td>懇親会（ドリンクとお菓子をご用意しています）</td>
</tr>
</tbody>
</table>
<p>当日はあいにくの雨で、参加者の足も遠のくでは？とも思いましたが、多くの方に参加して頂くことができました。</p>
<p>登壇前の二人。非常にリラックスしていますね。</p>
<p><img src="/images/20170323/photo_20170323_02.jpeg"></p>
<p>レバレジーズさんより、フューチャーの場合は会社説明をやったほうがいいですよとアドバイスを頂きましたので、私が「What’s FUTURE？」と題して、5分ほど会社紹介をしてきました。二人の登壇前に場を和ますべく。。。</p>
<p><img src="/images/20170323/photo_20170323_03.jpeg"></p>
<p>まずは、「スマートファクトリーを支えるIoTインフラをつくった話」。須田の登壇です。</p>
<p><img src="/images/20170323/photo_20170323_04.jpeg"></p>
<p>続いて、武田が登壇。お題は「AWSマネージドサービスをフル活用したヘルスケアIoTプラットフォーム」。</p>
<p><img src="/images/20170323/photo_20170323_05.jpeg"></p>
<p>登壇を終えて、質疑応答に笑顔で応える二人。</p>
<p><img src="/images/20170323/photo_20170323_06.jpeg"></p>
<p>この後、懇親会も大いに盛り上がりました！！</p>
<h1 id="イベントレポート"><a href="#イベントレポート" class="headerlink" title="イベントレポート"></a>イベントレポート</h1><p>いつもならこのブログで詳細を語るのですが、すでにteratail Reportで詳しく伝えられてますので、こちらをご覧ください！！</p>
<p><strong>AWSによる大規模IoTプラットフォーム構築の裏側に迫る！</strong><br><a href="https://teratail.com/report/1" target="_blank" rel="external">https://teratail.com/report/1</a></p>
<h1 id="発表資料"><a href="#発表資料" class="headerlink" title="発表資料"></a>発表資料</h1><h2 id="スマートファクトリーを支えるIoTインフラをつくった話"><a href="#スマートファクトリーを支えるIoTインフラをつくった話" class="headerlink" title="スマートファクトリーを支えるIoTインフラをつくった話"></a>スマートファクトリーを支えるIoTインフラをつくった話</h2><iframe src="//www.slideshare.net/slideshow/embed_code/key/xq03ILeKwqoMS" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>

<h2 id="AWSマネージドサービスをフル活用したヘルスケアIoTプラットフォーム"><a href="#AWSマネージドサービスをフル活用したヘルスケアIoTプラットフォーム" class="headerlink" title="AWSマネージドサービスをフル活用したヘルスケアIoTプラットフォーム"></a>AWSマネージドサービスをフル活用したヘルスケアIoTプラットフォーム</h2><iframe src="//www.slideshare.net/slideshow/embed_code/key/CohUlWFppkQqoA" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h1&gt;&lt;p&gt;皆さん、&lt;a href=&quot;https://teratail.com/&quot; target=&quot;_blank&quot; rel=&quot;exter
    
    </summary>
    
      <category term="BigData" scheme="https://future-architect.github.io/categories/BigData/"/>
    
    
      <category term="Conference" scheme="https://future-architect.github.io/tags/Conference/"/>
    
      <category term="IoT" scheme="https://future-architect.github.io/tags/IoT/"/>
    
      <category term="AWS" scheme="https://future-architect.github.io/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>ぶらりシリコンバレー巡礼</title>
    <link href="https://future-architect.github.io/articles/20170322/"/>
    <id>https://future-architect.github.io/articles/20170322/</id>
    <published>2017-03-22T03:00:00.000Z</published>
    <updated>2017-05-09T01:57:18.431Z</updated>
    
    <content type="html"><![CDATA[<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>こんにちは♪<br>またまた、ゆるふわエンジニアの前原ですヽ(*ﾟдﾟ)ノ</p>
<p><a href="/articles/20170321/">前回の記事（スタンフォード大学で食べたピーナッツサラダは、格別だった♥）</a>ではスタンフォード大学をいろいろ見て回りました。</p>
<p>次は、シリコンバレーにひしめくIT企業の巨人たちを見に行きたいと思います！</p>
<p>今回も弊社CTO斎藤洋平さん（ここから洋平さんで表現しますー）に案内してもらいます。</p>
<p>こんな順番で巡礼します！</p>
<ol>
<li>シリコンバレー発祥の地</li>
<li>Google</li>
<li>facebook</li>
<li>Intel</li>
<li>Apple</li>
<li>Elastic</li>
</ol>
<h1 id="1-シリコンバレー発祥の地"><a href="#1-シリコンバレー発祥の地" class="headerlink" title="1. シリコンバレー発祥の地"></a>1. シリコンバレー発祥の地</h1><p>シリコンバレー巡礼のスタート地点は、やはりここからですね。<br>世界有数のIT企業がひしめいているシリコンバレー。<br>そして、ここがシリコンバレー発祥の地といわれる<strong>「ヒューレッド・パッカードのガレージ」</strong></p>
<p><img src="/images/20170322/photo_20170322_01.jpeg"></p>
<p><img src="/images/20170322/photo_20170322_02.jpeg"></p>
<p><strong>「The Birthplace of Silicon Valley」</strong><br>カルフォルニア州パロ アルト市のアディソン街 367 番地のガレージが「シリコン バレー発祥の地」として歴史的建造物に指定され、カルフォルニア州によって記念碑が築かれています。</p>
<p><img src="/images/20170322/photo_20170322_03.jpeg"></p>
<h1 id="2-Google"><a href="#2-Google" class="headerlink" title="2. Google"></a>2. Google</h1><p>Google本社に来ましたーーー<br>とにかく広い！！<br>どこからどこまでが敷地かわからないぐらい広い！</p>
<p>てことで、とりあえず記念撮影！！</p>
<p><img src="/images/20170322/photo_20170322_04.jpeg"></p>
<p>Googleには所々に自転車が置いてあり、社員でなくとも利用することができます。<br>それだけ敷地が広いってことですね。</p>
<p><img src="/images/20170322/photo_20170322_05.jpeg"></p>
<h1 id="3-facebook"><a href="#3-facebook" class="headerlink" title="3. facebook"></a>3. facebook</h1><p>次は、facebookに向かうべく車で移動します。</p>
<p>その途中にIN-N-OUTというハンバーガー屋さんがありました。<br>カリフォルニア州などで展開しているチェーンストアです。<br>美味しいとのことですが、今回は食べられませんでした…</p>
<p>ちなみに、過去に4時間限定で原宿にオープンしたらしいです。</p>
<p><img src="/images/20170322/photo_20170322_06.jpeg"></p>
<p>ということで、facebook本社に着きました。<br>facebookは、オリジナル番地を取得しており、住所が<strong>「1 Hacker Way」</strong>です。</p>
<p><strong>Hacker Way：速く・大胆に・オープンであれ</strong></p>
<p><img src="/images/20170322/photo_20170322_07.jpeg"></p>
<p>元々ここの敷地はSun Microsystemsで、そこにfacebookが移転しました。<br>なので、facebookの看板裏には、Sun Microsystemsの文字が・・・。</p>
<p><img src="/images/20170322/photo_20170322_08.jpeg"></p>
<p>ちなみに、facebook内にもGoogle同様に自転車があるのですが、社員しか乗れない模様…。</p>
<h1 id="4-Intel"><a href="#4-Intel" class="headerlink" title="4. Intel"></a>4. Intel</h1><p>世界最大の半導体メーカのIntel Museumに来ました。<br>ここでは、Intelの歴史、マイクロプロセッサなどのチップをどう作っているかなどが展示されています。<br>1時間くらいで回れるくらいの大きさです。</p>
<p><img src="/images/20170322/photo_20170322_09.jpeg"></p>
<p>当時、Intel4004を日本のビジコン社と共同開発し、4004を組み込んだ電卓を作りあげました。<br>1971年。ここからインテルの歴史が動きました。<br>日本の企業が絡んでいたんですね、感慨深い。</p>
<p><img src="/images/20170322/photo_20170322_10.jpeg"></p>
<p>とりあえず、アスキーコードでFuture Architectの文字を作ってみました！</p>
<p><img src="/images/20170322/photo_20170322_11.jpeg"></p>
<p>博物館内には、お土産コーナーがあり、エンジニア心をくすぐるモノがちょいちょいあります。</p>
<p><img src="/images/20170322/photo_20170322_12.jpeg"></p>
<h2 id="5-Apple"><a href="#5-Apple" class="headerlink" title="5. Apple"></a>5. Apple</h2><p>Apple本社の<strong>Infinite Loop</strong>！！<br>もうすぐ新本社のApple Parkが建設され、2017年4月から移転開始されるとのこと。<br>なので、Infinite Loopが見られるのも後わずか…。</p>
<p><img src="/images/20170322/photo_20170322_13.jpeg"></p>
<p><img src="/images/20170322/photo_20170322_14.jpeg"></p>
<p><strong>Apple Store Infinite Loop</strong></p>
<p>ここでは、一般的にApple Storeで売られているグッズだけでなく、Appleロゴが入ったTシャツや文具など色々と販売されています。</p>
<p><img src="/images/20170322/photo_20170322_15.jpeg"></p>
<h1 id="6-Elastic"><a href="#6-Elastic" class="headerlink" title="6. Elastic"></a>6. Elastic</h1><p>最後は、Elasticの本社にお邪魔しましたー<br>場所は、カリフォルニア州サンタクララ郡内にあるMountain Viewにあります。</p>
<p><img src="/images/20170322/photo_20170322_16.jpeg"></p>
<p>おぉ！受付がオサレですねー<br>ただ、人が一人もおらず、入ることができなかったです。笑<br>Elastic{ON}の対応でほぼ全ての社員が出ていると思うので受付をやっているわけないですよね。。。</p>
<p><img src="/images/20170322/photo_20170322_17.jpeg"></p>
<h1 id="さいごに"><a href="#さいごに" class="headerlink" title="さいごに"></a>さいごに</h1><p>はい！ということで、シリコンバレー巡礼はこれにておしまいです！<br>洋平さん！お忙しいところ本当にありがとうございましたm(<em> </em>)m<br>貴重な体験をさせていただきました☆彡</p>
<p><img src="/images/20170322/photo_20170322_18.jpeg"></p>
<p>次は、いよいよElastic{ON}について書いていきたいと思います。<br>ではでは！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h1&gt;&lt;p&gt;こんにちは♪&lt;br&gt;またまた、ゆるふわエンジニアの前原ですヽ(*ﾟдﾟ)ノ&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/article
    
    </summary>
    
      <category term="Event" scheme="https://future-architect.github.io/categories/Event/"/>
    
    
      <category term="Conference" scheme="https://future-architect.github.io/tags/Conference/"/>
    
      <category term="Elastic-Stack" scheme="https://future-architect.github.io/tags/Elastic-Stack/"/>
    
  </entry>
  
  <entry>
    <title>スタンフォード大学で食べたピーナッツサラダは、格別だった♥</title>
    <link href="https://future-architect.github.io/articles/20170321/"/>
    <id>https://future-architect.github.io/articles/20170321/</id>
    <published>2017-03-21T03:00:00.000Z</published>
    <updated>2017-05-09T01:57:18.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>おはようございます！<br>ゆるふわエンジニアの前原ですー</p>
<p><a href="https://www.elastic.co/elasticon" target="_blank" rel="external">Elastic{ON}</a>に参加のためにサンフランシスコまでやってきましたー<br>しかし天気はあいにくの曇り模様…<br>でもでも、今日の気持ちは晴れです！</p>
<p>なんたって、Elastic{ON}参加前の現地視察として、人生初のシリコンバレーに行く日なのです。<br>そして、案内して頂けるのは弊社のCTO斎藤洋平さん<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>（ここから洋平さんで表現します）！<br>洋平さん待っていてくださいねー✧+(0ﾟ・∀・)wktk</p>
<p>…てことで、今日も1日元気に過ごすために朝食を摂りたいと思います。</p>
<h1 id="Morning"><a href="#Morning" class="headerlink" title="Morning"></a>Morning</h1><p>朝食は、Posh Bagel！<br>通勤前の人たちで賑わっているベーグルが美味しいお店です。<br>ベーグル美味しかったので、サンフランシスコに行かれたら立ち寄ってみてください。<br>ちなみに、いろいろトッピングしても$8ぐらいで収まります。</p>
<p><img src="/images/20170321/photo_20170321_01.jpeg"></p>
<p>サンフランシスコ駅の途中にGCPのカンファレンス会場があり、こちらも準備中で忙しそうでした。<br>あーーー、こっちにも参加したい！ 色々話を聞きたい！(ﾉ_-｡)</p>
<p><img src="/images/20170321/photo_20170321_02.jpeg"></p>
<h2 id="スタンフォード大学到着"><a href="#スタンフォード大学到着" class="headerlink" title="スタンフォード大学到着"></a>スタンフォード大学到着</h2><p>これから洋平さんに会いに行くため、スタンフォード大学へ！</p>
<p>おぉ！！めっちゃいい天気だぁーーー！！<br>サンフランシスコと天候が違いすぎることにビックリ！<br>ちなみに、先日大粒のヒョウが降ったらしく、昨今は異常気象らしいです…<br>やはり、技術も天気も変遷が早いですね（関係ない）</p>
<p><img src="/images/20170321/photo_20170321_03.jpeg"></p>
<p>スタンフォード大学が125周年とのこと。<br>うーん…。歴史を感じますね。</p>
<p><img src="/images/20170321/photo_20170321_04.jpeg"></p>
<p>あ！洋平さんだ！<br>後ろ姿もイケメン♥</p>
<p><img src="/images/20170321/photo_20170321_05.jpeg"></p>
<h2 id="お祈りタイム"><a href="#お祈りタイム" class="headerlink" title="お祈りタイム"></a>お祈りタイム</h2><p>まずは、スタンフォード大学内にある教会でお祈りタイム。</p>
<p><img src="/images/20170321/photo_20170321_06.jpeg"></p>
<p><img src="/images/20170321/photo_20170321_07.png"></p>
<h1 id="Jen-Hsun-Huang-Engineering-Center"><a href="#Jen-Hsun-Huang-Engineering-Center" class="headerlink" title="Jen-Hsun Huang Engineering Center"></a>Jen-Hsun Huang Engineering Center</h1><p>コンピュータサイセンス学科のある校舎を洋平さんに最適ルートで案内してもらいました。</p>
<p>まずは、NVIDIAのJen-Hsun Huanの寄付によって建てられた「Jen-Hsun Huang Engineering Center」です。<br>スタンフォードの色合いを保ちつつ綺麗な建物ですね。</p>
<p><img src="/images/20170321/photo_20170321_08.jpeg"></p>
<p>中に入ると…<br>おぉ！！Googleアルゴリズムの開発研究に使用していたサーバがお出迎え！<br>そして、ケースがレゴだーーー！<br>これは、Google創立者のラリー・ペイジとサーゲイ・ブリンが、ケースをレゴで組み立てたとのこと。</p>
<p><img src="/images/20170321/photo_20170321_09.jpeg"></p>
<p>正面はこんな感じでレゴ感MAXですね。</p>
<p><img src="/images/20170321/photo_20170321_10.jpeg"></p>
<p>奥に入るとスタンフォード大学のラボを発見！<br>ここでチームを組んでプロトタイプ開発をしているみたいです。<br>うーん…、    すごく楽しそう！<br>PCだけでなく工作できる環境があるのは素敵ですね。</p>
<p><img src="/images/20170321/photo_20170321_11.jpeg"></p>
<h2 id="Hewlett-Packard"><a href="#Hewlett-Packard" class="headerlink" title="Hewlett-Packard"></a>Hewlett-Packard</h2><p>Jen-Hsun Huang Engineering Centerから離れ、次の目的地に洋平さんに案内してもらいます。<br>その途中にヒューレットとパッカードのビルが両サイドに構えています。</p>
<p>スタンフォード大学には、卒業生などが寄贈したビルが立ち並んでいます。</p>
<ul>
<li><p>Packard Electrical Engineering Building<br><img src="/images/20170321/photo_20170321_12.jpeg"></p>
</li>
<li><p>William R. Hewlett Teaching Center<br><img src="/images/20170321/photo_20170321_13.jpeg"></p>
</li>
<li><p>The William Gates Computer Science Building<br><img src="/images/20170321/photo_20170321_14.jpeg"></p>
</li>
</ul>
<h1 id="Lunch"><a href="#Lunch" class="headerlink" title="Lunch"></a>Lunch</h1><p>濃厚な午前中を過ごしたので・・・ランチ！<br>洋平さんのオススメのお店を教えてもらい、いざランチへ！</p>
<p>オススメのお店はタイ料理屋さんです！<br>全部$7という優しさ！<br>ちなみに、学食もあるのですが、あまり美味しくないそうです…</p>
<p><img src="/images/20170321/photo_20170321_15.jpeg"></p>
<p>洋平さんおすすめは、ピーナッツ風味のピリ辛味のコチラ！（名前は忘れちゃいました）<br>クセになる程の美味しさです。<br>洋平さんが、週に一回のペースで食べている気持ちがわかります。</p>
<p><img src="/images/20170321/photo_20170321_16.jpeg"></p>
<h2 id="d-school"><a href="#d-school" class="headerlink" title="d.school"></a>d.school</h2><p>ご飯を食べて元気になったところで次なるところへ移動！</p>
<p>ということで、デザイン思考を学ぶ場所を紹介します。<br>Hasso Plattner Institute of Designという名で、通称「d.school」と呼ばれています。</p>
<p><img src="/images/20170321/photo_20170321_17.jpeg"></p>
<p>ちなみに、Hasso Plattner Institute of Designは、SAPの共同設立者、Hasso Plattnerが寄付（35,000,000 USドル）し、2005年にIDEO創設者兼CEO(当時)であり、スタンフォード大学教授のDavid Kelleyがディレクターとなって設立されました。</p>
<p><img src="/images/20170321/photo_20170321_18.jpeg"></p>
<p>d.schoolの授業目的は、モノを作るのでなく、問題解決のプロセスをデザインすることを学びます。</p>
<p><strong>「Design Thinking」</strong><br>d.schoolでは人間を中心にしたデザインから、いままでの経験や思考などに捉われず、接点のなさそうな点と点を結びつけることで新しいモノが生まれることを最も重視しています。</p>
<p>なので、課題に対して仮説を立てて…ではなく、現場に足を運び目で見て体験し、観察を通じて課題の本質を見出すことが大切とのこと。<br>また、ここでは、様々なバックグラウンド（医学部、建築部..etc）の人がたくさん集まることにより、化学反応が起こるような環境をつくっているそうです。</p>
<p>学生たちが日々感じている課題を共有するボードや、作業をするための道具が揃っています。</p>
<p><img src="/images/20170321/photo_20170321_19.jpeg"></p>
<p><img src="/images/20170321/photo_20170321_20.jpeg"></p>
<p>中は吹き抜けになっており、フラッグが掲げられています。</p>
<p>吹き抜けに掲げられているフラッグには、<br><strong>「間違いなんてない。勝利も失敗もない。あるのはただ作ることだけ」</strong><br>と書かれていました。</p>
<p>…シビれますね！</p>
<p><img src="/images/20170321/photo_20170321_21.jpeg"></p>
<h1 id="散歩"><a href="#散歩" class="headerlink" title="散歩"></a>散歩</h1><p>スタンフォード大学の学生は、イメージ通り芝生でくつろいだりしているみたいですね。<br>涼しい顔をして、くつろいでいる感じですが、実際は、深夜も家でめっちゃ勉強しているらしいです。<br>スタンフォード大学の学生は、「アヒルの水かき」とのこと。<br>（写真は、スタンフォード学生ではないですが）</p>
<p><img src="/images/20170321/photo_20170321_22.jpeg"></p>
<h1 id="おわりに"><a href="#おわりに" class="headerlink" title="おわりに"></a>おわりに</h1><p>スタンフォード大学。ここでたくさんの優秀な学生が誕生するだけでなく、イノベーションも数々生まれる環境。<br>こういった環境に私達の会社からも当たり前に留学できる環境を整えていきたいですね。</p>
<p><img src="/images/20170321/photo_20170321_23.jpeg"></p>
<p>ということで、スタンフォード大学編は、これにて終了です。<br>ありがとうございました。</p>
<p>次回は、シリコンバレー巡礼編をお送りします！</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">弊社のCTOである洋平さんは、現在スタンフォード大学にてMBAとコンピュータサイエンスを客員研究員として研究しているため、サンフランシスコに在住しています</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h1&gt;&lt;p&gt;おはようございます！&lt;br&gt;ゆるふわエンジニアの前原ですー&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.elas
    
    </summary>
    
      <category term="Event" scheme="https://future-architect.github.io/categories/Event/"/>
    
    
      <category term="Conference" scheme="https://future-architect.github.io/tags/Conference/"/>
    
      <category term="DesignThinking" scheme="https://future-architect.github.io/tags/DesignThinking/"/>
    
      <category term="Elastic-Stack" scheme="https://future-architect.github.io/tags/Elastic-Stack/"/>
    
  </entry>
  
  <entry>
    <title>世論調査の内閣支持率を統計学的に解釈すると…?</title>
    <link href="https://future-architect.github.io/articles/20170314/"/>
    <id>https://future-architect.github.io/articles/20170314/</id>
    <published>2017-03-14T05:00:00.000Z</published>
    <updated>2017-05-09T01:57:18.421Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。データ分析チームの米谷悠です。</p>
<p>フューチャーアーキテクトのデータ分析チームは各プロジェクトと連携しながら、いま流行りのDeepLearning等を使った画像処理・自然言語処理や、従来からある多変量解析や機械学習の方法を使った社会科学・経済・マーケティング・経営組織等に関するデータの分析を行っています。こうしたデータサイエンス領域における基礎の一つとして統計学があることはみなさんもご存知かと思います。本Blogでは日常のニュースで報道される数字を統計学的に説明することによって、統計学の基本的な考え方に触れていきたいと思います。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。</p>
<h2 id="内閣支持率を統計学を使ってより厳密に説明"><a href="#内閣支持率を統計学を使ってより厳密に説明" class="headerlink" title="内閣支持率を統計学を使ってより厳密に説明"></a>内閣支持率を統計学を使ってより厳密に説明</h2><p><img src="/images/20170310/photo_20170310_01.jpeg"></p>
<p>みなさんも「世論調査」や「内閣支持率」という言葉をニュース等で耳にすると思います。よく知られている世論調査は新聞各社等を中心に行われ、内閣支持率はその調査項目の一つです。</p>
<p>つい先日も日本経済新聞とテレビ東京が世論調査を行い、2017年2月27日（月）の同新聞朝刊の記事には</p>
<blockquote>
<p>内閣支持率は1月の前回調査と比べて～（中略）～60%だが、引き続き高い水準を保つ。</p>
</blockquote>
<p>とありました。さらに</p>
<blockquote>
<p>調査は日経リサーチが24～26日に全国の18歳以上の男女に携帯電話も含めて乱数番号（RDD方式）による電話で実施。1001件の回答を得た。回答率は47.4%。</p>
</blockquote>
<p>とありました。</p>
<p>今回は、統計学の基礎知識を使って、この内閣支持率のより厳密な説明を試みます。具体的に、<strong>この世論調査の結果はある条件のもとで「全国の有権者全員に調査したらわかるはずの内閣支持率が60%であると推定された。また、当該内閣支持率が、推定された60%の前後3%ポイント（57%～63%）の間に存在する確率が95%で、存在しない確率は5%である」</strong> と言うことも可能となります。</p>
<p>「内閣支持率は60%ではないの？」と思われた方もおられるかもしれません。上記のように言える理由を以下でご説明します。</p>
<h2 id="「世論調査で本当に知りたかったこと」と統計調査"><a href="#「世論調査で本当に知りたかったこと」と統計調査" class="headerlink" title="「世論調査で本当に知りたかったこと」と統計調査"></a>「世論調査で本当に知りたかったこと」と統計調査</h2><p>そもそも世論調査で本当に知りたかったことは何でしょうか？それは新聞記事では明示されていませんが、「もし全国の有権者全員に調査することができたとすると、わかるはずの内閣支持率」です<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>。これは国政等においてとても重要な値です。</p>
<p>では、なぜ全国の有権者全員に調査しないのでしょうか？それはコストの問題から非現実的であることは明らかです。これに対して、全国の有権者の一部であれば今回の世論調査のように調査することが可能です。</p>
<p>統計学では、全国の有権者全員を <strong>母集団</strong>、実際に電話が掛かってきた有権者を <strong>標本</strong> と言います。そして、本Blogでは「もし全国の有権者全員に調査することができたらわかるはずの内閣支持率」を <strong>母支持率</strong>、実際に電話が掛ってきた有権者への調査でわかった内閣支持率60%を <strong>標本支持率</strong> と呼ぶことにします。</p>
<p><img src="/images/20170310/photo_20170310_02.png"></p>
<p>次に、標本は今回の世論調査と同じように選ばれる必要があります。つまり、まず標本は母集団から選ばれなければいけません。有権者でない方に調査を行うよりも、有権者に調査を行った方が、より適切な結果が得られることはおわかりいただけると思います。</p>
<p>また、標本は母集団からランダムに（今回の世論調査では乱数番号（RDD方式）を使って）選ばれる必要があります。仮に、全国の有権者全体において内閣を支持する有権者と支持しない有権者が半々（つまり母支持率50%）だったとして、意図的に内閣を支持する有権者だけを標本として調査を行うと、標本支持率は100%となり、調査対象と結果に偏りがあることから、母集団の状況をより正確に表すことができていません。</p>
<h2 id="「同じ調査を何度も繰り返すことができた状況」を想定することが基本的なアイデア"><a href="#「同じ調査を何度も繰り返すことができた状況」を想定することが基本的なアイデア" class="headerlink" title="「同じ調査を何度も繰り返すことができた状況」を想定することが基本的なアイデア"></a>「同じ調査を何度も繰り返すことができた状況」を想定することが基本的なアイデア</h2><p>以上のようにして得られた標本支持率60%は、本当に知りたかった母支持率と一致しているのでしょうか？必ずしも一致するとは限りません。例えば、母支持率が60%のときに、ランダムに1,001人の標本を抽出したところ、偶然にも全員が内閣支持者（標本支持率100%）となることは、\(0.6^{1001}\)という僅かな確率ですが起こりえます。</p>
<p>では、標本支持率と母支持率の関係はどうなっているのでしょうか？実は、母集団から標本をランダムに選んでいたことで、標本支持率60%はある性質を持ちます。以下ではこのことをご説明して、世論調査の内閣支持率を統計学を使ってより厳密にお伝えすることを試みます。</p>
<p>まず、今回と同じ世論調査を、同じ条件で何度も繰り返すことができたとしましょう。つまり、同じ時点で同じ母集団からランダムに標本を選んで標本支持率を計算するというプロセスを何度も繰り返すことができたとします。標本は毎回ランダムに選ばれているので、標本も標本支持率も毎回異なるはずです。</p>
<p>そして、各回で得られる標本支持率を集めて、そのヒストグラム(ある集団の個々の数値の分布を視覚化するグラフ)を書くことができたとしたら、それは母支持率を中心とする正規分布に近似できることが統計学の理論上知られています（中心極限定理）。つまり、調査回数分だけある標本支持率は、その多くが母支持率の近傍にある一方、母支持率から遠く離れた値も僅かな確率で取りうるということです。</p>
<p><img src="/images/20170310/photo_20170310_03.png"></p>
<p>そして、実際に行われた今回の1回の世論調査で得られた標本支持率60%は、近似した正規分布の相対頻度にしたがって、母支持率の周辺のどこか一つの値を取っていると考えられるようになります。</p>
<h2 id="「世論調査で本当に知りたかった内閣支持率」と「調査結果の内閣支持率60-」の関係"><a href="#「世論調査で本当に知りたかった内閣支持率」と「調査結果の内閣支持率60-」の関係" class="headerlink" title="「世論調査で本当に知りたかった内閣支持率」と「調査結果の内閣支持率60%」の関係"></a>「世論調査で本当に知りたかった内閣支持率」と「調査結果の内閣支持率60%」の関係</h2><p>では、実際に行われた今回の1回の世論調査で得られた1つの標本支持率と母支持率の具体的な関係はどうなっているのでしょうか？</p>
<p>まず、近似できる正規分布の散らばり具合を表す標準偏差を、今回の1回の世論調査の標本データ（標本支持率は「支持する」を1、「支持しない」を0）から推定することができます。そして、その標準偏差の推定値と正規分布の理論式を組合せることで、何度も同じ調査を繰り返すことができたら得られる調査回数分の標本支持率の95%分が、母支持率の前後〇〇%の間で発生しうるということを（例えば100万回調査を行ったら95万回分の標本支持率が発生しうる区間を）具体的に推定することができます。このことは、反対に5%分（5万回分の標本支持率）が母支持率の前後〇〇%より外の値と推定できることも意味します<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>。</p>
<p>このことから、今回の1回の世論調査で得られた標本支持率60%は、95%の確率で母支持率の前後〇〇%の間にあると推定されると言えることになり、それは反対に標本支持率60%の前後〇〇%の間に母支持率がある確率が95%と推定されると言えることにもなります。</p>
<p>同様に標本支持率60%の前後〇〇%の間に母支持率がない確率が5%と推定されるとも言えます。つまり、世論調査の内閣支持率60%が、もし全国の有権者全員に調査したらわかるはずの本当に知りたい母支持率から大きく外れている可能性も僅かながらありうるということです。</p>
<h2 id="より厳密な説明例"><a href="#より厳密な説明例" class="headerlink" title="より厳密な説明例"></a>より厳密な説明例</h2><p>もし仮に今回の世論調査が、前述の条件に加えて次の2つの条件のもとでも行われているとすれば、母支持率の周辺の95%分の標本支持率が発生する区間は、母支持率の前後3%<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>と推定されます。</p>
<ol>
<li>全国の有権者全員を何らかの属性で分けた上で、各属性内でランダムに標本を選んでいるのではなく、全国の有権者全員を一つの層としている。</li>
<li>回答率が47.7%ではなく100%である、もしくは回答と非回答がランダムに発生している<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>。</li>
</ol>
<p>以上の条件のもとでは、冒頭に書いたように「国の有権者全員に調査したらわかるはずの内閣支持率が60%であると推定された。また、当該内閣支持率が、推定された60%の前後3%（57%～63%）の間に存在する確率が95%で、存在しない確率は5%である」と言うことができます。</p>
<h2 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a>最後に</h2><p>今回は世論調査で調べられている内閣支持率を、統計学の基本的な知識を用いて、より厳密にお伝えすることを試みました。いかがだったでしょうか？</p>
<p>公表されている内閣支持率が、全国の有権者全員に調査したらわかるはずの内閣支持率とは必ずしも一致せず、僅かな確率ではありますが、大外れしている可能性もあるということは、聞いてみれば当たり前かもしれませんが、少し驚かれた方もおられるのではないでしょうか？</p>
<p>フューチャーアーキテクトは、ITの分野において原理原則を重視するマインドが非常に強いですが、それはデータ分析においても同じです。</p>
<p>データ分析、機械学習、AIといったデータサイエンス領域において基礎的要素の一つである統計学も疎かにせず業務の方を推進しておりますので、今後ともよろしくお願いします！！</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">厳密には古典的な頻度理論的な考え方にもとづく統計学です。頻度理論的な考え方にもとづく統計学のパラメータ（推定対象）推定では、手元のデータを収集した条件と同じ条件で、何度も繰り返しデータを収集することが可能であることを前提とします。これに対してベイズ統計学ではこういったことを前提としませんが、代わりにたった一つの値しかないはずのパラメータが分布していることを前提とします。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;"><a href="https://www.nikkei-r.co.jp/pollsurvey/method.html" target="_blank" rel="external">日経リサーチのウェブサイトにある調査方法</a>によると、電話を掛ける対象が「全国の有権者全員」の中の「固定電話加入世帯または携帯電話加入者」から決めていることから、本調査で本当に知りたかったことを厳密に言うと「もし固定電話加入世帯全体と携帯電話加入者全員に調査することができたらわかるはずの内閣支持率」となるでしょう。ただし「調査の対象：全国の有権者」ともなっており、実際に有権者全員の名簿を持っているとは言い難く、「固定電話加入世帯または携帯電話加入者」で「全国の有権者全員」を代替しようとしていると思われます。本Blogでも、本当に知りたかったことを「もし全国の有権者全員に調査することができたらわかるはずの内閣支持率」として話を進めます。また、新聞記事では「全国の18歳以上の男女」となっておりますが、これは「全国の有権者全員」の中の「固定電話加入世帯または携帯電話加入者」を簡単に言い換えているものと思われます。</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;">当該範囲は調査方法によって、当該範囲の推定値は回答結果によってそれぞれ変わります。また、ここでは95%を例としていますが、90%としたり99%としたりするなど、他の割合を使うことももちろん可能です。95%はよく使われる割合の一つです。</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline-block; vertical-align: top;">標本の回答をベルヌーイ分布として、その標準偏差の推定値を用いて求めることができます。 $$標準正規分布の両側95\%点 1.96 \times \sqrt{標本支持率 0.6 \times (1-標本支持率 0.6) / 標本数 1,001} \fallingdotseq 0.03$$</span><a href="#fnref:4" rev="footnote"> ↩</a></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">5.</span><span style="display: inline-block; vertical-align: top;">ここでの回答が100%ということは、1,001人に調査して全員が「支持する」か「支持しない」と回答したことと考えています。また、回答と非回答がランダムに発生していると想定することは厳密にはやや無理のある仮定と思われます。</span><a href="#fnref:5" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;こんにちは。データ分析チームの米谷悠です。&lt;/p&gt;
&lt;p&gt;フューチャーアーキテクトのデータ分析チームは各プロジェクトと連携しながら、いま流行りのDeepLearning等を使った画像処理・自然言語処理や、従来からある多変量解析や機械学習の方法を使った社会科学・経済・マーケテ
    
    </summary>
    
      <category term="DataScience" scheme="https://future-architect.github.io/categories/DataScience/"/>
    
    
      <category term="Statistics" scheme="https://future-architect.github.io/tags/Statistics/"/>
    
  </entry>
  
  <entry>
    <title>SQL開発者を幸せにする！？ Sublime Text 3でも使える uroboroSQL Formatter を公開しました</title>
    <link href="https://future-architect.github.io/articles/20170228/"/>
    <id>https://future-architect.github.io/articles/20170228/</id>
    <published>2017-02-28T03:00:00.000Z</published>
    <updated>2017-05-09T01:57:18.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>はじめまして、太田です。<br>今回、弊社謹製のSQLフォーマッター<a href="https://github.com/future-architect/uroboroSQL-formatter" target="_blank" rel="external"><strong>uroboroSQL formatter</strong></a>を公開しましたので、その紹介をさせていただきます。<br>また、<a href="https://future-architect.github.io/articles/20160902/">弊社、星が昨年投稿した記事</a>の中で<a href="https://future-architect.github.io/coding-standards/documents/forJava/Javaコーディング規約.html">Javaのコーディング規約</a>を公開しましたが、今回その第2弾として、<a href="https://future-architect.github.io/coding-standards/documents/forSQL/SQLコーディング規約（Oracle）.html">SQLのコーディング規約（Oracle限定）</a>も公開いたしましたので、こちらについても触れたいと思います。</p>
<p><a href="https://github.com/future-architect/uroboroSQL-formatter" target="_blank" rel="external"><br><img src="/images/20170227/photo_20170227_01.png" class="img-middle-size"><br></a></p>
<h1 id="作成経緯"><a href="#作成経緯" class="headerlink" title="作成経緯"></a>作成経緯</h1><p>みなさんはどのようなSQLフォーマッターを利用されていますか？　色々あって悩みますよね。<br>中には、「実はSQLフォーマッターを使っていない」とか、「SQLフォーマッターを使っていても最終的には手で修正する」という開発フローをとっているチームも少なからず存在するのでは無いでしょうか？<br>というか弊社の開発チームは主に上記の2つです（でした）。</p>
<p>理由を簡単に言ってしまえば、「コーディング規約に合わない」からです。<br>「カンマ」や「AND・OR」を、「前にする or 後ろにする」、「大文字にする or 小文字にする」などいろいろありますが、<br>一番困ったのは「コメントの扱い」です。自分調べですが、コメントが含まれると途端にフォーマットが崩れるフォーマッターが多い印象です。</p>
<p>コーディング規約としてコメントを書くことを強制しているというのもありますが、<br>弊社では<a href="http://doma.readthedocs.io/ja/stable/" target="_blank" rel="external">Doma2</a>のような2WaySQLテンプレートエンジンを利用していることもあり、<br>コメントがあることを前提にフォーマットしてほしいという要望がありました。</p>
<p>このため、弊社では<del>興味本位で</del>SQLフォーマッターを作成することになりました。</p>
<h1 id="uroboroSQL-formatter利用方法"><a href="#uroboroSQL-formatter利用方法" class="headerlink" title="uroboroSQL formatter利用方法"></a><strong>uroboroSQL formatter</strong>利用方法</h1><h2 id="SublimeTextプラグイン"><a href="#SublimeTextプラグイン" class="headerlink" title="SublimeTextプラグイン"></a>SublimeTextプラグイン</h2><p>SublimeText3のプラグインとして利用できます。</p>
<p><img src="/images/20170227/photo_20170227_02.png"></p>
<p>導入は、<br><code>Package Control</code>の<code>Install Package</code>から<br><strong>uroboroSQL Formatter</strong>を検索しInstallを行ってください。</p>
<p>メニューバー→<code>Edit</code>→<code>SQL Format</code>で利用できます。</p>
<p>設定は下記のgithubリポジトリのREADMEをご覧ください。  </p>
<p><a href="https://github.com/future-architect/Sublime-uroboroSQL-formatter" target="_blank" rel="external">Sublime-uroboroSQL-formatter</a><br><a href="https://github.com/future-architect/Sublime-uroboroSQL-formatter/blob/master/Readme.ja.md" target="_blank" rel="external">日本語Readme</a></p>
<h2 id="コマンドライン実行"><a href="#コマンドライン実行" class="headerlink" title="コマンドライン実行"></a>コマンドライン実行</h2><p>SQLファイルを指定してコマンドラインから実行できるツールも用意しています。<br>導入方法は下記のGitHubリポジトリのREADMEをご覧ください。  </p>
<p><a href="https://github.com/future-architect/uroboroSQL-formatter#exeファイルの実行" target="_blank" rel="external">uroboroSQL-formatter#exeファイルの実行</a><br><a href="https://github.com/future-architect/uroboroSQL-formatter/releases/latest" target="_blank" rel="external">Latest release</a></p>
<h1 id="uroboroSQL-formatter特徴"><a href="#uroboroSQL-formatter特徴" class="headerlink" title="uroboroSQL formatter特徴"></a><strong>uroboroSQL formatter</strong>特徴</h1><p>このSQLフォーマッターには以下のような特徴があります。</p>
<ul>
<li>Doma2とuroboroSQL(※)の2Way SQLに対応したフォーマット</li>
<li>AS句のインデント揃え</li>
<li>テーブル・カラム・条件式の行コメントのインデント揃え</li>
</ul>
<p>※<a href="https://github.com/future-architect/uroborosql" target="_blank" rel="external">uroboroSQL</a>は2月末ごろOSS公開予定のSQL実行エンジンです。<br>SublimeText3のプラグインをDoma2で利用される場合は下記のように設定してください。  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    "uf_comment_syntax": "doma2", // "uroboroSQL" or "doma2"</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="参考：SQLのフォーマット例"><a href="#参考：SQLのフォーマット例" class="headerlink" title="参考：SQLのフォーマット例"></a>参考：SQLのフォーマット例</h2><h3 id="1-プレーンなSELECT-SQLの例"><a href="#1-プレーンなSELECT-SQLの例" class="headerlink" title="1. プレーンなSELECT-SQLの例"></a>1. プレーンなSELECT-SQLの例</h3><ul>
<li><p>フォーマット前</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span></div><div class="line"> <span class="keyword">name</span> <span class="keyword">as</span> <span class="keyword">name</span><span class="comment">-- 都道府県名</span></div><div class="line">,prefectural_capital <span class="keyword">as</span> capital <span class="comment">-- 県庁所在地</span></div><div class="line"><span class="keyword">from</span></div><div class="line"> prefectures <span class="comment">-- 都道府県</span></div><div class="line"><span class="keyword">where</span></div><div class="line"> local_division_id = <span class="number">3</span> <span class="comment">-- 関東地方</span></div><div class="line"><span class="keyword">and</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%東%'</span> <span class="comment">-- 都道府県名に"東"を含む</span></div></pre></td></tr></table></figure>
</li>
<li><p><a href="http://www.oracle.com/technetwork/jp/developer-tools/sql-developer/downloads/index.html" target="_blank" rel="external">SQL Developer</a>によるフォーマット</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span> <span class="keyword">AS</span> <span class="keyword">name</span><span class="comment">-- 都道府県名</span></div><div class="line">  ,</div><div class="line">  prefectural_capital <span class="keyword">AS</span> capital <span class="comment">-- 県庁所在地</span></div><div class="line"><span class="keyword">FROM</span> prefectures                 <span class="comment">-- 都道府県</span></div><div class="line"><span class="keyword">WHERE</span> local_division_id = <span class="number">3</span>      <span class="comment">-- 関東地方</span></div><div class="line"><span class="keyword">AND</span> <span class="keyword">name</span> <span class="keyword">LIKE</span> <span class="string">'%東%'</span>              <span class="comment">-- 都道府県名に"東"を含む</span></div></pre></td></tr></table></figure>
</li>
<li><p><a href="http://a5m2.mmatsubara.com/" target="_blank" rel="external">A5:SQL Mk-2</a>によるフォーマット</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span></div><div class="line">  <span class="keyword">name</span> <span class="keyword">as</span> <span class="keyword">name</span>                                    <span class="comment">-- 都道府県名</span></div><div class="line">  , prefectural_capital <span class="keyword">as</span> capital                <span class="comment">-- 県庁所在地</span></div><div class="line"><span class="keyword">from</span></div><div class="line">  prefectures                                     <span class="comment">-- 都道府県</span></div><div class="line"><span class="keyword">where</span></div><div class="line">  local_division_id = <span class="number">3</span>                           <span class="comment">-- 関東地方</span></div><div class="line">  <span class="keyword">and</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%東%'</span>                            <span class="comment">-- 都道府県名に"東"を含む</span></div></pre></td></tr></table></figure>
</li>
<li><p><strong>uroboroSQL formatter</strong>によるフォーマット</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">NAME</span>                <span class="keyword">AS</span>  <span class="keyword">NAME</span>    <span class="comment">-- 都道府県名</span></div><div class="line">,   PREFECTURAL_CAPITAL <span class="keyword">AS</span>  CAPITAL <span class="comment">-- 県庁所在地</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    PREFECTURES <span class="comment">-- 都道府県</span></div><div class="line"><span class="keyword">WHERE</span></div><div class="line">    LOCAL_DIVISION_ID   =       <span class="number">3</span>       <span class="comment">-- 関東地方</span></div><div class="line"><span class="keyword">AND</span> <span class="keyword">NAME</span>                <span class="keyword">LIKE</span>    <span class="string">'%東%'</span> <span class="comment">-- 都道府県名に"東"を含む</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p><br></p>
<h3 id="2-Domaライクな2Way-SQLの例"><a href="#2-Domaライクな2Way-SQLの例" class="headerlink" title="2. Domaライクな2Way SQLの例"></a>2. Domaライクな2Way SQLの例</h3><ul>
<li><p>フォーマット前(SQLテンプレート)</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * </div><div class="line"><span class="keyword">from</span> emp</div><div class="line"><span class="keyword">where</span> emp_id = <span class="comment">/*empId*/</span><span class="number">123</span></div></pre></td></tr></table></figure>
</li>
<li><p><a href="http://www.oracle.com/technetwork/jp/developer-tools/sql-developer/downloads/index.html" target="_blank" rel="external">SQL Developer</a>によるフォーマット</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> emp_id = <span class="comment">/*empId*/</span></div><div class="line">  <span class="number">123</span></div></pre></td></tr></table></figure>
<p>  崩れます。<br>  （<a href="http://a5m2.mmatsubara.com/beta/" target="_blank" rel="external">beta版</a>のSQL整形機能で2WeySQLの対応がされ、崩れは起こらなくなりました。詳しくは<a href="#2017-3-6追記">追記</a>を参照ください）</p>
</li>
<li><p><a href="http://a5m2.mmatsubara.com/" target="_blank" rel="external">A5:SQL Mk-2</a>によるフォーマット</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span></div><div class="line">  * </div><div class="line"><span class="keyword">from</span></div><div class="line">  emp </div><div class="line"><span class="keyword">where</span></div><div class="line">  emp_id = <span class="comment">/*empId*/</span></div><div class="line">  <span class="number">123</span></div></pre></td></tr></table></figure>
<p>  崩れます。</p>
</li>
<li><p><strong>uroboroSQL formatter</strong>によるフォーマット</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    *</div><div class="line"><span class="keyword">FROM</span></div><div class="line">    EMP</div><div class="line"><span class="keyword">WHERE</span></div><div class="line">    EMP_ID  =   <span class="comment">/*empId*/</span><span class="number">123</span></div></pre></td></tr></table></figure>
<p>  崩れません！</p>
</li>
</ul>
<p>※<a href="http://www.oracle.com/technetwork/jp/developer-tools/sql-developer/downloads/index.html" target="_blank" rel="external">SQL Developer</a>も<a href="http://a5m2.mmatsubara.com/" target="_blank" rel="external">A5:SQL Mk-2</a>を機能不十分と言っているわけではありません。どちらも最高にクールで便利なツールです。どちらも大変お世話になっております。みなさんにとっても扱いやすく馴染みあるSQLフォーマット機能を持つツールかと思い、例として書かせていただいております。</p>
<h1 id="弊社SQLコーディング規約について"><a href="#弊社SQLコーディング規約について" class="headerlink" title="弊社SQLコーディング規約について"></a>弊社SQLコーディング規約について</h1><p>弊社には独自のSQLのコーディング規約が存在し、長年受け継がれメンテナンスを続けています。<br>今回、このSQLコーディング規約を公開させていただくことになりました。</p>
<p><a href="https://future-architect.github.io/coding-standards/documents/forSQL/SQLコーディング規約（Oracle）.html">SQLコーディング規約（Oracle）</a></p>
<p><strong>uroboroSQL formatter</strong>もこの規約に準拠するよう作成しています。</p>
<p>本記事で、少しだけ紹介したいと思います。</p>
<h2 id="論理名のコメント"><a href="#論理名のコメント" class="headerlink" title="論理名のコメント"></a>論理名のコメント</h2><p>テーブル及び、カラムには論理名（日本語）でコメントを書くという規約があります。<br>カラムやテーブル名書いた上にまた日本語で同じことコメントで書かせるのは無駄では？と思われるでしょうが必要なことであると考えます。</p>
<p>Oracleの識別子の名前は30バイト以内という制限があります。<br>（<a href="https://dev.mysql.com/doc/refman/5.6/ja/identifiers.html" target="_blank" rel="external">MySQLも64バイト以内</a>、<a href="http://www.postgresql.jp/document/9.5/html/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS" target="_blank" rel="external">PostgreSQLにもデフォルト63バイト以内</a>という制限があるようですね）</p>
<p>この制限の中で、膨大にある全てのテーブル名・カラム名で、確実に意味の伝わる識別子名を考えるのは至難の業です。<br>であれば、略語を考えるための規約を決めて運用するのが手っ取り早いです。（わたしは出会ったことはありませんがテーブル名をTBL001-TBL100のように連番定義していくなんて話も聞いたことがあります）  </p>
<p>仮にテーブル名を連番定義していく運用を行った場合には、コメントなしで作成されたSQLは読めたものではありません。もし新規参画した方であれば恐怖でしかないでしょう。<br>1テーブル参照のみのSQLであればテーブルのコメントを確認し、かろうじて解読することができるかもしれませんが、サブクエリが現れた場合はどうでしょうか。いっそ匙を投げたくなるのではないでしょうか。<br>このため可読性を考慮し、論理名をコメントで書いてもらう必要があると考えています。</p>
<h3 id="uroboroSQL-formatterの対応"><a href="#uroboroSQL-formatterの対応" class="headerlink" title="uroboroSQL formatterの対応"></a><strong>uroboroSQL formatter</strong>の対応</h3><p>uroboroSQL formatterはテーブル・カラム・条件式に書いた行コメントのインデントを揃えます。</p>
<ul>
<li><p>フォーマット前</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line"> <span class="keyword">ID</span> <span class="keyword">AS</span> DATA_ID <span class="comment">-- ID</span></div><div class="line">, CODE <span class="keyword">AS</span> DATA_CODE <span class="comment">-- コード</span></div><div class="line">, <span class="keyword">NAME</span> <span class="keyword">AS</span> DATA_NAME <span class="comment">-- 名称</span></div><div class="line">, VALUE1 <span class="keyword">AS</span> VAL1 <span class="comment">-- 値１</span></div><div class="line">, VALUE2 <span class="keyword">AS</span> VAL2 <span class="comment">-- 値２</span></div><div class="line">, VALUE3 <span class="keyword">AS</span> VAL3 <span class="comment">-- 値３</span></div><div class="line">, VALUE4 <span class="keyword">AS</span> VAL4 <span class="comment">-- 値４</span></div><div class="line">, VALUE5 <span class="keyword">AS</span> VAL5 <span class="comment">-- 値５</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line"> TABLE01</div></pre></td></tr></table></figure>
</li>
<li><p>フォーマット後</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">ID</span>      <span class="keyword">AS</span>  DATA_ID     <span class="comment">-- ID</span></div><div class="line">,   CODE    <span class="keyword">AS</span>  DATA_CODE   <span class="comment">-- コード</span></div><div class="line">,   <span class="keyword">NAME</span>    <span class="keyword">AS</span>  DATA_NAME   <span class="comment">-- 名称</span></div><div class="line">,   VALUE1  <span class="keyword">AS</span>  VAL1        <span class="comment">-- 値１</span></div><div class="line">,   VALUE2  <span class="keyword">AS</span>  VAL2        <span class="comment">-- 値２</span></div><div class="line">,   VALUE3  <span class="keyword">AS</span>  VAL3        <span class="comment">-- 値３</span></div><div class="line">,   VALUE4  <span class="keyword">AS</span>  VAL4        <span class="comment">-- 値４</span></div><div class="line">,   VALUE5  <span class="keyword">AS</span>  VAL5        <span class="comment">-- 値５</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    TABLE01</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="カンマ、AND・ORを前に配置"><a href="#カンマ、AND・ORを前に配置" class="headerlink" title="カンマ、AND・ORを前に配置"></a>カンマ、AND・ORを前に配置</h2><p>これに関しては賛否両論あると思います。個人的にはどちらでも構わないのですが、統一されていないことは悪でしょう。<br>なぜなら統一されていない場合には、リファクタリングでカラム順序や条件順序を入れ替えただけで苦しめられる可能性が高くなります。</p>
<p>今回”前”とした理由としては、リファクタリング等行う場合、後ろの方が入れ替えや追加が発生しやすいと考えるからです。</p>
<p>どういうことかと言いますと、SELECTを書く際、多くの場合、下記のようにKEYやメインの項目から記述すると考えています。下記の場合<code>ID</code>はリファクタリングや機能追加で動くことがほぼ無いので、カンマ配置の影響を受けません。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">ID</span>      <span class="comment">-- ID</span></div><div class="line">,   CODE    <span class="comment">-- コード</span></div><div class="line">,   <span class="keyword">NAME</span>    <span class="comment">-- 名称</span></div><div class="line">,   VALUE1  <span class="comment">-- 値１</span></div><div class="line">,   VALUE2  <span class="comment">-- 値２</span></div><div class="line">,   VALUE3  <span class="comment">-- 値３</span></div><div class="line">,   VALUE4  <span class="comment">-- 値４</span></div><div class="line"><span class="comment">--, VALUE5  -- 値５ ←追加が容易</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    HOGE</div></pre></td></tr></table></figure>
<p>後ろカンマの場合、<code>VALUE4</code>の次にカラムを追加しようとした際に<code>VALUE4</code>の行にカンマを追加しなければいけませんし、<code>VALUE4</code>自体の順序を変える場合もカンマを編集しなければいけません。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">ID</span>      , <span class="comment">-- ID</span></div><div class="line">    CODE    , <span class="comment">-- コード</span></div><div class="line">    <span class="keyword">NAME</span>    , <span class="comment">-- 名称</span></div><div class="line">    VALUE1  , <span class="comment">-- 値１</span></div><div class="line">    VALUE2  , <span class="comment">-- 値２</span></div><div class="line">    VALUE3  , <span class="comment">-- 値３</span></div><div class="line">    VALUE4    <span class="comment">-- 値４</span></div><div class="line"><span class="comment">--  VALUE5    -- 値５ ←追加したらVALUE4の後ろにカンマを書かないといけない</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    HOGE</div></pre></td></tr></table></figure>
<p>以上を考慮し、カンマの配置は”前”としています。</p>
<h3 id="カンマ位置はフォーマッターで編集するなら気にしなくていいのでは？"><a href="#カンマ位置はフォーマッターで編集するなら気にしなくていいのでは？" class="headerlink" title="カンマ位置はフォーマッターで編集するなら気にしなくていいのでは？"></a>カンマ位置はフォーマッターで編集するなら気にしなくていいのでは？</h3><p>その通りです。通常は。<br>しかし今回の規約ではカンマの前か後ろに”行コメント”が立ちはだかっているのです。</p>
<p>コメントがある場合、後カンマで、前カンマのフォーマットをしてしまうと、下記のようになってしまいます。</p>
<ul>
<li><p>フォーマット前</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">ID</span>      , <span class="comment">-- ID</span></div><div class="line">    CODE      <span class="comment">-- コード</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    HOGE</div></pre></td></tr></table></figure>
</li>
<li><p>フォーマット後（例）</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">  <span class="keyword">ID</span></div><div class="line">  ,            <span class="comment">-- ID</span></div><div class="line">  CODE         <span class="comment">-- コード</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">  HOGE</div></pre></td></tr></table></figure>
</li>
</ul>
<p>とても残念な結果になりますね。<br>というのはフリです、ごめんなさい。今回作成した<strong>uroboroSQL formatter</strong>はカンマ・コメント入れ替えにも対応しています。<br>気にする必要はありません！</p>
<ul>
<li><p>フォーマット後（<strong>uroboroSQL formatter</strong>）</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">ID</span>      <span class="comment">-- ID</span></div><div class="line">,   CODE    <span class="comment">-- コード</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    HOGE</div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="今後"><a href="#今後" class="headerlink" title="今後"></a>今後</h1><h2 id="uroboroSQL-formatter"><a href="#uroboroSQL-formatter" class="headerlink" title="uroboroSQL formatter"></a><a href="https://github.com/future-architect/uroboroSQL-formatter" target="_blank" rel="external"><strong>uroboroSQL formatter</strong></a></h2><p>現在、uroboroSQL formatterは前カンマやTab幅4によるインデントが固定であり、メインの機能としてもまだまだ足りませんし、提供方法もSublimeText3のプラグインのみとなってしまいました。<br>オプション対応、Eclipseプラグインや、ブラウザでのフォーマット機能など追加したい機能や、改善したいことはたくさんあります。<br>今後もご期待ください。</p>
<h2 id="SQLコーディング規約"><a href="#SQLコーディング規約" class="headerlink" title="SQLコーディング規約"></a><a href="https://future-architect.github.io/coding-standards/documents/forSQL/SQLコーディング規約（Oracle）.html">SQLコーディング規約</a></h2><p>今回、SQLのコーディング規約の公開もOracle版だけとなってしまいましたが、PostgreSQL・MySQL対応版も作成中です。<br>これらも近いうちに公開したいと考えています。</p>
<p>また今回のコーディング規約も、どんどん改善していきたいと思っていますので、<br>是非ともPullRequestいただければと思います。お待ちしております。（Markdown書くだけです！）</p>
<hr>
<h1 id="追記"><a href="#追記" class="headerlink" title="追記"></a>追記</h1><h2 id="2017-3-6追記"><a href="#2017-3-6追記" class="headerlink" title="2017/3/6追記"></a>2017/3/6追記</h2><p>本記事の公開に<a href="http://a5m2.mmatsubara.com/" target="_blank" rel="external">A5:SQL Mk-2</a>の作者の方に反応いただきまして、<a href="http://a5m2.mmatsubara.com/beta/" target="_blank" rel="external">beta版</a>のSQL整形機能にて以下の対応が行われました。</p>
<ul>
<li>よくある 2Way-SQLツールのコメント対応</li>
<li>カンマやAND, OR の位置を式の前・後ろに移動するとき、行コメントとの位置関係を修正して整形</li>
</ul>
<p>2WaySQLでのフォーマット崩れの問題、および「カンマ」や「AND・OR」の前後位置と行コメントの整合性の問題は<br><a href="http://a5m2.mmatsubara.com/" target="_blank" rel="external">A5:SQL Mk-2</a>のSQL整形機能(2017/3/6現在beta版)でも解決することができます！<br>（しかもこちらはカンマ・AND・ORの前後配置の設定などいろいろできます。我々も頑張らないといけませんね）</p>
<p>本記事では<a href="http://a5m2.mmatsubara.com/" target="_blank" rel="external">A5:SQL Mk-2</a>の機能についてSQL整形についてのみしか触れていませんが、<br>DB接続機能など様々な機能が豊富にそろっていますので、もし利用されたことのない方は是非一度お試しください！</p>
<hr>
<p>参考<br><a href="http://hidekatsu-izuno.hatenablog.com/entry/2015/12/07/233618" target="_blank" rel="external">http://hidekatsu-izuno.hatenablog.com/entry/2015/12/07/233618</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h1&gt;&lt;p&gt;はじめまして、太田です。&lt;br&gt;今回、弊社謹製のSQLフォーマッター&lt;a href=&quot;https://github.com/
    
    </summary>
    
      <category term="DB" scheme="https://future-architect.github.io/categories/DB/"/>
    
    
      <category term="Styleguide" scheme="https://future-architect.github.io/tags/Styleguide/"/>
    
      <category term="SQL" scheme="https://future-architect.github.io/tags/SQL/"/>
    
      <category term="uroboroSQL" scheme="https://future-architect.github.io/tags/uroboroSQL/"/>
    
  </entry>
  
  <entry>
    <title>第六回社内LT大会～コンサルタントはハイキックがお好き</title>
    <link href="https://future-architect.github.io/articles/20170216/"/>
    <id>https://future-architect.github.io/articles/20170216/</id>
    <published>2017-02-16T01:30:00.000Z</published>
    <updated>2017-05-09T01:57:18.406Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/20170216/photo_20170216_00.jpg"></p>
<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a><strong>はじめに</strong></h1><p>みなさま、こんにちは。第六回LT大会の幹事を務めました入社一年目の谷村です。<br>2016年11月18日（金）に開催された社内LT大会6についてご報告です。</p>
<blockquote>
<p>LTとは <strong>Lightning Talks</strong> の略で、持ち時間が5分程度のプレゼンテーションのことです。<br>短い時間で印象に残るということからLightning（稲妻、電光石火）という言葉が使われるようになったそうです。</p>
</blockquote>
<h1 id="開催の概要"><a href="#開催の概要" class="headerlink" title="開催の概要"></a><strong>開催の概要</strong></h1><p>LT大会は3つの目的で実施されています！</p>
<ul>
<li>PR/ブランディング</li>
<li>採用（新卒・キャリアの採用チームとも協力）</li>
<li>人材育成（技術力底上げ・プレゼンスキルの向上・社外カンファレンス登壇へのステップアップ）</li>
</ul>
<p>ありがたいことに、会社から予算を頂き公式的な社内行事として活動をさせていただいています。<br>会長からは「大いに盛り上げて下さい」と激励を頂いています！</p>
<p>今回は、社員の他に学生さんが <strong>15</strong>名、社外の社会人登壇者の方が <strong>1</strong>名 参加してくださいました。</p>
<p>なお、今回から発表時間厳守！ということで銅鑼をご用意しました。<br>発表時間をオーバーすると、ベルの代わりに銅鑼を響かせます。</p>
<p><img src="/images/20170216/photo_20170216_01.jpeg" class="img-small-size"></p>
<h1 id="発表の様子"><a href="#発表の様子" class="headerlink" title="発表の様子"></a><strong>発表の様子</strong></h1><p>前回の開催から期間が空いたからか、過去最大規模のLT大会となりました！<br>なんと、100名入る会場で立ち見が出ていました！</p>
<p><img src="/images/20170216/photo_20170216_02.jpeg"></p>
<p>初っ端から会場を沸かせたのは、二年目の若手、六反さん。<br>当社のメールがOutlookからGmailに移行した記念に、自己流のプラクティスを披露してくれました。</p>
<p><img src="/images/20170216/photo_20170216_03.jpeg"></p>
<p>ゲストスピーカーとして、株式会社エクスライズ チーフエンジニアの服部さんにご登壇いただきました。<br>服部さんは、iOSでブロックチェーンを扱うゴリゴリな技術ネタを発表。<br>真剣に聴講する人で会場は緊張感に包まれました。</p>
<p><img src="/images/20170216/photo_20170216_04.jpeg"></p>
<p>発表の合間にはMCの下山さんが会場の笑いを誘いました。</p>
<p><img src="/images/20170216/photo_20170216_05.jpeg"></p>
<p>中でも最大の盛り上がりを見せたのが、佐藤(藍)さんの「私のハイキックで刈られたい奴ちょっとこい(仮)」。<br>比喩でも何でも無く、文字通りの肉体言語的な意味です。<br>ロジカルにハイキックの重要性を説き、会場は爆笑の渦に包まれました。</p>
<p><img src="/images/20170216/photo_20170216_06.jpeg"></p>
<p>他にも、会場を煽ってみたり、<br><img src="/images/20170216/photo_20170216_07.jpeg"></p>
<p>5分のLTで50分話そうとしてみたり、</p>
<p><img src="/images/20170216/photo_20170216_08.jpeg"></p>
<p>多種多様な発表で、会場の熱気はおさまるところをしりません！</p>
<p>残念ながら、攻めすぎて公開不可な資料が多いですが、<br>公開していただいた資料は以下の通りです。</p>
<h1 id="資料"><a href="#資料" class="headerlink" title="資料"></a><strong>資料</strong></h1><table>
<thead>
<tr>
<th>時間</th>
<th>テーマ</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>Webアプリを使い倒そう！　Gmailオレオレベストプラクティス　～ハンズオンもあるよ～（六反さん）</td>
</tr>
<tr>
<td>2</td>
<td>ＡＩ(強化学習)でロボットに学習させてみた（秋元さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/nJ5Yt5bOhricmn" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/akmtt/ai-71681912" title="AI(強化学習)でロボットに学習させてみた" target="_blank">AI(強化学習)でロボットに学習させてみた</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/akmtt">akmtt</a></strong> </div></td>
</tr>
<tr>
<td>3</td>
<td>管理サーバなどもはや不要、今の時代はサーバレスでしょ!!（角田さん）</td>
</tr>
<tr>
<td>4</td>
<td>SparkCL（山本(力)さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/j4F86eQvFwx3ki" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/rkyymmt/spark-cl" title="Spark CL" target="_blank">Spark CL</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/rkyymmt">力世 山本</a></strong> </div></td>
</tr>
<tr>
<td>5</td>
<td>私のハイキックで刈られたい奴ちょっとこい(仮)（佐藤(藍)さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/xKlbznaKfjjLYI" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/aikosato2/20161119-lt-71707068" title="20161119 lt" target="_blank">20161119 lt</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/aikosato2">aiko sato</a></strong> </div></td>
</tr>
<tr>
<td>6</td>
<td>iOSアプリからブロックチェーンに触る（服部さん：スペシャルゲスト） <br><script async class="speakerdeck-embed" data-id="bcd9499c70eb4cb287e0c34681dc1286" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script></td>
</tr>
<tr>
<td>7</td>
<td>Explore dark side of BIgData（須田さん）</td>
</tr>
<tr>
<td>8</td>
<td>未来太郎と未来花子（李(銘)さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/qclTJ1voN1ATAc" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/mingli136/ss-71450069" title="未来太郎と未来花子" target="_blank">未来太郎と未来花子</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/mingli136">ming li</a></strong> </div></td>
</tr>
<tr>
<td>9</td>
<td>5分でわかるカンボジア（百津さん）</td>
</tr>
</tbody>
</table>
<h1 id="表彰-amp-贈呈"><a href="#表彰-amp-贈呈" class="headerlink" title="表彰&amp;贈呈"></a><strong>表彰&amp;贈呈</strong></h1><p>楽しい時間はあっという間。結果発表のお時間です。<br>今回は、1, 2位, ブービーに豪華景品、さらに登壇者全員に参加賞という大盤振る舞いです。<br>景品のテーマは「<strong>空飛ぶもの</strong>」です。</p>
<h2 id="第一位（佐藤-藍-さん）私のハイキックで刈られたい奴ちょっとこい-仮"><a href="#第一位（佐藤-藍-さん）私のハイキックで刈られたい奴ちょっとこい-仮" class="headerlink" title="第一位（佐藤(藍)さん）私のハイキックで刈られたい奴ちょっとこい(仮)"></a><strong>第一位（佐藤(藍)さん）私のハイキックで刈られたい奴ちょっとこい(仮)</strong></h2><p><img src="/images/20170216/photo_20170216_09.jpeg"></p>
<p><strong>全日本選手権優勝</strong>の経験を踏まえて話される、圧倒的な説得力に、会場は爆笑の渦に蹴落とされました。<br>ハイキックから始まり、パンチ、頭突き、膝蹴りと、実践的な人の倒し方を学ばせていただきました。<br>今度から姐御と呼ばせていただきます。</p>
<p>景品は、Parrot社のカメラ付きDroneです。<br>Droneと武術のつながりが思いつかないのですが、何か上手いこと使ってもらえればと思います。</p>
<h2 id="第二位（百津さん）5分でわかるカンボジア"><a href="#第二位（百津さん）5分でわかるカンボジア" class="headerlink" title="第二位（百津さん）5分でわかるカンボジア"></a><strong>第二位（百津さん）5分でわかるカンボジア</strong></h2><p><img src="/images/20170216/photo_20170216_10.jpeg"></p>
<p>カンボジアで暮らした経験を面白おかしく発表していただきました。<br>カンボジアの知識ゼロの状態でしたが、発表後に早速カンボジア旅行ガイドを購入してしまいました。笑</p>
<p>景品は、ミニDroneです。<br>百津さんのご厚意で、LT大会の後にみんなで会場に飛ばして遊びました。<br>Drone超楽しい！！(個人の感想です)</p>
<h2 id="第三位（李さん）未来太郎と未来花子"><a href="#第三位（李さん）未来太郎と未来花子" class="headerlink" title="第三位（李さん）未来太郎と未来花子"></a><strong>第三位（李さん）未来太郎と未来花子</strong></h2><p>なんと、研修中の新人が入賞です。<br>研修で使われるサンプルの顔画像が不満で、新人全員の平均顔を作成してみたそうです。<br>残念ながら、景品はありません。</p>
<h2 id="ブービー（角田さん）管理サーバなどもはや不要、今の時代はサーバレスでしょ"><a href="#ブービー（角田さん）管理サーバなどもはや不要、今の時代はサーバレスでしょ" class="headerlink" title="ブービー（角田さん）管理サーバなどもはや不要、今の時代はサーバレスでしょ!!"></a><strong>ブービー（角田さん）管理サーバなどもはや不要、今の時代はサーバレスでしょ!!</strong></h2><p><img src="/images/20170216/photo_20170216_11.jpeg"></p>
<p>Lambdaで全部やってしまうという、今時のイケてる仕様の発表でした。<br>内容が難しすぎたことが、票が伸び悩んだ原因かもしれません。</p>
<p>景品はミニミニDroneです。</p>
<h2 id="参加賞（登壇者の皆様）"><a href="#参加賞（登壇者の皆様）" class="headerlink" title="参加賞（登壇者の皆様）"></a><strong>参加賞（登壇者の皆様）</strong></h2><p><img src="/images/20170216/photo_20170216_12.jpeg"></p>
<p>LT大会を盛り上げていただいた登壇者の皆様に、<br>参加賞として竹とんぼを贈呈しました。</p>
<p>学生の皆様にもお土産としてお配りしたところ、<br>とても喜んでいただけたようです。</p>
<h2 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a><strong>最後に</strong></h2><p><img src="/images/20170216/photo_20170216_13.jpeg"></p>
<p>集合写真です。皆様お疲れ様でした！</p>
<h1 id="振り返り"><a href="#振り返り" class="headerlink" title="振り返り"></a><strong>振り返り</strong></h1><p>今回は過去最大規模のLT大会となりました。<br>だからこそ、きっちり振り返りをして次に繋げる必要があります。</p>
<ul>
<li><strong>Keep</strong><ul>
<li>発表内容のバランスがちょうどよかった(技術/非技術, 半々くらい)</li>
<li>銅鑼を導入し、発表時間を厳守するようにした</li>
<li>発表順は技術/非技術を交互にし、休憩前後に盛り上がりそうな人を配置した</li>
<li>LT大会後に学生と交流・会社説明をする場を設けることができた</li>
</ul>
</li>
<li><strong>Problem</strong><ul>
<li>休憩前等、発表時間の銅鑼が緩いとの意見があった</li>
</ul>
</li>
<li><strong>Try</strong><ul>
<li>本社ビル以外の拠点でプチLT大会を開催</li>
<li>料理を多めに用意したい</li>
<li>学生との二次会を予め設定しておく</li>
<li>テーマに関するお土産を用意する</li>
</ul>
</li>
</ul>
<h1 id="お知らせ"><a href="#お知らせ" class="headerlink" title="お知らせ"></a><strong>お知らせ</strong></h1><p>第七回LT大会も開催が決定しています。<br>さらに熱狂的なイベントにすべく、タスクフォースが取り組まれています。<br>乞うご期待！</p>
<ul>
<li>開催日時: 2017年2月24日(金)</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/20170216/photo_20170216_00.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;&lt;strong&gt;はじめに&lt;/st
    
    </summary>
    
      <category term="Culture" scheme="https://future-architect.github.io/categories/Culture/"/>
    
    
      <category term="LT" scheme="https://future-architect.github.io/tags/LT/"/>
    
  </entry>
  
  <entry>
    <title>会社に届いたHoloLensを使ってみた</title>
    <link href="https://future-architect.github.io/articles/20170210/"/>
    <id>https://future-architect.github.io/articles/20170210/</id>
    <published>2017-02-10T04:00:00.000Z</published>
    <updated>2017-05-09T01:57:18.410Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HoloLensとは…？"><a href="#HoloLensとは…？" class="headerlink" title="HoloLensとは…？"></a>HoloLensとは…？</h1><p><a href="https://www.microsoft.com/microsoft-hololens/ja-jp" target="_blank" rel="external">HoloLens</a>とはざっくり言いますと、</p>
<p><img src="/images/20170210/photo_20170210_01.png" class="img-small-size"></p>
<p>このイラストのようなことができる機械になります。</p>
<p>もう少し詳しく説明しますと…</p>
<ul>
<li>現実の空間にCGなどで作られたグラフィックを投影する事ができる、<strong>MR(複合現実: 拡張現実「AR」と仮想現実「VR」を融合させたような概念)</strong>を実現するためのマイクロソフト製のデバイスです</li>
<li>見た目はOculusのようなゴーグル型ですが、VRとは異なり現実世界にグラフィックを重ね合わせる必要があることから <strong>透過型のディスプレイ</strong> になっており、また <strong>各種センサやCPUやGPUが組み込まれたWindows 10が動作するPC</strong> でもあります</li>
<li>開発者向けの<a href="https://www.microsoft.com/microsoft-hololens/ja-jp/developers" target="_blank" rel="external">ドキュメントやSDK</a>が公開されているため、自由にHoloLensを利用したMRアプリケーションを作成することができます</li>
<li>ゲームだけではなく、上記イラストのような遠隔医療といった幅広い応用先が期待されることから注目を集めています</li>
</ul>
<h1 id="届きました"><a href="#届きました" class="headerlink" title="届きました"></a>届きました</h1><p>2017年1月18日から、日本国内でも販売が開始されたため、弊社にも早速２台届きました。</p>
<p><img src="/images/20170210/photo_20170210_02.jpeg"></p>
<p>薄くてちっちゃいマニュアルは、日英両言語対応、本体には技適マークも付いており、日本に対応した製品だと実感することができました。</p>
<p>しかし、中身は日本語向けに特別な対応がされたわけでもなく音声認識も基本英語なので、正しい英語の発音が出来ないとなかなかセットアップが進まないことになります。<br>また、Windows StoreにおいてあるHoloLens向けのアプリも今の所は英語ベースのものが多いので、リスニングも出来ないとゲームなども十分楽しむことはできません。</p>
<p>Microsoftのサイトには、</p>
<blockquote>
<p>「HoloLens Developer Edition および Commercial Suite は、消費者契約法第 2 条において消費者にあたらない開発者向けのみの販売となっています。商品とその関連サービスおよびサポートは英語のみでのご提供となっています」</p>
</blockquote>
<p>とありますので、まあ、仕方がないとは思いますが。</p>
<p><a href="http://www.irasutoya.com/2017/02/blog-post_342.html" target="_blank" rel="external">文頭のイラスト</a>の感じを真似するには、HoloLensで<a href="https://www.microsoft.com/en-us/store/p/holoheart/9nblggh4v0pz" target="_blank" rel="external">HoloHeart</a>をすると良いと思います。<br>このHoloHeartは3Dの心臓を拡大縮小回転させて眺めたりするものなのですが、「beat」と発音すると心臓が動き出して少々気持ちが悪いアプリです。</p>
<p><img src="/images/20170210/photo_20170210_03.jpeg"></p>
<h1 id="丸一日付けっぱなしにしてみた"><a href="#丸一日付けっぱなしにしてみた" class="headerlink" title="丸一日付けっぱなしにしてみた"></a>丸一日付けっぱなしにしてみた</h1><p>何事も体験しなければ始まらないだろうということで、業務をしながらですがオフィスにて丸一日付けっぱなしにしてみました。</p>
<h2 id="気がついたこと"><a href="#気がついたこと" class="headerlink" title="気がついたこと"></a>気がついたこと</h2><ul>
<li>VRと異なり全く酔わない<ul>
<li>現実の風景が見えるというMRの特性だからなのか、酔いは皆無です。オフィスにはVRよりもMRが相性がよいかもしれません</li>
</ul>
</li>
<li>HoloLensの専用収納ケースにしまい込むのが面倒<ul>
<li>専用収納ケースにしまうにはベルトを絞った状態にし直す必要があり面倒です。100均で売ってる発泡スチロールのマネキンの頭部みたいなものに置いておきたいと思っています</li>
</ul>
</li>
<li>寝ながらの利用が難しい<ul>
<li>寝たまま複数のウィンドウを開いて操作できると楽そうで良いなと思っていたのですが、後頭部に出っ張った部分があるので、それが枕などにぶつかり、頭を自由に動かせません</li>
<li>頭を動かせないということは、HoloLensではマウスを動かせないことと同義なので辛いです</li>
</ul>
</li>
<li>Windows10以外での開発が難しそう<ul>
<li>UnityはWindows版以外が存在しますが、HoloLens用の拡張部分はWindows版以外だと見つけられませんでした</li>
<li>私はMBP上のVirtualBoxに入れていたWindows10に、Unity最新版を入れてビルドを行いました<ul>
<li>Visual Studioでビルドせずに、UnityからHoloLensでプレビューする方法は、何故か今回実行することができませんでした（connectボタンが押せず）</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="よく聞かれたこと"><a href="#よく聞かれたこと" class="headerlink" title="よく聞かれたこと"></a>よく聞かれたこと</h2><ul>
<li>ずっと装着していたけど辛くなかった？<ul>
<li>頭の上を通る補助バンドを着けた場合は、HoloLensを装着しぱなっしでも耐えられますが、補助バンドがない場合は厳しいです。ただし、周りの人が違和感に耐えられなくなるので、装着者の周囲の慣れが必要です</li>
</ul>
</li>
<li>肝心の着け心地は？<ul>
<li>補助バンドの有無で大きく変わります。補助バンドありだと装着感は良いですが、無い場合は重さが辛いです</li>
</ul>
</li>
<li>ポインタ操作（視線の先に点として表示されるマウスカーソルのようなもの）って慣れるの？<ul>
<li>頭を動かす必要ある点はやや面倒ですが、数時間で慣れてきました。本当は視線のみで動くと嬉しかったのですが、現状のHoloLensの限られた視野を考えるとちょうどよいトレードオフかと思います</li>
</ul>
</li>
</ul>
<h1 id="次回予告"><a href="#次回予告" class="headerlink" title="次回予告"></a>次回予告</h1><ul>
<li>2つのHoloLensで同じ空間を共有するアプリケーションの仕組みと、その作り方を共有します</li>
<li>応用例のアイデア出しや実装を試していきたいことはもちろんとして、社内外にHoloLens(MR)体験をもっと布教していきたいと考えています</li>
<li>AR/VR/MRの研究開発は担当者を置いて重点的に進めていく予定です。お楽しみに！</li>
</ul>
<p><img src="/images/20170210/photo_20170210_04.jpeg"></p>
<p>※2つのHoloLensを使って同じ空間の同じグラフィックを共有している図です</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HoloLensとは…？&quot;&gt;&lt;a href=&quot;#HoloLensとは…？&quot; class=&quot;headerlink&quot; title=&quot;HoloLensとは…？&quot;&gt;&lt;/a&gt;HoloLensとは…？&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.microsoft
    
    </summary>
    
      <category term="VR" scheme="https://future-architect.github.io/categories/VR/"/>
    
    
      <category term="HoloLens" scheme="https://future-architect.github.io/tags/HoloLens/"/>
    
  </entry>
  
  <entry>
    <title>3Dプリンタを使ってサービス開発やってみた</title>
    <link href="https://future-architect.github.io/articles/20170127/"/>
    <id>https://future-architect.github.io/articles/20170127/</id>
    <published>2017-01-27T03:25:15.000Z</published>
    <updated>2017-05-09T01:57:18.397Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>Futureグループでは、「２Way戦略」と呼ばれるスローガンの元、今までのB2BだけでなくB2Cなど別の領域へ自らがサービスを提供し、ビジネスを広げていく事を目指した活動が盛んに行われています。</p>
<p>まだまだ、ローンチされたサービスは少ないのですが、その中の一つであるBluetoothのビーコンを使ったIoT系就活サービスの「縁採Quest」（<a href="http://www.entryquest.com/" target="_blank" rel="external">エントリクエスト公式サイト</a>, <a href="https://play.google.com/store/apps/details?id=jp.co.future.entryquest&amp;hl=ja" target="_blank" rel="external">Google Play</a>, <a href="https://itunes.apple.com/jp/app/yuan-caiquest/id1191383379?mt=8" target="_blank" rel="external">App Store</a> ）で、3Dプリンタを使ったモノづくりをしたので、その時の3Dプリンタに関する話をしたいと思います。</p>
<h1 id="「縁採Quest（エントリークエスト）」って？！"><a href="#「縁採Quest（エントリークエスト）」って？！" class="headerlink" title="「縁採Quest（エントリークエスト）」って？！"></a>「縁採Quest（エントリークエスト）」って？！</h1><p>縁採Questは、地方にいながらロールモデルとなる社会人を見つけて深く繋がっていく、ということを目指したサービスになります。<br>弊社は採用に非常に力を入れている会社なのですが「今の就活はおかしいのではないか？」という問題意識を複数の社員が持ったことがサービス誕生の背景です。</p>
<p>この「WEBページでクリックするだけの就活ってどうなのよ？！」という所に一石を投じるために、あえてローカルな場所に縛った就活を展開する事によって、今まで知らなかった働き方や、人との出会いに偶然を生み出して学生さんと会社を結ぼうとしています。</p>
<p>この中で「<strong>ローカルな場所に縛る</strong>」ために、Bluetoothのビーコンを飲食店、インキュベーション施設などに配置して、そこでしか得られない情報や結びを提供していこうとしています。</p>
<p>このBluetoothのビーコンの事を「縁採タグ」（エントリータグ）と呼んでいます。この縁採タグのケース製造に3Dプリンタを活用しました。</p>
<h1 id="3Dプリンタを使った縁採タグの作り方"><a href="#3Dプリンタを使った縁採タグの作り方" class="headerlink" title="3Dプリンタを使った縁採タグの作り方"></a>3Dプリンタを使った縁採タグの作り方</h1><p>今回は3Dプリンタに焦点を当てるので、中の電気回路の部分は省きますがそこにも様々なドラマがありました。</p>
<ul>
<li>国内の認証を通っているBluetoothの部品を集めるところ</li>
<li>基板を中国に発注したけれども、パターンが小さすぎて対応業者が少ないという話</li>
<li>ホットプレートリフローやるのは小さい部品は厳しいという課題を乗り切った話</li>
<li>クリーム半田はどこで調達しようか悩んだこと</li>
<li>etc.</li>
</ul>
<p>それぞれについて詳しくお話したいですが、それはまた別の機会に。</p>
<p>ということで、縁採タグの完成品はこれです。</p>
<p><img src="/images/20170127/photo_20170127_01.jpeg"><br>（この中に私たちの青春がギュウギュウに詰まってます。）</p>
<p>小さめのマウスぐらいのサイズで、白いところはポリカーボネートという丈夫な素材で作りました。黒いところは、PLAというトウモロコシなどから作られる環境に優しい材料です。2つの材料を同時に出力できる3Dプリンタを使って作っています。</p>
<p><img src="/images/20170127/photo_20170127_02.jpeg"><br>写真は材料が出てくるノズル周辺を写したもので、右側の茶色いノズルがこびりついた方がポリカーボネートを出力していたノズルで、左側の綺麗なノズルが文字の黒いところを出力していたノズルです。</p>
<p>けなげな3Dプリンタは0，4mmのノズルから材料を熱で溶かしながら0.2mmの高さで積み重ねていきました。<br>最終的な高さは20mm程度あるので、100層分積み重ねてできあがっています。</p>
<p>だいたい1タグ4時間ぐらいかけて印刷していました。全部でこの写真のモデルは30個ぐらい作成しています。（今はまだ改良版の制作に取りかかっているので、プリンタは大忙しです。）</p>
<h1 id="3Dプリントの難しかったところ"><a href="#3Dプリントの難しかったところ" class="headerlink" title="3Dプリントの難しかったところ"></a>3Dプリントの難しかったところ</h1><p>いろいろあったのですが、特に印象に残っている、こんなことに苦労したというのを4つ紹介します。</p>
<h2 id="1-ポリカーボネート"><a href="#1-ポリカーボネート" class="headerlink" title="(1) ポリカーボネート"></a>(1) ポリカーボネート</h2><p>本体のケースなので、ある程度耐久性を考慮してポリカーボネートという材料を今回選択しました。使ったのはポリメーカのPC-MAXというフィラメントです。たまたま別のモノづくりで買っていた材料があったのですが、Amazonで売り切れているときは他でも売り切れていることが多くて、海外から直接購入することもありました。今は国際物流がしっかりしているので、DHLとかフェデックスとかへ、ちゃんと送料支払えば2日ぐらいで手に入るので便利な世の中になってます。ポリメーカは中国から配送されるので、距離的にも近いので国際配送でも結構いい感じです。</p>
<p>材料は手に入ったとして、次に問題になるのは3Dプリンタです。<br>ポリカーボネートは、通常の3Dプリンタよりも高温にできるいわゆる「エンプラ」対応の3Dプリンタでないと印刷できません。</p>
<p><strong>エンプラ？！</strong></p>
<p>エンジニアリングプラスチックの略称です。100度以上の温度に耐えるとか、丈夫とかいろいろ優れているよっていうプラスチックを総称する言葉です。3Dプリンタでエンプラ対応というのは300度の温度で印刷が行える機種が必要です。今回は、Genkei社のLeptonを利用しました。高温対応バレルを装備させると、この3Dプリンタはエンプラ対応になります。おまけに、2射出機構も付けているので、文字と本体で色を変えて印刷することにもチャレンジしています。<br><img src="/images/20170127/photo_20170127_03.jpeg" class="img-small-size"></p>
<h2 id="2-文字を綺麗に出すために"><a href="#2-文字を綺麗に出すために" class="headerlink" title="(2) 文字を綺麗に出すために"></a>(2) 文字を綺麗に出すために</h2><p>文字の部分を綺麗に出すために、２点ほど工夫が入ってます。</p>
<h3 id="白の台座を用意"><a href="#白の台座を用意" class="headerlink" title="白の台座を用意"></a>白の台座を用意</h3><p>今回のパーツでは、文字の点が飛び飛びで存在するので、その点と点の間を移動するときに黒のノズルが白い本体をこすってしまい、黒い線が出てくることが分かりました。<br>黒い文字の印刷をする最中の移動時に1回1回Zホップさせてノズルを印刷済みの本体から引き離して印刷してみたのですが、印刷時間が増えるとともに文字の印刷品質が落ちてしまいました。（ひどい糸引きが発生する。文字の壁がでこぼこになるなど）<br>これは、ノズルを真横に移動させて拭き取る動作が行われないために、うまく材料が切れなくて発生していたようで、長いこと問題が解決できませんでした。<br>しかし、Zホップさせないと、白いケースの上面に黒い線が残ってしまい、それはそれで問題が残ってしまいます。</p>
<p>この問題は、白の材料で台座の出力までさせることでどうにか解決させました。<br><img src="/images/20170127/photo_20170127_04.jpeg" class="img-small-size"></p>
<p>この画像にあるように、上の明るい黄色の部分を黒い材料で出すのですが、その下に、白い材料で台座を印刷して広い平面と高さを変えるようにしました。これにより、黒のノズルが移動するときに白の平面をこすることがなくなったので、綺麗に印刷できるようになりました。</p>
<p>あちらを立てればこちらが立たずで、最後まで苦労したところです。</p>
<h2 id="3-黒の材料の選別"><a href="#3-黒の材料の選別" class="headerlink" title="(3) 黒の材料の選別"></a>(3) 黒の材料の選別</h2><p>文字を出力する、黒い材料ですが5種類ぐらい購入して印刷を試してみました。やはりメーカにより材料の特性が異なるので、一番良い材料に巡り会うまで大変でした。<br>柔らかくて糸引きが多い材料とか、表面は綺麗なんだけど切れが悪いとか、小さい文字を出すときは材料の特性が最終的な品質に与える影響が大きくなるので、選定は慎重さが必要です。<br><img src="/images/20170127/photo_20170127_05.jpeg"></p>
<h2 id="4-ヒートベッドが離れていく"><a href="#4-ヒートベッドが離れていく" class="headerlink" title="(4) ヒートベッドが離れていく"></a>(4) ヒートベッドが離れていく</h2><p>さあ、いざうまく一つ出せる用になったのですが、その後量産をするためにまとめて出そうとしたら、印刷途中でモータが脱調したりなにがしかの不具合が出て、途中でうまく印刷できなくなってしまいました。</p>
<p>成功するときもあって、何が起きて失敗しているのか問題を切り分けていったら、印刷時間がある閾値を超えると失敗する事が見えてきました。</p>
<p>なので、まとめて3個ケースを出しているときとかは簡単に失敗してしまい、1個ずつ出すという効率の悪い方法でしのいでいました。<br>その後、1個だしでも、連続して印刷をしていると失敗することが分かり、これはヒートベッドの温度が問題ではないかと当たりがついてきました。</p>
<p>というのも、今回ポリカーボネートを出すために、ヒートベッドを120度まで暖めていました。これは、BuildTakというシートを使わないでポリカーボネートを印刷するために編み出したコツで、120度＋ブリムでBuildTak無しでもどうにか印刷できています。一部浮き上がっているところもあるのですが、今回は許容範囲内なのでこれでガンガン印刷しています。</p>
<p>そのため、120度という少し高温にヒートベッドを加熱していてその加熱により金属膨張が下方向に働いてヒートベッドとノズルの隙間が空いてしまい、うまく印刷できない現象が発生していました。<br>これはFusion360という3D-CADソフトで熱解析も行って裏をとっています。<br><img src="/images/20170127/photo_20170127_06.jpeg"></p>
<p><img src="/images/20170127/photo_20170127_07.jpeg"></p>
<p>そこで、ヒートベッドの裏側にグラスウールの断熱材を貼り付けてみました。<br>貼り付けると嘘のように連続印刷が問題なく行えるようになりました。熱膨張、皆さんも甘く見ないように気をつけてください。</p>
<h1 id="結局、3Dプリンタを使って良かったと思う"><a href="#結局、3Dプリンタを使って良かったと思う" class="headerlink" title="結局、3Dプリンタを使って良かったと思う"></a>結局、3Dプリンタを使って良かったと思う</h1><p>なんだかんだ、問題もたくさん発生しましたがポリカーボネートを出すことに関してかなり自信がついてきました。材料自体は特性が良いので、ノズルで詰まると言うことも全く発生していませんし、印刷後の加工に関してもPLAよりも加工しやすいと感じています。<br><img src="/images/20170127/photo_20170127_08.jpeg"></p>
<h2 id="コスト＆修正サイクル"><a href="#コスト＆修正サイクル" class="headerlink" title="コスト＆修正サイクル"></a>コスト＆修正サイクル</h2><p>縁採タグは見た目こそ小さいですが、これがあるのと無いのではこの就活サービスを宣伝するときのインパクトが違うと言うことで、かなり良い営業ツールになっています。</p>
<p>はじめから金型作って、2つの樹脂を流し込んでとかやっていると、それだけで軽く100万円ぐらいかかります。<br>今回使った3Dプリンタは20万ほどで購入できるので、5分の１です。</p>
<p>さらに金型だと、デザイン変更をしたり内部の形を変えるたびに、この費用がかかってきます。また金型を作って製品ができあがるまでのリードタイムも2週間ぐらいかかったりするので、かなりヘビーです。</p>
<p>設計を変更したら、すぐに印刷、お昼から帰ってくるとできあがっているなんてことも、普通に出来るので高速に改良を加えられ本当にトライアンドエラーで進めていくスタートアップ向きです。</p>
<h1 id="そして、モノづくりは簡単になった"><a href="#そして、モノづくりは簡単になった" class="headerlink" title="そして、モノづくりは簡単になった"></a>そして、モノづくりは簡単になった</h1><p>金型ありきの製品開発でトライアンドエラーなんて時間もコストもかかったので今までは無理だったのがよくわかります。だからモノづくりはウォーターフォール型の開発が主流なんですよね。<br>しかし、そこに今回は3Dプリンタを使ったことで、モノづくりをアジャイル開発的に手軽・高速に行えるようになりました。<br>最終製品に関するこだわりとか、表面の綺麗さとか考えていくと、今までのモノづくりの方が良いという所も多いと思いますが、熱積層タイプの安価な3Dプリンタで最終製品を作るという事もアリだなと今回のサービス開発に関わってモノづくりをする中で感じました。</p>
<p>皆さんも、簡単になったモノづくりに是非チャレンジしてみてはいかがでしょうか。</p>
<p><img src="/images/20170127/photo_20170127_09.jpeg"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;Futureグループでは、「２Way戦略」と呼ばれるスローガンの元、今までのB2BだけでなくB2Cなど別の領域へ自らがサービスを提供し、ビジ
    
    </summary>
    
      <category term="IoT" scheme="https://future-architect.github.io/categories/IoT/"/>
    
    
      <category term="3D-Printer" scheme="https://future-architect.github.io/tags/3D-Printer/"/>
    
  </entry>
  
  <entry>
    <title>マネージャーがうれしいRedmineデータのEVM表示方法を公開します！！</title>
    <link href="https://future-architect.github.io/articles/20170119/"/>
    <id>https://future-architect.github.io/articles/20170119/</id>
    <published>2017-01-19T09:00:00.000Z</published>
    <updated>2017-05-12T07:56:11.972Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/20160928/photo_20160928_00.jpg" alt=""></p>
<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>こんにちは。近藤です。</p>
<p><a href="https://future-architect.github.io/articles/20160920/">前回</a>はRedmileのデータをKibanaで表示してみました。</p>
<p>今回はRedmineデータをEVMグラフとして表示します。</p>
<p>例えば、Kibana+Timelionを使うと、RedmineデータからEVMグラフを表示することができるのです。</p>
<p><strong>◆EVMグラフ例</strong></p>
<p><img src="/images/20170119/photo_20170119_40.png" alt=""></p>
<p>では早速、Kibana+Timelionを使ってみましょう。</p>
<p>なお、下記を前提としています。</p>
<ul>
<li>Windows環境で構築する。</li>
<li>Redmineのデータベース(MySQL)に直接接続する。</li>
</ul>
<h2 id="EVMとは？"><a href="#EVMとは？" class="headerlink" title="EVMとは？"></a>EVMとは？</h2><p><strong>EVM</strong>(Earned Value Management:アーンド・バリュー・マネジメント)はPMBOKでも説明されている有名なプロジェクト管理技法です。</p>
<p>今回は下記の値を計測します。</p>
<table>
<thead>
<tr>
<th>計測値</th>
<th>説明</th>
<th>略称</th>
</tr>
</thead>
<tbody>
<tr>
<td>Planned Value</td>
<td>計画価値</td>
<td>PV</td>
</tr>
<tr>
<td>Actual Cost</td>
<td>実コスト</td>
<td>AC</td>
</tr>
<tr>
<td>Earned Value</td>
<td>出来高</td>
<td>EV</td>
</tr>
</tbody>
</table>
<p>それぞれの計測値をITプロジェクトにおける数値に置き換えると、下記のように言えます。</p>
<ul>
<li>画面開発に必要な工数（Planned Value：<strong>PV</strong>）</li>
<li>メンバーが稼働した時間（Actual Cost：<strong>AC</strong>）</li>
<li>開発が完了した作業量（Earned Value：<strong>EV</strong>）</li>
</ul>
<p><img src="/images/20170119/photo_20170119_00.png" alt=""></p>
<p>これらの数値を別々に把握できると、下記が別々に管理できそうです。</p>
<ul>
<li>①.画面開発の進捗（EV ÷ PV）</li>
<li>②.メンバーの生産性（EV ÷ AC）</li>
</ul>
<p>①の値を<strong>SPI</strong>(Schedule Performance Index)、②の値を<strong>CPI</strong>(Cost Performance Index)と呼びます。</p>
<p>いずれも標準値が”1.00”。それを下回る場合は、課題があると考えられます。</p>
<h2 id="RedmineのデータをEVM表示するとどうなる？"><a href="#RedmineのデータをEVM表示するとどうなる？" class="headerlink" title="RedmineのデータをEVM表示するとどうなる？"></a>RedmineのデータをEVM表示するとどうなる？</h2><p>例えば、下記のような4件のチケットがRedmineに登録されているプロジェクトがあったとします。</p>
<p>チケット番号#4の進捗が50%の状況ですね。</p>
<p><img src="/images/20170119/photo_20170119_49.png" alt=""></p>
<p>この場合、<strong>PV</strong>の累計は”<strong>32h</strong>“、<strong>EV</strong>の累計は”<strong>28h</strong>“。PVに対して<strong>EV</strong>が”<strong>4h</strong>“足りていないことが分かります。</p>
<p>また、<strong>SPI</strong>は”<strong>0.875</strong>“。<strong>進捗</strong>が”<strong>0.125</strong>“つまり、<strong>12.5%</strong>遅延していることが分かります。</p>
<h2 id="作業時間を付記した場合のEVMの例"><a href="#作業時間を付記した場合のEVMの例" class="headerlink" title="作業時間を付記した場合のEVMの例"></a>作業時間を付記した場合のEVMの例</h2><p>今度は作業時間を付記してみました。</p>
<p><img src="/images/20170119/photo_20170119_50.png" alt=""></p>
<p>この場合、<strong>AC</strong>の累計は”<strong>28h</strong>“です。</p>
<p>また、<strong>CPI</strong>は”<strong>1.00</strong>“。つまり、生産性は標準であることがわかります。</p>
<p>つまり、遅延はしているが、メンバーの生産性は標準。<br>メンバーの作業時間を確保することで、進捗が向上する事が検討出来そうです。</p>
<p>EVMを使うことで多角的にプロジェクトを把握する事ができますね。</p>
<p>今回は、このEVMをグラフで表示します。</p>
<h2 id="大まかな流れ"><a href="#大まかな流れ" class="headerlink" title="大まかな流れ"></a>大まかな流れ</h2><p>下記の手順でグラフを表示します。</p>
<ol>
<li>環境構築</li>
<li>データ投入</li>
<li>EVM 表示 </li>
</ol>
<h2 id="1-環境構築"><a href="#1-環境構築" class="headerlink" title="1.環境構築"></a>1.環境構築</h2><p><strong>環境構成図</strong><br><img src="/images/20170119/photo_201720160928_03.png" alt=""></p>
<p>今回もELK+Timelionを利用して、Redmineデータの可視化環境を構築します。</p>
<p>(a)ELKをダウンロード</p>
<ul>
<li><a href="https://www.elastic.co/jp/downloads/elasticsearch" target="_blank" rel="external">Elastic Search Download URL](https://www.elastic.co/jp/downloads/elasticsearch</a></li>
<li>→前回の構築時から最新版が出ているため（2017/1/19時点）私の場合は、「elasticsearch-5.1.2.zip」をダウンロードしました。</li>
</ul>
<p>(b) Kibanaをダウンロード</p>
<ul>
<li><a href="https://www.elastic.co/downloads/kibana" target="_blank" rel="external">Kibana Download URL](https://www.elastic.co/downloads/kibana</a><ul>
<li>→私の場合は、「kibana-5.1.2-windows-x86.zip」をダウンロードしました。</li>
</ul>
</li>
</ul>
<p>(c) Logstashをダウンロード</p>
<ul>
<li><a href="https://www.elastic.co/downloads/logstash" target="_blank" rel="external">Logstash Download URL](https://www.elastic.co/downloads/logstash</a><ul>
<li>→私の場合は、「logstash-5.1.2.zip」をダウンロードしました。</li>
</ul>
</li>
</ul>
<p>(d) 「c:\elastic」というフォルダを作成</p>
<p>(e) 先ほどダウンロードしたそれぞれの圧縮ファイルを解凍し、「c:\elastic」へ配置します。</p>
<p>最終的には下記のようなフォルダ構成になります。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">C:\elastic</div><div class="line">  └elasticsearch-5.1.2</div><div class="line">  └kibana-5.1.2-windows-x86</div><div class="line">  └logstash-5.1.2</div></pre></td></tr></table></figure>
<h2 id="2-RedmineデータをELKに取り込む"><a href="#2-RedmineデータをELKに取り込む" class="headerlink" title="2.RedmineデータをELKに取り込む"></a>2.RedmineデータをELKに取り込む</h2><p>次に、JDBCドライバを用意します。</p>
<p><a href="https://future-architect.github.io/articles/20160920/">前回</a>ダウンロードした「mysql-connector-java-5.1.39-bin.jar」というファイルを、<br>「C:\elastic\logstash-5.1.2\bin」以下に配置します。</p>
<p>次に、「redmine.txt」というファイルを作成。中身は下記のようにします。（★を含む箇所は皆様の環境に合わせた値へ変えて下さい。）</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line">    jdbc &#123;</div><div class="line">        jdbc_connection_string =&gt; "jdbc:mysql://★IP★:3306/★サービス名★"</div><div class="line">        jdbc_user =&gt; "★ユーザ名★"</div><div class="line">        jdbc_password =&gt; "★パスワード★"</div><div class="line">        jdbc_driver_library =&gt;"mysql-connector-java-5.1.39-bin.jar"</div><div class="line">        jdbc_driver_class =&gt; "com.mysql.jdbc.Driver"</div><div class="line">        statement =&gt; "</div><div class="line">select</div><div class="line">	iss.due_date due_date</div><div class="line">	, iss.updated_on updated_on</div><div class="line">	, iss.estimated_hours pv</div><div class="line">	, iss.estimated_hours * iss.done_ratio / 100 ev</div><div class="line">	, tim.hours ac</div><div class="line">from</div><div class="line">	issues iss</div><div class="line">	left join (</div><div class="line">		select</div><div class="line">			issue_id</div><div class="line">			, sum(hours) hours</div><div class="line">		from</div><div class="line">			time_entries</div><div class="line">		group by</div><div class="line">			issue_id</div><div class="line">	) tim</div><div class="line">	on iss.id = tim.issue_id</div><div class="line">"</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">output &#123;</div><div class="line">    elasticsearch &#123;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>中に記載されているSQLでは、下記5つの値を取得します。</p>
<table>
<thead>
<tr>
<th style="text-align:left">SQL上の項目名</th>
<th style="text-align:left">Redmine上の項目名 　</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">due_date 　</td>
<td style="text-align:left">「期日」 　　　　　　　　</td>
</tr>
<tr>
<td style="text-align:left">updated_on</td>
<td style="text-align:left">「更新日」　　　　　　　</td>
</tr>
<tr>
<td style="text-align:left">pv 　　　　　</td>
<td style="text-align:left">「予定工数」        　</td>
</tr>
<tr>
<td style="text-align:left">ev</td>
<td style="text-align:left">「予定工数」×「進捗率」</td>
</tr>
<tr>
<td style="text-align:left">ac     　　</td>
<td style="text-align:left">「作業時間の記録」 　　　</td>
</tr>
</tbody>
</table>
<p>この「redmine.txt」も「C:\elastic\logstash-5.1.2\bin」に配置。</p>
<p>結果的に、下記のようなフォルダ構成になります。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">C:\elastic</div><div class="line">└elasticsearch-5.1.2</div><div class="line">└kibana-5.1.2-windows-x86</div><div class="line">└logstash-5.1.2</div><div class="line"> └bin </div><div class="line">  └mysql-connector-java-5.1.39-bin.jar</div><div class="line">  └redmine.txt</div></pre></td></tr></table></figure>
<p>では、ElasticSearchを実行します。<br>「C:\elasticsearch-5.1.2\bin」フォルダで下記のコマンドを実行。</p>
<p><code>elasticsearch.bat</code></p>
<p>コマンドプロンプトの右下に”started”と表示されたら起動完了です。</p>
<p>次にLogstashを使って、RedmineのデータをElasticSearchへ取り込みます。<br>「C:\elastic\logstash-5.1.2\bin」フォルダで下記コマンドを実行。</p>
<p><code>logstash.bat -f redmine.txt</code></p>
<p><img src="/images/20170119/photo_20170119_29.png" alt=""></p>
<p>取り込みが完了しました。</p>
<p>次に、Kibanaを起動します。<br>「C:\elastic\kibana-5.1.2-windows-x86\bin」フォルダで下記コマンドを実行。</p>
<p><code>kibana.bat</code></p>
<p><img src="/images/20170119/photo_20170119_16.png" alt=""></p>
<p>Kibanaが起動しました。</p>
<p>では、Kibanaを表示します。ブラウザで <code>http://localhost:5601</code>を開く。</p>
<p><img src="/images/20170119/photo_20170119_17.png" alt=""></p>
<p>[Configure an index pattern]という画面が開くので、[Time-field name]に”due_date”を指定します。</p>
<p>そして、[Create]をクリック。</p>
<p><img src="/images/20170119/photo_20170119_30.png" alt=""></p>
<p>そして、左側の[Timelion]をクリックすると、Timelionの画面が開きます。</p>
<p><img src="/images/20170119/photo_20170119_21.png" alt=""></p>
<p>グラフが出ましたね！</p>
<p>次は、少し見やすくするために、グラフエリアを最大化します。<br>グラフにカーソルを当てると[Full screen]ボタンが表示されるのでクリック。</p>
<p><img src="/images/20170119/photo_20170119_22.png" alt=""></p>
<p>するとグラフが最大化されます。<br>そして、次は表示期間を変更します。右上[Last 15 minutes]ををクリック。</p>
<p><img src="/images/20170119/photo_20170119_23.png" alt=""></p>
<p>すると日付が選べます。今回は[Last 1 Year]をクリック。</p>
<p><img src="/images/20170119/photo_20170119_08.png" alt=""></p>
<p>次に、画面右上あたりの[Last 1 Year]をクリック。</p>
<p><img src="/images/20170119/photo_20170119_24.png" alt=""></p>
<p>グラフが大きく見やすくなりましたね。</p>
<p><img src="/images/20170119/photo_20170119_25.png" alt=""></p>
<h2 id="3-EVM-表示"><a href="#3-EVM-表示" class="headerlink" title="3.EVM 表示"></a>3.EVM 表示</h2><p>では、<code>.es(*)</code>という記載を<br><code>.es(metric=&#39;sum:pv&#39;, timefield=&#39;due_date&#39;).cusum().label(&#39;[累積]pv&#39;)</code><br>に変更します。</p>
<p><img src="/images/20170119/photo_20170119_38.png" alt=""></p>
<p>PVの累計が期日別に表示されました。</p>
<p>記載の意味は下記の通りです。</p>
<ul>
<li>.es(metric)：表示する項目を指定する。今回はPVの合計を指定。</li>
<li>.es(timefield)：X軸の項目名を指定する。今回は期日(due_date)を指定。</li>
<li>.cusum()：累積表示するという意味。</li>
</ul>
<p>次は、<code>.es(metric=&#39;sum:pv&#39;, timefield=&#39;due_date&#39;).cusum().label(&#39;[累積]pv&#39;)</code>という記載を</p>
<p><code>.es(metric=&#39;sum:pv&#39;, timefield=&#39;due_date&#39;).cusum().label(&#39;[累積]pv&#39;),.es(metric=&#39;sum:ev&#39;, timefield=&#39;updated_on&#39;).cusum().label(&#39;[累積]ev&#39;)</code><br>に変更します。</p>
<p><img src="/images/20170119/photo_20170119_39.png" alt=""></p>
<p>すると、EVの累計が更新日別に表示されます。</p>
<p>記載の意味は下記の通りです。</p>
<ul>
<li>.es(metric)：表示する項目を指定する。今回はEVの合計を指定。</li>
<li>.es(timefield)：X軸の項目名を指定する。今回は更新日(updated_on)を指定。</li>
<li>.cusum()：累積表示するという意味。</li>
</ul>
<p>次は、<code>.es(metric=&#39;sum:pv&#39;, timefield=&#39;due_date&#39;).cusum().label(&#39;[累積]pv&#39;),.es(metric=&#39;sum:ev&#39;, timefield=&#39;updated_on&#39;).cusum().label(&#39;[累積]ev&#39;)</code>という記載を</p>
<p><code>.es(metric=&#39;sum:pv&#39;, timefield=&#39;due_date&#39;).cusum().label(&#39;[累積]pv&#39;),.es(metric=&#39;sum:ev&#39;, timefield=&#39;updated_on&#39;).cusum().label(&#39;[累積]ev&#39;),.es(metric=&#39;sum:ac&#39;, timefield=&#39;updated_on&#39;).cusum().label(&#39;[累積]ac&#39;)</code><br>に変更します。</p>
<p><img src="/images/20170119/photo_20170119_40.png" alt=""></p>
<p>すると、ACの累計が更新日別に表示されます。</p>
<p>これで、PVとEV、ACが表示されましたね。</p>
<p>さらに、CPIも併記させます。</p>
<p>左下の[Exit full screen]をクリックし、グラフの大きさを元に戻します。</p>
<p><img src="/images/20170119/photo_20170119_41.png" alt=""></p>
<p>そして、右上の[Add]をクリック。</p>
<p><img src="/images/20170119/photo_20170119_42.png" alt=""></p>
<p>グラフが追加されました。</p>
<p><img src="/images/20170119/photo_20170119_43.png" alt=""></p>
<p>そして、<code>.es(*)</code>という記載を<br><code>.es(metric=&#39;sum:ev&#39;, timefield=&#39;updated_on&#39;).cusum().divide(.es(metric=&#39;sum:ac&#39;, timefield=&#39;updated_on&#39;).cusum()).label(&#39;cpi&#39;).yaxis(min=0.75, max=1.25)</code><br>に変更すると。</p>
<p><img src="/images/20170119/photo_20170119_48.png" alt=""></p>
<p>CPIが表示されました。</p>
<p>記載の意味は下記の通りです。</p>
<ul>
<li>.divide()：割り算するという意味。今回は、EV÷ACを指定。</li>
<li>.yaxis()：Y軸の表示範囲を指定する。今回は、0.75～1.25を指定。</li>
</ul>
<p>これでTimelionの左側に、PVとEVとAC。右側にCPIが併記されました。</p>
<h2 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a>最後に</h2><p>今回は、EVMグラフを表示しました。</p>
<p>いかがでしたでしょうか？<br>RedmineをKibana＋Timelionと組み合わせることで、グラフ表示が可能になり、結果的にプロジェクト状況の把握が容易になります。</p>
<p>本記事が、皆様のプロジェクトマネジメントに役に立てば幸いです。</p>
<p>なお、次回以降私がブログを執筆する際は、グラフのドリルダウン、プロジェクトダッシュボードの構築、ダッシュボード画像のメール配信に関する方法を記載していく予定。</p>
<p>これらの記事が、みなさまにとって参考になりそうでしたら「いいね！」をクリックして頂けますと幸いです。執筆の励みになります。＾＾</p>
<p>今後ともよろしくお願い致します。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/20160928/photo_20160928_00.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;
    
    </summary>
    
      <category term="Management" scheme="https://future-architect.github.io/categories/Management/"/>
    
    
      <category term="Elastic-Stack" scheme="https://future-architect.github.io/tags/Elastic-Stack/"/>
    
      <category term="Kibana" scheme="https://future-architect.github.io/tags/Kibana/"/>
    
      <category term="Redmine" scheme="https://future-architect.github.io/tags/Redmine/"/>
    
  </entry>
  
  <entry>
    <title>インフラ入門vol.1</title>
    <link href="https://future-architect.github.io/articles/20170109/"/>
    <id>https://future-architect.github.io/articles/20170109/</id>
    <published>2017-01-09T02:01:06.000Z</published>
    <updated>2017-05-09T01:57:18.392Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/20170109/photo_20170109_01.jpg"></p>
<h1 id="１．はじめに"><a href="#１．はじめに" class="headerlink" title="１．はじめに"></a>１．はじめに</h1><p>業務・アプリ実装からすると影のイメージがあるインフラについて、この領域をやりたいと思う人を増やすべく、入門編を記載していきます。<br>（もちろんここでいうインフラとはITインフラのことになります）<br>また入門編の内容に入る前に、今回はまずは「意義」や「興味」を感じて頂くことを目的に記載します。<br>その後、「おっ、ちょっとやってみよう」と一歩を踏み出して頂けるような、入門ネタを記載したいと思っています。</p>
<p>ただ一般的な入門書に載っている内容はそちらを参照すればいいので、ここでは当社のインフラエンジニアがスキルを身に付けていく過程の入門ネタを書き連ねたいと思っています。<br>（結局、一般的なことになった場合はすみません）<br>なお、本内容は筆者の主張が含まれておりますのでご了承ください。</p>
<h1 id="２．インフラって何？"><a href="#２．インフラって何？" class="headerlink" title="２．インフラって何？"></a>２．インフラって何？</h1><p>そもそもインフラって何でしょうか。<br>正しい名称は、インフラストラクチャー (infrastructure)で、Wikipediaには以下の記載があります。</p>
<blockquote>
<p>インフラストラクチャー (英語: infrastructure) とは、「下支えするもの」「下部構造」を指す観念的な用語であり、以下の意味がある。</p>
<ul>
<li>国民福祉の向上と国民経済の発展に必要な公共施設。</li>
<li>企業などの主幹となる設備。</li>
</ul>
</blockquote>
<p><a href="https://ja.wikipedia.org/wiki/インフラストラクチャー" target="_blank" rel="external">https://ja.wikipedia.org/wiki/インフラストラクチャー</a></p>
<p>ITインフラというと、ITの仕組み（アプリケーション）を「下支えするもの」というイメージですね。<br>具体的に、ITのインフラでイメージされるのは、ネットワーク、ハードウェア、OS、各種ミドルウェア等・・・といったところでしょうか。</p>
<p>ただここで、外してはいけないことがあります。<br>「下支えするもの」ということです。<strong>その上で動いている仕組みを動かしてあげる</strong>と言う点です。<br>重要なのは、先ほどの、ネットワーク、ハードウェア、OS、各種ミドルウェア等といったところが<strong>ITインフラの目的となってはいけない</strong>ということです。<br>ITインフラで下支えする仕組みとは、システムを利用するユーザが求める機能（＝アプリケーション）になります。<br>当社のお仕事でいうところの顧客の業務処理（業務アプリケーション）ですね。</p>
<p>以降は業務アプリケーションの例を元に記載します。</p>
<p>アプリケーションは、パッケージ製品など出来合いのものもありますが、求められる機能に対してプログラムでコーディングされたものになります。<br>ITインフラはこれを「下支えするもの」である必要があります。<br>そういう意味で、インフラとは簡単に言うと、プログラムでコーディングされるもの”<strong>以外全て</strong>”となります。<br>少し話しは外れますが、インフラにあまり興味が無い方や初めての方は以下のようなマイナスなイメージがあるのではないでしょうか。</p>
<ul>
<li>製品だから動いて当たり前</li>
<li>マニュアルを見て設定すれば終わりなのでクリエイティブなものは無い</li>
<li>色々なアプリの要求に泥臭く対応する必要がある</li>
<li>製品ベンダでもない限り、モノづくり感はない　など</li>
</ul>
<p>インフラレイヤはコーディングしてゼロから何かを生み出すものではないので、そうかもしれません。<br>（昨今の Infrastructure as Codeのためのコーディングや、また当社はたまにハードも作ってますがそういった例も除く）</p>
<p>ただ、逆に言うとコーディング以外の全てを誰かがお膳立てする必要があります。<br>それがインフラです。</p>
<p>またこのお膳立ての内容は自宅のサーバー機器でもない限り、単純には行きません。<br>結果的に設計が単純だったとしても、<strong>そこに行きつくまでの要件定義や技術検証、インフラデザインには経験と知識が必要</strong> になります。</p>
<p><strong>顧客の予算・業務要件を加味しつつ、将来の技術要素のトレンドも見据え、動いて当たり前の品質を実現するのには何をどうデザインし、採用技術を決め、実装・テストのスケジュールを立てるのか…</strong><br>そのあたりが<strong>インフラの醍醐味</strong>となります。</p>
<p>なお、私的な意見ですが、デザインまで終われば基本的には後は設定作業になります。<br>よほど難解な要件や新技術要素の導入が無い限り、ここに醍醐味はありません。<br>インフラに興味のない方の多くは、その設定作業のみ見えている方かもしれません。</p>
<h1 id="３．インフラエンジニアに求められること"><a href="#３．インフラエンジニアに求められること" class="headerlink" title="３．インフラエンジニアに求められること"></a>３．インフラエンジニアに求められること</h1><p>前述の通り、期待されるのは、システムを利用するユーザが求める機能（＝アプリケーション）を下支えすること。<br>対象は、そのアプリケーションプログラムでコーディングされるもの”<strong>以外全て</strong>”となります。</p>
<p>その手段の種別として、<strong>ネットワーク、ハードウェア、OS、各種ミドルウェア等</strong>があり、それぞれ個の領域に特化された方、フルスタックに検討出来る方など、人によって濃淡はありますが、総じてアプリケーションを期待どおりに動かすインフラを提供する必要があります。<br>もちろんその利用者の要求する機能（アプリケーション）を支えるインフラである必要があり、また<strong>非機能要件</strong>も考慮して、インフラの手段に落とすことが求められます。</p>
<p>またインフラはアプリケーションの開発やテストに先行して環境を提供する必要があります。<br>特にネットワークについてはWAN等、工事に期間を要するものもあるためアプリケーションの全貌が見えない中で準備を開始するケースもあります。</p>
<p>上記に対して必要な基礎知識は以下の通りです。</p>
<ol>
<li>インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計する<strong>デザインセンス</strong></li>
<li>アプリケーション開発をお膳立てするための先回りした<strong>計画力</strong></li>
<li>インフラを分からない人にでも非機能面や選定製品の根拠を説明でき、予算とともに合意していく<strong>交渉力</strong></li>
</ol>
<p>入門編としては(1)のお話ができればと思っています。<br>なお、(1),(2)は経験を積めば着実に身に付く知識ですが、(3)はある程度、その人の人間力や性格にもよります。</p>
<h1 id="４．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」の前提"><a href="#４．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」の前提" class="headerlink" title="４．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」の前提"></a>４．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」の前提</h1><p>このデザインセンスとは、結局のところ、要件に見合った当たり前のインフラ環境を設計し、それを想定通りに本番稼働させるセンスとなります。<br>ここでもやはり外してはいけないのが、インフラを想定通りに稼働させるのはもちろんですが、<strong>目的はインフラが下支えしている業務アプリケーションが想定通りに動くこと</strong>です。<br>アプリケーションはプログラムのコーディングに依存するので、インフラとしてはどうしようもないのでは？という話ではありません。</p>
<p>インフラでは<strong>非機能要件で性能や可用性を定義し、それを担保するためのミドルウェアや技術要素を設計</strong>します。<br>プログラムのコーディングロジック以前の処理方式を決めているのです。</p>
<p>そこで重要なのが、当たり前なのですが、<strong>アプリケーションに求められる処理方式をイメージする必要</strong>があります。<br>インフラはアプリケーションの開発前に製品を発注する必要があるため、アプリケーションの要件定義・基本設計時点でそれらをイメージしきる必要があります。<br>それには、何をするシステムなのかを、データのインプットとアウトプットのフロー（ユーザやシステムとのインターフェース）をイメージし、必要なデータの形式やシステム内外のプロトコルなどを組み上げておく必要があります。</p>
<p>また非機能面でいうと、<strong>業務的に止めてはいけない</strong>機能や、<strong>リアルタイム性</strong>が必要な機能、サイジングに関わる<strong>データ量</strong>などを押さえておく必要もあります。<br>製品や技術要素の選定には<strong>運用スキーム</strong>も想定する必要もあります。</p>
<p>そこで大切なのは、また当たり前ですが、そのイメージをアプリケーション開発の<strong>キーマンとズレがないように、コミュニケーションする</strong>ことです。<br>もちろん修正が必要なケースもありますが、その場合もアプリケーションとインフラで意識を合わせながら検討できる<strong>見通しの良いチームの環境つくりが重要</strong>です。<br>インフラが成功するかどうかは、私はここが一番のポイントだと考えています。</p>
<p>インフラの技術要素に閉じた中での問題は大概何とでも潰しが効くと思いますが、そもそもの処理方式のイメージが違う場合、修正は困難なものとなります。<br>例えると、ミニバンが欲しい人にスポーツカーを押し売るイメージでしょうか。</p>
<h1 id="５．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」入門に向けて"><a href="#５．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」入門に向けて" class="headerlink" title="５．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」入門に向けて"></a>５．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」入門に向けて</h1><p>さて、前置きが長くなりましたが、インフラの入門ネタとして、知っておくべき各インフラのパートをご紹介します。</p>
<p>また業務アプリケーションを支えるインフラが提供するサービス（役割）としては、基本的に以下のような種類に分かれます。</p>
<ul>
<li><strong>WEB</strong>: 画面からのWebアクセスやAPIなどのWebサービスを受け付け、応答を返す、出入り口</li>
<li><strong>AP</strong>: アプリケーションのロジックを動かす</li>
<li><strong>DB</strong>: データの保管、取り出しを担う</li>
<li><strong>帳票</strong>: ExcelやPDFなど帳票レポートの出力を行う</li>
<li><strong>データ連携</strong>: EDIやEAIなどファイルやメッセージで他と通信する</li>
<li><strong>ジョブ管理</strong>: 自動実行のタイムコントロールや順序制御を行う</li>
<li><strong>監視通知</strong>: 障害の検知や業務に必要な通知を実施</li>
<li><strong>バックアップ</strong>: データやシステムのバックアップ、およびリストアを実施</li>
<li><strong>他システム運用系サービス</strong>: ログイン認証、ログの管理、ウィルス対策等を実現</li>
</ul>
<p>これらの役割に対して、ネットワーク、ハードウェア、OS、各種ミドルウェア等といった、インフラのパーツ・手段を設計することとなります。<br>責任をもって想定通りに業務アプリケーションを下支えするためには、様々な構成パタンや製品を選定するうえで、何を理解して、押さえておく必要があるのでしょうか。</p>
<p>次回以降のインフラ入門編で、個別の領域ごとに、まずはとっかかりとして理解しておくべきことをご説明していきます。</p>
<h1 id="６．次回"><a href="#６．次回" class="headerlink" title="６．次回"></a>６．次回</h1><p>ということで、今回はインフラ入門の前提となる話を中心に書き連ねました。<br>次回からはインフラの個別領域に絞った入門ネタのお話を掲載できればと考えています。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/20170109/photo_20170109_01.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;１．はじめに&quot;&gt;&lt;a href=&quot;#１．はじめに&quot; class=&quot;headerlink&quot; title=&quot;１．はじめに&quot;&gt;&lt;/a&gt;１．はじめに&lt;/h1
    
    </summary>
    
      <category term="Infrastructure" scheme="https://future-architect.github.io/categories/Infrastructure/"/>
    
    
      <category term="Infrastructure" scheme="https://future-architect.github.io/tags/Infrastructure/"/>
    
  </entry>
  
  <entry>
    <title>たくさんあって混乱しがちなIoT関連の団体とOSSをまとめました</title>
    <link href="https://future-architect.github.io/articles/20161209/"/>
    <id>https://future-architect.github.io/articles/20161209/</id>
    <published>2016-12-09T01:56:44.000Z</published>
    <updated>2017-05-09T01:57:18.386Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-はじめに"><a href="#1-はじめに" class="headerlink" title="1. はじめに"></a>1. はじめに</h1><p>「IoT」は、昨今、聞かない日はないくらい、バズワード化した単語になりました。<br>同時に、様々な国や企業が、 <strong>IoTの標準仕様</strong> を抑えることによって、市場において有利なポジションを築くために、それぞれがIoT団体・プロジェクト・OSSプロダクトを支援展開しています。<br>2016年12月9日現在、押さえておきたいIoTに関係する団体・プロジェクトとオープンソースソフトウェアの概要を紹介したいと思います。</p>
<h1 id="2-団体・プロジェクト"><a href="#2-団体・プロジェクト" class="headerlink" title="2. 団体・プロジェクト"></a>2. 団体・プロジェクト</h1><p>今回紹介するIoT関連の団体とプロジェクトの一覧です。</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">団体名</th>
<th style="text-align:center">略称</th>
<th style="text-align:center">設立</th>
<th style="text-align:center">設立主体</th>
<th>参加団体数</th>
<th style="text-align:center">特徴</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">Plattform Industrie 4.0</td>
<td style="text-align:center">-</td>
<td style="text-align:center">2013/4</td>
<td style="text-align:center">ドイツ産業界（情報、機械、電気）、ドイツ連邦政府</td>
<td>-</td>
<td style="text-align:center">ドイツの国策的プロジェクト</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">Industrial Internet Consortium</td>
<td style="text-align:center">IIC</td>
<td style="text-align:center">2014/3</td>
<td style="text-align:center">米国情報産業界（GE、Cisco、AT&amp;T、IBM、Intel、OMG）</td>
<td>259</td>
<td style="text-align:center">米国情報産業が中心の団体</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">Open Connectivity Foundation</td>
<td style="text-align:center">OCF</td>
<td style="text-align:center">2016/2</td>
<td style="text-align:center">Canon、Cisco、Electrolux、GE Digital、Intel、Microsoft、Qualcomm、Samsung、LG、Haier など</td>
<td>284</td>
<td style="text-align:center">家電系企業が中心の団体</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">Open Mobile Alliance</td>
<td style="text-align:center">OMA</td>
<td style="text-align:center">2002/6</td>
<td style="text-align:center">各国のモバイル通信関連企業</td>
<td>72</td>
<td style="text-align:center">携帯キャリアが中心</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">oneM2M</td>
<td style="text-align:center">OM2M</td>
<td style="text-align:center">2012/7</td>
<td style="text-align:center">各国の情報通信系標準化団体</td>
<td>230</td>
<td style="text-align:center">包括的なデバイス周辺の規格を策定</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">デバイスWebAPIコンソーシアム</td>
<td style="text-align:center">-</td>
<td style="text-align:center">2015/4</td>
<td style="text-align:center">NTT DoCoMo、ソフトバンクモバイル</td>
<td>27</td>
<td style="text-align:center">国内のGotAPI推進団体</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">OpenFog Consortium</td>
<td style="text-align:center">-</td>
<td style="text-align:center">2015/11</td>
<td style="text-align:center">ARM、Cisco、Dell、Intel、Microsoft、プリンストン大学など</td>
<td>46</td>
<td style="text-align:center">デバイスからクラウドに渡る分散技術</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">IoT推進コンソーシアム</td>
<td style="text-align:center">ITAC</td>
<td style="text-align:center">2015/10</td>
<td style="text-align:center">国内の産官学</td>
<td>2605</td>
<td style="text-align:center">国内の最大IoT団体</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">ロボット革命イニシアティブ協議会</td>
<td style="text-align:center">RRI</td>
<td style="text-align:center">2015/5</td>
<td style="text-align:center">国内の情報、機械、電気、ロボット団体など</td>
<td>178</td>
<td style="text-align:center">国内の最大ロボット団体</td>
</tr>
</tbody>
</table>
<p>順番に説明していきます。</p>
<h2 id="2-1-Plattform-Industrie-4-0-Industry-4-0"><a href="#2-1-Plattform-Industrie-4-0-Industry-4-0" class="headerlink" title="2-1. Plattform Industrie 4.0 (Industry 4.0)"></a>2-1. <a href="http://www.plattform-i40.de/" target="_blank" rel="external">Plattform Industrie 4.0 (Industry 4.0)</a></h2><p><img src="/images/20161206/photo_20161206_01.png" width="*" class="img-reset-size"></p>
<p>Industrie 4.0は第４次産業革命の意味ですが、これは、第１次（蒸気機関による機械化）、第２次（電力による大量生産）、第３次（ITによる自動化）の次のフェーズ(CPSによる新生産システム)というところから名付けられています。<br>ドイツ政府主導の戦略的プロジェクトで、製造業の高度デジタル化を推進し、マスプロダクトにおいてもカスタマイズ可能にし、さらにコストも削減を狙うというものです。<br>実世界（Physical System）の情報とサイバー空間（Cyber System）を結びつけたものを、Cyber Physical System（CPS）と名付け、この概念が本プロジェクトでは中心に置かれています。これはIoTに似通った世界観ですが、IoTの括りよりも大きな括りの考え方になります。<br>実際に実現していく際のソリューションやソフトウェアなどについては、プロジェクトメンバーの中核に位置しているシーメンスとSAPが大きな役割を担っています。</p>
<h2 id="2-2-Industrial-Internet-Consortium-IIC"><a href="#2-2-Industrial-Internet-Consortium-IIC" class="headerlink" title="2-2. Industrial Internet Consortium (IIC)"></a>2-2. <a href="https://www.iiconsortium.org/" target="_blank" rel="external">Industrial Internet Consortium (IIC)</a></h2><p><img src="/images/20161206/photo_20161206_02.png" class="img-reset-size"></p>
<p>GE、Cisco、IBM、Intelなど、米国の情報系産業の中心企業が多く参加している団体です。<br>モデリング言語で有名な<a href="http://www.omg.org/spec/UML/" target="_blank" rel="external">UML</a>、言語非依存の分散オブブジェクトのフレームワークである<a href="http://www.corba.org/" target="_blank" rel="external">CORBA</a>、そしてソフトウェアの開発手法である<a href="http://www.omg.org/mda/" target="_blank" rel="external">MDA</a>などで有名な標準化団体である<a href="http://www.omg.org/" target="_blank" rel="external">OMG</a>が事務局を担当しています。<br>どちらかというと製造業に主眼をおいたIndustrie 4.0よりもターゲットとする範囲が広く、米国企業が中心ということでIoTを使った新しいビジネス作りや新技術の開発に主眼をおいてます。<br>多くの標準化団体と連係をしていますが、IIC自身は標準化団体ではありません。<br>当初はPredixを擁すGEとハードベンダー達といった感がありましたが、現在は日本企業も数多く参加している団体でもあります。</p>
<h2 id="2-3-Open-Connectivity-Foundation-OCF"><a href="#2-3-Open-Connectivity-Foundation-OCF" class="headerlink" title="2-3. Open Connectivity Foundation(OCF)"></a>2-3. <a href="https://openconnectivity.org/" target="_blank" rel="external">Open Connectivity Foundation(OCF)</a></h2><p><img src="/images/20161206/photo_20161206_03.png" class="img-reset-size"></p>
<p>2016年2月に発足した、旧Open Interconnect Consortium (OIC) の後継団体になります。旧OICは、Intelを中心に発足した団体です。<br>現在は、AllSeen Alliance (AllSeen) がこの団体に合流しました。AllSeenは、Qualcommを中心に発足した団体です。<br>以前は、別組織としてIntelとQualcommが対立していたような構図でしたが、両団体が合流することで、規格の分断ではなく統合が進むものと思われます。<br>今後、それぞれの団体が推進していたIoTプラットフォーム（AllSeen AllianceのAlljoyn、OICのIoTivity）を徐々に統合していくようです。</p>
<figure><br><img src="/images/20161206/photo_20161206_15.png"><br><figcaption>図１. OCFの変遷</figcaption><br></figure>



<h2 id="2-4-Open-Mobile-Alliance-OMA"><a href="#2-4-Open-Mobile-Alliance-OMA" class="headerlink" title="2-4. Open Mobile Alliance(OMA)"></a>2-4. <a href="http://openmobilealliance.org/" target="_blank" rel="external">Open Mobile Alliance(OMA)</a></h2><p><img src="/images/20161206/photo_20161206_04.gif" class="img-reset-size"></p>
<p>世界のモバイル通信関連企業が加盟している、携帯電話関連の標準規格策定を行う団体です。<br>前身団体の Wireless Application Protocol (WAP) フォーラム、Open Mobile Architecture Initiative と Location Interoperability Forum（LIF）、MMS Interoperability Group（MMS-IOP）、SyncML Initiative、Wireless Village Initiative が合流して設立されました。<br>日本からも、NTT DoCoMo、KDDI、ソフトバンクモバイルなど、主要な通信キャリアなどが参加しています。</p>
<figure><br><img src="/images/20161206/photo_20161206_16.png"><br><figcaption>図２. OMAの変遷</figcaption><br></figure>


<h2 id="2-5-oneM2M-OM2M"><a href="#2-5-oneM2M-OM2M" class="headerlink" title="2-5. oneM2M(OM2M)"></a>2-5. <a href="http://www.onem2m.org/" target="_blank" rel="external">oneM2M(OM2M)</a></h2><p><img src="/images/20161206/photo_20161206_05.png" class="img-reset-size"></p>
<p>元々はヨーロッパの標準化団体が中心に策定されてきた標準規格を世界に広げるために、世界の各地域の複数の標準化団体によって設立された団体です。<br>特定の技術や通信プロトコルに依存しない、抽象度の高い標準化を進めています。標準化された各規格に対して、実際によく利用されている技術や、OCFのAlljoyn、IoTivity、OMAの<a href="http://technical.openmobilealliance.org/Technical/technical-information/release-program/current-releases/oma-lightweightm2m-v1-0" target="_blank" rel="external">LWM2M</a>などのIoTデバイスシステムと連係可能なものになっています。<br>現在は、<a href="http://www.onem2m.org/technical/published-documents" target="_blank" rel="external">標準仕様の第２版</a>が公開されています。</p>
<h2 id="2-6-デバイスWebAPIコンソーシアム"><a href="#2-6-デバイスWebAPIコンソーシアム" class="headerlink" title="2-6. デバイスWebAPIコンソーシアム"></a>2-6. <a href="https://device-webapi.org/" target="_blank" rel="external">デバイスWebAPIコンソーシアム</a></h2><p><img src="/images/20161206/photo_20161206_06.png" class="img-reset-size"></p>
<p><a href="http://openmobilealliance.org/" target="_blank" rel="external">OMA</a>にて標準化された <a href="http://technical.openmobilealliance.org/Technical/technical-information/release-program/current-releases/generic-open-terminal-api-framework-1-0" target="_blank" rel="external">Generic Open Terminal API Framework Version 1.0(GotAPI)</a> の利用・拡張などを中心とした国内の団体です。弊社も企業会員となっています。<br>現在では、本団体のメンバー企業が中心となって、GotAPIを利用したプラットフォーム「<a href="https://linkingiot.com/" target="_blank" rel="external">Linking</a>」が提供されており、このプラットフォームに繋がるデバイスについても複数社から販売されています。</p>
<h2 id="2-7-OpenFog-Consortium"><a href="#2-7-OpenFog-Consortium" class="headerlink" title="2-7. OpenFog Consortium"></a>2-7. <a href="https://www.openfogconsortium.org/" target="_blank" rel="external">OpenFog Consortium</a></h2><p><img src="/images/20161206/photo_20161206_07.jpg" class="img-reset-size"></p>
<p>クラウド（雲）、デバイス、そしてその間に位置するフォグ（霧）を中心とした、フォグコンピューティングにフォーカスした団体です。<br>従来のクローズドシステムや昨今のクラウドコンピューティングの次のアーキテクチャを検討していく団体になります。</p>
<h2 id="2-8-IoT推進コンソーシアム（ITAC）"><a href="#2-8-IoT推進コンソーシアム（ITAC）" class="headerlink" title="2-8. IoT推進コンソーシアム（ITAC）"></a>2-8. <a href="http://www.iotac.jp/" target="_blank" rel="external">IoT推進コンソーシアム（ITAC）</a></h2><p><img src="/images/20161206/photo_20161206_08.jpg" class="img-reset-size"></p>
<p>2015年10月に設立された、参加団体数2600を超える（2016年12月現在）、日本発の産官学連携のコンソーシアムです。<br>活動は、<a href="http://smartiot-forum.jp/" target="_blank" rel="external">技術開発WG（通称：スマートIoT推進フォーラム）</a>、<a href="https://iotlab.jp/" target="_blank" rel="external">先進的モデル事業推進WG（通称：IoT推進ラボ）</a>、専門WGの３種類のワーキンググループ（以下WG）で行われています。<br>スマートIoT推進フォーラムでは、IoT関連技術の開発・実証・標準化などを行い、IoT推進ラボでは、先進的なモデル事業の創出、規制改革などの環境整備などを行っており、弊社会長の金丸も支援委員として参画しています。<br>専門WGは必要に応じて設置されるのですが、現在は、<a href="http://www.iotac.jp/wg/security/" target="_blank" rel="external">IoTセキュリティWG（2016/1～）</a>と<a href="http://www.iotac.jp/wg/data/" target="_blank" rel="external">データ流通促進WG（2016/1～）</a>の２つのWGが設置されています。<br>今年、IICとOpenFog Consortiumと相互に連係する署名を取り交わしています。</p>
<h2 id="2-9-ロボット革命イニシアティブ協議会-RRI"><a href="#2-9-ロボット革命イニシアティブ協議会-RRI" class="headerlink" title="2-9. ロボット革命イニシアティブ協議会(RRI)"></a>2-9. <a href="https://www.jmfrri.gr.jp/" target="_blank" rel="external">ロボット革命イニシアティブ協議会(RRI)</a></h2><p><img src="/images/20161206/photo_20161206_14.gif" class="img-reset-size"></p>
<p><a href="http://www.kantei.go.jp/jp/singi/robot/" target="_blank" rel="external">ロボット革命実現会議</a>にて、日本の国家戦略として「<a href="http://www.meti.go.jp/press/2014/01/20150123004/20150123004.html" target="_blank" rel="external">ロボット新戦略</a>」が提案され、この戦略のための組織的プラットフォームとして本組織が設立されました。<br>国内のロボット・機械系団体・企業が数多く参加しています。</p>
<h2 id="まとめ-各団体の連携状況"><a href="#まとめ-各団体の連携状況" class="headerlink" title="[まとめ]各団体の連携状況"></a>[まとめ]各団体の連携状況</h2><p><img src="/images/20161206/photo_20161206_09.png"></p>
<p>現在、上記の各団体は、この図のような連携関係にあります。<br>それぞれの団体がテーマとするレイヤーやドメインが微妙に異なるので、相互で連携をしていくことで標準化作業などの無駄な重複などを避けていくという意味合いもあります。</p>
<h1 id="3-オープンソースソフトウェア"><a href="#3-オープンソースソフトウェア" class="headerlink" title="3. オープンソースソフトウェア"></a>3. オープンソースソフトウェア</h1><p>今回紹介するIoT関連のOSS一覧です。</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th>ソフトウェア名</th>
<th style="text-align:center">主な開発主体</th>
<th style="text-align:center">公開時期</th>
<th style="text-align:center">対象</th>
<th style="text-align:center">特徴</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td>AllJoyn</td>
<td style="text-align:center">Qualcomm (OCF)</td>
<td style="text-align:center">2011</td>
<td style="text-align:center">家電・ウェアラブルなど</td>
<td style="text-align:center">Windows 10 は既に対応済</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td>IoTivity</td>
<td style="text-align:center">Intel, Samsung (OCF)</td>
<td style="text-align:center">2014/12</td>
<td style="text-align:center">家電・ウェアラブルなど</td>
<td style="text-align:center">OCFが推進していくプラットフォーム</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td>Eclipse IoT</td>
<td style="text-align:center">Eclipse Foundaion</td>
<td style="text-align:center">2012 (iot.eclpse.orgとして)</td>
<td style="text-align:center">様々な領域</td>
<td style="text-align:center">ソフトウェアは主にJavaで構成されている</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td>SensorBee</td>
<td style="text-align:center">Preferred Networks</td>
<td style="text-align:center">2016/3</td>
<td style="text-align:center">IoT機器などからのストリームデータ</td>
<td style="text-align:center">日本発のIoT向けストリーム処理OSS Go言語で開発されている</td>
</tr>
</tbody>
</table>
<p>順番に説明していきます。</p>
<h2 id="3-1-AllJoyn"><a href="#3-1-AllJoyn" class="headerlink" title="3-1. AllJoyn"></a>3-1. <a href="https://allseenalliance.org/framework" target="_blank" rel="external">AllJoyn</a></h2><p><img src="/images/20161206/photo_20161206_10.jpg" class="img-reset-size"></p>
<p>旧AllSeen Allianceが推進している、IoT Frameworkです。<br>既に、本規格に準拠した家電が複数の有名家電メーカーから販売されています。<br>今後、旧OICが推進しているIoTivityへ徐々に統合されていくものと思われます。</p>
<h2 id="3-2-IoTivity"><a href="#3-2-IoTivity" class="headerlink" title="3-2. IoTivity"></a>3-2. <a href="https://www.iotivity.org/" target="_blank" rel="external">IoTivity</a></h2><p><img src="/images/20161206/photo_20161206_11.png" class="img-reset-size"></p>
<p>旧OICが推進している、IoT Frameworkです。<br>今後、旧AllSeen Allianceが推進しているAllJoynを徐々に統合していくものと思われます。</p>
<h2 id="3-3-Eclipse-IoT"><a href="#3-3-Eclipse-IoT" class="headerlink" title="3-3. Eclipse IoT"></a>3-3. <a href="https://iot.eclipse.org/" target="_blank" rel="external">Eclipse IoT</a></h2><p><img src="/images/20161206/photo_20161206_12.png" class="img-reset-size"></p>
<p>IDEで有名なEclipseですが、IoTに関するプロジェクトについても多数擁しており、現在、26ものIoT関連プロジェクトがあります。<br>比較的、有名なものとしては、MQTT/MQTT-SNクライアントの「<a href="https://eclipse.org/paho/" target="_blank" rel="external">Paho</a>」、MQTTブローカーの「<a href="https://projects.eclipse.org/projects/technology.mosquitto" target="_blank" rel="external">mosquitto</a>」、oneM2M実装の「<a href="https://eclipse.org/om2m/" target="_blank" rel="external">OM2M</a>」、IoTゲートウェイの「<a href="https://eclipse.org/kura/" target="_blank" rel="external">kura</a>」などがあります。<br>Eclipse IoT内でIoTプラットフォームに必要な要素技術をほぼ網羅しています。<br>詳細については、次のホワイトペーパーを参照してみてください。</p>
<p>参考：<a href="https://iot.eclipse.org/resources/white-papers/Eclipse%20IoT%20White%20Paper%20-%20The%20Three%20Software%20Stacks%20Required%20for%20IoT%20Architectures.pdf" target="_blank" rel="external">White Paper: The Three Software Stacks Required for IoT Architectures</a></p>
<h2 id="3-4-SensorBee"><a href="#3-4-SensorBee" class="headerlink" title="3-4. SensorBee"></a>3-4. <a href="http://sensorbee.io/" target="_blank" rel="external">SensorBee</a></h2><p><img src="/images/20161206/photo_20161206_13.png" class="img-reset-size"></p>
<p>Prefered Networks社が開発した、IoT向けの軽量なストリーム処理エンジンです。<br>Go言語で書かれています。</p>
<p>参考：<a href="http://qiita.com/rkyymmt@github/items/4fb2002b167c88c85d55" target="_blank" rel="external">SensorBeeとは何か？</a></p>
<h1 id="4-まとめ"><a href="#4-まとめ" class="headerlink" title="4. まとめ"></a>4. まとめ</h1><p>今回紹介した団体でいうと、コンシューマー系IoTについてはOCF、エンタープライズ系IoTについてはIIC、国内では、IoT全般についてはITAC、製造・機械系IoTについてはRRIなど得意とする領域が微妙に異なります。<br>そのため、フォーカスしたい内容によってウォッチする団体を選択することが重要となります。<br>また、2016年11月にはファーウェイなど中国を中心とした<a href="http://www.huawei.com/en/news/2016/11/Edge-Computing-Consortium-Established" target="_blank" rel="external">Edge Computing Consortium (ECC)</a>という団体が設立されるなど、新しい動きにも注目していきたいところです。<br>OCFへ集約されていく流れなどは、10数年前のモバイル業界で言うところのOMA設立のような状況が、ちょうど今、IoT業界で起きているような状況となっています。<br>紹介したOSSでは、コンシューマー系のIoTについてはIoTivityに収斂していき、より包括的なプラットフォームとしては、Eclipse IoTも存在感を出していくものと思われます。SensorBeeもIoTにフォーカスしたストリーミング処理エンジンとして今後の動向に要注目です。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-はじめに&quot;&gt;&lt;a href=&quot;#1-はじめに&quot; class=&quot;headerlink&quot; title=&quot;1. はじめに&quot;&gt;&lt;/a&gt;1. はじめに&lt;/h1&gt;&lt;p&gt;「IoT」は、昨今、聞かない日はないくらい、バズワード化した単語になりました。&lt;br&gt;同時に、様々な国や
    
    </summary>
    
      <category term="IoT" scheme="https://future-architect.github.io/categories/IoT/"/>
    
    
      <category term="IoT" scheme="https://future-architect.github.io/tags/IoT/"/>
    
  </entry>
  
  <entry>
    <title>ビッグデータ対談でニコ生登壇しました</title>
    <link href="https://future-architect.github.io/articles/20161109/"/>
    <id>https://future-architect.github.io/articles/20161109/</id>
    <published>2016-11-09T05:14:24.000Z</published>
    <updated>2017-05-09T01:57:18.378Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/20161109/photo_20161109_01.png"></p>
<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a><strong>背景</strong></h1><ul>
<li>2016/11/02(水)に開催された<a href="http://live.nicovideo.jp/watch/lv279990477" target="_blank" rel="external">アカリクTechTalk（vol.4：ビッグデータ）</a>に弊社のインフラエンジニア<a href="http://qiita.com/keigodasu" target="_blank" rel="external">@keigosuda</a> が出演致しました</li>
<li>内容が<a href="https://plaid.co.jp/" target="_blank" rel="external">株式会社プレイド</a>さんのデータサイエンティストと対談するという、面白い取り組みだったのでこの場をお借りしてご報告致します</li>
</ul>
<p><br></p>
<p><strong>アカリクTechTalkとは…？</strong></p>
<blockquote>
<p>週毎に様々な技術トピックや業界、職種についてテーマを設定し、現場で働いているエンジニアさんから「実際のところ」をトークセッション形式で聞けるイベントとなります。</p>
</blockquote>
<p><br></p>
<p><strong>「vol4：ビックデータ」のテーマについて</strong></p>
<blockquote>
<p>ビッグデータとはなんでしょう？<br>バズワード化して数年が経ちますが、ビッグデータを漠然と「大量のデータ」だけを指すと思っている人も多いのではないでしょうか。<br>ビッグデータは単純なデータ量だけでなく、データの種類の多様性や、データの変化する頻度の高さ（リアルタイム性）もその特性の1つです。<br>時にはデータを扱う技術そのものや、データサイエンティストといった専門職、専門組織なども含む広義な言葉として使われることもあります。<br>そんな、「なんとなくすごい感じのするビッグデータ」について企業がどのように活用しているかを聞いてみませんか？</p>
</blockquote>
<p>詳細は<a href="https://acaric.jp/special/event/2016-acaric-techtalk" target="_blank" rel="external">こちら</a>を参照下さい。</p>
<p><br></p>
<p>多くの学生さんにとって、普段中々話す機会が無いであろう社会人エンジニアの方とカジュアルに話せることが醍醐味なイベントのようです。<br>とはいえ、個人的には何と言っても<strong>ニコ生放送</strong>されることが最大のウリだと思っています。</p>
<ul>
<li><strong>対談がリアルタイムにニコ生放映されること！</strong></li>
<li><strong>当然ながら日本中（世界中）からコメントで即時にフィードバックされること</strong></li>
</ul>
<p>…は通常の就活イベントではまず無いので、非常に貴重な経験でした。</p>
<p>まさか同僚が業務時間中にニコ生放送している風景を見ることが出来るとは…、世の中何があるかわかりませんね。<br>ちなみに、画像では凄く楽しそうですが実は相当緊張していたとのことです。</p>
<p><img src="/images/20161109/photo_20161109_02.png"></p>
<h1 id="登壇結果"><a href="#登壇結果" class="headerlink" title="登壇結果"></a><strong>登壇結果</strong></h1><ul>
<li><p>結果的には大好評だったようで、普段より多くの視聴者の方に見て頂け、コメントも多かったそうです！</p>
<ul>
<li>「アルゴリズムの気持ちww」や「データの気持ちになるwww」など、コメントの雰囲気で察することしか出来ませんが、<a href="http://qiita.com/keigodasu" target="_blank" rel="external">@keigosuda</a>氏のトーク力が高かったことは間違い無いと思います。笑</li>
</ul>
</li>
<li><p>終わった後に、対談者であったプレイド社の方々と、会場に来ていただいた学生さんともお話しました。</p>
<ul>
<li>ピザをつまみながら、全力で質問に答えることが出来たのでお互いにとっても有益な時間が過ごせたのではないかと思っています</li>
</ul>
</li>
</ul>
<h1 id="質問回答"><a href="#質問回答" class="headerlink" title="質問回答"></a><strong>質問回答</strong></h1><p><img src="/images/20161109/photo_20161109_03.jpeg"></p>
<p>さて、ニコ生ということで、対談中にいくつか質問コメントを頂きましたが全てにお答えすることは出来ませんでした。<br>登壇者の<a href="http://qiita.com/keigodasu" target="_blank" rel="external">@keigosuda</a>にお願いして、いくつかの質問に回答して頂きました。<br>少しでも学生の皆さまのお役に立てればと思います。</p>
<table>
<thead>
<tr>
<th>#</th>
<th>質問事項</th>
<th>回答</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>仕事のやりがいとビッグデータに関わる楽しさは？</td>
<td>ことビッグデータを扱う仕事の楽しさ・やりがいは、まさしくそういった巨大なデータをどう扱うかを考え、実装することです。<br>何も考えず「動く」インフラ・プログラムを作るだけではそういったデータを捌き切ることは出来ません。<br>どう処理を分割・統合するか、どう処理をオフロードさせるかなどあらゆるシステム的な観点で考えることが求められます。そのため自ずと様々なことを勉強しなくてはいけなくなるし、その分広範囲な技術要素が身に着けていけるところも魅力です。</td>
</tr>
<tr>
<td>2</td>
<td>新卒で入社して研究や開発に携われるのか</td>
<td>はい、携われます。私はもともと文卒で情報系は未経験で入社していますが、現在は研究開発の部門で、新しい技術要素を実務に導入していく仕事をしています。</td>
</tr>
<tr>
<td>3</td>
<td>開発部門と運営部門(要件定義・設計)は同じ？分けられてる？</td>
<td>別れていないです。顧客との要件定義から、設計、実装、運用までを同じエンジニアが行います。</td>
</tr>
<tr>
<td>4</td>
<td>ビックデータに携わる仕事に就くひとに求められる素養は何ですか？どんな学生に面接に来てほしいですか？</td>
<td>技術面でいうと様々な技術要素への興味関心が持てる人が強いと思います。<br>なので経験者である必要は全くないと思います。</td>
</tr>
<tr>
<td>5</td>
<td>仕事中に音楽ききながらソースコードかいてる人が居たら怒る？</td>
<td>他の会社は知りませんが、仕事をちゃんとやっていれば怒られません笑<br>私はヘッドホン着用している時間の方がはるかに長いです。</td>
</tr>
</tbody>
</table>
<h1 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a><strong>最後に</strong></h1><ul>
<li>弊社ではアカリクTechTalkのような、<strong>オープン</strong>で<strong>スピード感</strong>があり、<strong>楽しそう</strong>なイベントにドンドン参加し、学生の皆さまに有用だと感じて頂けるような情報を発信していきたいと考えています！</li>
<li>次回はビックデータに限らず別のテーマでも発信出来ればと考えていますので、ぜひウォッチして頂ければと思います！</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/20161109/photo_20161109_01.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/h
    
    </summary>
    
      <category term="BigData" scheme="https://future-architect.github.io/categories/BigData/"/>
    
    
      <category term="Conference" scheme="https://future-architect.github.io/tags/Conference/"/>
    
  </entry>
  
</feed>
