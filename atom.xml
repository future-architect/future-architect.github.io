<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tech Blog - Future Architect</title>
  <subtitle>Future Architect</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://future-architect.github.io/"/>
  <updated>2017-03-16T13:22:40.000Z</updated>
  <id>https://future-architect.github.io/</id>
  
  <author>
    <name>Future Architect Consultant</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>世論調査の内閣支持率を統計学的に解釈すると…?</title>
    <link href="https://future-architect.github.io/articles/20170314/"/>
    <id>https://future-architect.github.io/articles/20170314/</id>
    <published>2017-03-14T05:00:00.000Z</published>
    <updated>2017-03-16T13:22:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。データ分析チームの米谷悠です。</p>
<p>フューチャーアーキテクトのデータ分析チームは各プロジェクトと連携しながら、いま流行りのDeepLearning等を使った画像処理・自然言語処理や、従来からある多変量解析や機械学習の方法を使った社会科学・経済・マーケティング・経営組織等に関するデータの分析を行っています。こうしたデータサイエンス領域における基礎の一つとして統計学があることはみなさんもご存知かと思います。本Blogでは日常のニュースで報道される数字を統計学的に説明することによって、統計学の基本的な考え方に触れていきたいと思います。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。</p>
<h2 id="内閣支持率を統計学を使ってより厳密に説明"><a href="#内閣支持率を統計学を使ってより厳密に説明" class="headerlink" title="内閣支持率を統計学を使ってより厳密に説明"></a>内閣支持率を統計学を使ってより厳密に説明</h2><p><img src="/images/photo_201670310_01.jpeg"></p>
<p>みなさんも「世論調査」や「内閣支持率」という言葉をニュース等で耳にすると思います。よく知られている世論調査は新聞各社等を中心に行われ、内閣支持率はその調査項目の一つです。</p>
<p>つい先日も日本経済新聞とテレビ東京が世論調査を行い、2017年2月27日（月）の同新聞朝刊の記事には</p>
<blockquote>
<p>内閣支持率は1月の前回調査と比べて～（中略）～60%だが、引き続き高い水準を保つ。</p>
</blockquote>
<p>とありました。さらに</p>
<blockquote>
<p>調査は日経リサーチが24～26日に全国の18歳以上の男女に携帯電話も含めて乱数番号（RDD方式）による電話で実施。1001件の回答を得た。回答率は47.4%。</p>
</blockquote>
<p>とありました。</p>
<p>今回は、統計学の基礎知識を使って、この内閣支持率のより厳密な説明を試みます。具体的に、<strong>この世論調査の結果はある条件のもとで「全国の有権者全員に調査したらわかるはずの内閣支持率が60%であると推定された。また、当該内閣支持率が、推定された60%の前後3%ポイント（57%～63%）の間に存在する確率が95%で、存在しない確率は5%である」</strong> と言うことも可能となります。</p>
<p>「内閣支持率は60%ではないの？」と思われた方もおられるかもしれません。上記のように言える理由を以下でご説明します。</p>
<h2 id="「世論調査で本当に知りたかったこと」と統計調査"><a href="#「世論調査で本当に知りたかったこと」と統計調査" class="headerlink" title="「世論調査で本当に知りたかったこと」と統計調査"></a>「世論調査で本当に知りたかったこと」と統計調査</h2><p>そもそも世論調査で本当に知りたかったことは何でしょうか？それは新聞記事では明示されていませんが、「もし全国の有権者全員に調査することができたとすると、わかるはずの内閣支持率」です<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>。これは国政等においてとても重要な値です。</p>
<p>では、なぜ全国の有権者全員に調査しないのでしょうか？それはコストの問題から非現実的であることは明らかです。これに対して、全国の有権者の一部であれば今回の世論調査のように調査することが可能です。</p>
<p>統計学では、全国の有権者全員を <strong>母集団</strong>、実際に電話が掛かってきた有権者を <strong>標本</strong> と言います。そして、本Blogでは「もし全国の有権者全員に調査することができたらわかるはずの内閣支持率」を <strong>母支持率</strong>、実際に電話が掛ってきた有権者への調査でわかった内閣支持率60%を <strong>標本支持率</strong> と呼ぶことにします。</p>
<p><img src="/images/photo_201670310_02.png"></p>
<p>次に、標本は今回の世論調査と同じように選ばれる必要があります。つまり、まず標本は母集団から選ばれなければいけません。有権者でない方に調査を行うよりも、有権者に調査を行った方が、より適切な結果が得られることはおわかりいただけると思います。</p>
<p>また、標本は母集団からランダムに（今回の世論調査では乱数番号（RDD方式）を使って）選ばれる必要があります。仮に、全国の有権者全体において内閣を支持する有権者と支持しない有権者が半々（つまり母支持率50%）だったとして、意図的に内閣を支持する有権者だけを標本として調査を行うと、標本支持率は100%となり、調査対象と結果に偏りがあることから、母集団の状況をより正確に表すことができていません。</p>
<h2 id="「同じ調査を何度も繰り返すことができた状況」を想定することが基本的なアイデア"><a href="#「同じ調査を何度も繰り返すことができた状況」を想定することが基本的なアイデア" class="headerlink" title="「同じ調査を何度も繰り返すことができた状況」を想定することが基本的なアイデア"></a>「同じ調査を何度も繰り返すことができた状況」を想定することが基本的なアイデア</h2><p>以上のようにして得られた標本支持率60%は、本当に知りたかった母支持率と一致しているのでしょうか？必ずしも一致するとは限りません。例えば、母支持率が60%のときに、ランダムに1,001人の標本を抽出したところ、偶然にも全員が内閣支持者（標本支持率100%）となることは、\(0.6^{1001}\)という僅かな確率ですが起こりえます。</p>
<p>では、標本支持率と母支持率の関係はどうなっているのでしょうか？実は、母集団から標本をランダムに選んでいたことで、標本支持率60%はある性質を持ちます。以下ではこのことをご説明して、世論調査の内閣支持率を統計学を使ってより厳密にお伝えすることを試みます。</p>
<p>まず、今回と同じ世論調査を、同じ条件で何度も繰り返すことができたとしましょう。つまり、同じ時点で同じ母集団からランダムに標本を選んで標本支持率を計算するというプロセスを何度も繰り返すことができたとします。標本は毎回ランダムに選ばれているので、標本も標本支持率も毎回異なるはずです。</p>
<p>そして、各回で得られる標本支持率を集めて、そのヒストグラム(ある集団の個々の数値の分布を視覚化するグラフ)を書くことができたとしたら、それは母支持率を中心とする正規分布に近似できることが統計学の理論上知られています（中心極限定理）。つまり、調査回数分だけある標本支持率は、その多くが母支持率の近傍にある一方、母支持率から遠く離れた値も僅かな確率で取りうるということです。</p>
<p><img src="/images/photo_201670310_03.png"></p>
<p>そして、実際に行われた今回の1回の世論調査で得られた標本支持率60%は、近似した正規分布の相対頻度にしたがって、母支持率の周辺のどこか一つの値を取っていると考えられるようになります。</p>
<h2 id="「世論調査で本当に知りたかった内閣支持率」と「調査結果の内閣支持率60-」の関係"><a href="#「世論調査で本当に知りたかった内閣支持率」と「調査結果の内閣支持率60-」の関係" class="headerlink" title="「世論調査で本当に知りたかった内閣支持率」と「調査結果の内閣支持率60%」の関係"></a>「世論調査で本当に知りたかった内閣支持率」と「調査結果の内閣支持率60%」の関係</h2><p>では、実際に行われた今回の1回の世論調査で得られた1つの標本支持率と母支持率の具体的な関係はどうなっているのでしょうか？</p>
<p>まず、近似できる正規分布の散らばり具合を表す標準偏差を、今回の1回の世論調査の標本データ（標本支持率は「支持する」を1、「支持しない」を0）から推定することができます。そして、その標準偏差の推定値と正規分布の理論式を組合せることで、何度も同じ調査を繰り返すことができたら得られる調査回数分の標本支持率の95%分が、母支持率の前後〇〇%の間で発生しうるということを（例えば100万回調査を行ったら95万回分の標本支持率が発生しうる区間を）具体的に推定することができます。このことは、反対に5%分（5万回分の標本支持率）が母支持率の前後〇〇%より外の値と推定できることも意味します<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>。</p>
<p>このことから、今回の1回の世論調査で得られた標本支持率60%は、95%の確率で母支持率の前後〇〇%の間にあると推定されると言えることになり、それは反対に標本支持率60%の前後〇〇%の間に母支持率がある確率が95%と推定されると言えることにもなります。</p>
<p>同様に標本支持率60%の前後〇〇%の間に母支持率がない確率が5%と推定されるとも言えます。つまり、世論調査の内閣支持率60%が、もし全国の有権者全員に調査したらわかるはずの本当に知りたい母支持率から大きく外れている可能性も僅かながらありうるということです。</p>
<h2 id="より厳密な説明例"><a href="#より厳密な説明例" class="headerlink" title="より厳密な説明例"></a>より厳密な説明例</h2><p>もし仮に今回の世論調査が、前述の条件に加えて次の2つの条件のもとでも行われているとすれば、母支持率の周辺の95%分の標本支持率が発生する区間は、母支持率の前後3%<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>と推定されます。</p>
<ol>
<li>全国の有権者全員を何らかの属性で分けた上で、各属性内でランダムに標本を選んでいるのではなく、全国の有権者全員を一つの層としている。</li>
<li>回答率が47.7%ではなく100%である、もしくは回答と非回答がランダムに発生している<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>。</li>
</ol>
<p>以上の条件のもとでは、冒頭に書いたように「国の有権者全員に調査したらわかるはずの内閣支持率が60%であると推定された。また、当該内閣支持率が、推定された60%の前後3%（57%～63%）の間に存在する確率が95%で、存在しない確率は5%である」と言うことができます。</p>
<h2 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a>最後に</h2><p>今回は世論調査で調べられている内閣支持率を、統計学の基本的な知識を用いて、より厳密にお伝えすることを試みました。いかがだったでしょうか？</p>
<p>公表されている内閣支持率が、全国の有権者全員に調査したらわかるはずの内閣支持率とは必ずしも一致せず、僅かな確率ではありますが、大外れしている可能性もあるということは、聞いてみれば当たり前かもしれませんが、少し驚かれた方もおられるのではないでしょうか？</p>
<p>フューチャーアーキテクトは、ITの分野において原理原則を重視するマインドが非常に強いですが、それはデータ分析においても同じです。</p>
<p>データ分析、機械学習、AIといったデータサイエンス領域において基礎的要素の一つである統計学も疎かにせず業務の方を推進しておりますので、今後ともよろしくお願いします！！</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">厳密には古典的な頻度理論的な考え方にもとづく統計学です。頻度理論的な考え方にもとづく統計学のパラメータ（推定対象）推定では、手元のデータを収集した条件と同じ条件で、何度も繰り返しデータを収集することが可能であることを前提とします。これに対してベイズ統計学ではこういったことを前提としませんが、代わりにたった一つの値しかないはずのパラメータが分布していることを前提とします。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;"><a href="https://www.nikkei-r.co.jp/pollsurvey/method.html" target="_blank" rel="external">日経リサーチのウェブサイトにある調査方法</a>によると、電話を掛ける対象が「全国の有権者全員」の中の「固定電話加入世帯または携帯電話加入者」から決めていることから、本調査で本当に知りたかったことを厳密に言うと「もし固定電話加入世帯全体と携帯電話加入者全員に調査することができたらわかるはずの内閣支持率」となるでしょう。ただし「調査の対象：全国の有権者」ともなっており、実際に有権者全員の名簿を持っているとは言い難く、「固定電話加入世帯または携帯電話加入者」で「全国の有権者全員」を代替しようとしていると思われます。本Blogでも、本当に知りたかったことを「もし全国の有権者全員に調査することができたらわかるはずの内閣支持率」として話を進めます。また、新聞記事では「全国の18歳以上の男女」となっておりますが、これは「全国の有権者全員」の中の「固定電話加入世帯または携帯電話加入者」を簡単に言い換えているものと思われます。</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;">当該範囲は調査方法によって、当該範囲の推定値は回答結果によってそれぞれ変わります。また、ここでは95%を例としていますが、90%としたり99%としたりするなど、他の割合を使うことももちろん可能です。95%はよく使われる割合の一つです。</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline-block; vertical-align: top;">標本の回答をベルヌーイ分布として、その標準偏差の推定値を用いて求めることができます。 $$標準正規分布の両側95\%点 1.96 \times \sqrt{標本支持率 0.6 \times (1-標本支持率 0.6) / 標本数 1,001} \fallingdotseq 0.03$$</span><a href="#fnref:4" rev="footnote"> ↩</a></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">5.</span><span style="display: inline-block; vertical-align: top;">ここでの回答が100%ということは、1,001人に調査して全員が「支持する」か「支持しない」と回答したことと考えています。また、回答と非回答がランダムに発生していると想定することは厳密にはやや無理のある仮定と思われます。</span><a href="#fnref:5" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;こんにちは。データ分析チームの米谷悠です。&lt;/p&gt;
&lt;p&gt;フューチャーアーキテクトのデータ分析チームは各プロジェクトと連携しながら、いま流行りのDeepLearning等を使った画像処理・自然言語処理や、従来からある多変量解析や機械学習の方法を使った社会科学・経済・マーケテ
    
    </summary>
    
      <category term="データ分析" scheme="https://future-architect.github.io/categories/%E3%83%87%E3%83%BC%E3%82%BF%E5%88%86%E6%9E%90/"/>
    
    
      <category term="統計学" scheme="https://future-architect.github.io/tags/%E7%B5%B1%E8%A8%88%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>SQL開発者を幸せにする！？ Sublime Text 3でも使える uroboroSQL Formatter を公開しました</title>
    <link href="https://future-architect.github.io/articles/20170228/"/>
    <id>https://future-architect.github.io/articles/20170228/</id>
    <published>2017-02-28T03:00:00.000Z</published>
    <updated>2017-03-15T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>はじめまして、太田です。<br>今回、弊社謹製のSQLフォーマッター<a href="https://github.com/future-architect/uroboroSQL-formatter" target="_blank" rel="external"><strong>uroboroSQL formatter</strong></a>を公開しましたので、その紹介をさせていただきます。<br>また、<a href="https://future-architect.github.io/articles/20160902/">弊社、星が昨年投稿した記事</a>の中で<a href="https://future-architect.github.io/coding-standards/documents/forJava/Javaコーディング規約.html">Javaのコーディング規約</a>を公開しましたが、今回その第2弾として、<a href="https://future-architect.github.io/coding-standards/documents/forSQL/SQLコーディング規約（Oracle）.html">SQLのコーディング規約（Oracle限定）</a>も公開いたしましたので、こちらについても触れたいと思います。</p>
<p><a href="https://github.com/future-architect/uroboroSQL-formatter" target="_blank" rel="external"><br><img src="/images/photo_201670227_01.png" class="img-middle-size"><br></a></p>
<h1 id="作成経緯"><a href="#作成経緯" class="headerlink" title="作成経緯"></a>作成経緯</h1><p>みなさんはどのようなSQLフォーマッターを利用されていますか？　色々あって悩みますよね。<br>中には、「実はSQLフォーマッターを使っていない」とか、「SQLフォーマッターを使っていても最終的には手で修正する」という開発フローをとっているチームも少なからず存在するのでは無いでしょうか？<br>というか弊社の開発チームは主に上記の2つです（でした）。</p>
<p>理由を簡単に言ってしまえば、「コーディング規約に合わない」からです。<br>「カンマ」や「AND・OR」を、「前にする or 後ろにする」、「大文字にする or 小文字にする」などいろいろありますが、<br>一番困ったのは「コメントの扱い」です。自分調べですが、コメントが含まれると途端にフォーマットが崩れるフォーマッターが多い印象です。</p>
<p>コーディング規約としてコメントを書くことを強制しているというのもありますが、<br>弊社では<a href="http://doma.readthedocs.io/ja/stable/" target="_blank" rel="external">Doma2</a>のような2WaySQLテンプレートエンジンを利用していることもあり、<br>コメントがあることを前提にフォーマットしてほしいという要望がありました。</p>
<p>このため、弊社では<del>興味本位で</del>SQLフォーマッターを作成することになりました。</p>
<h1 id="uroboroSQL-formatter利用方法"><a href="#uroboroSQL-formatter利用方法" class="headerlink" title="uroboroSQL formatter利用方法"></a><strong>uroboroSQL formatter</strong>利用方法</h1><h2 id="SublimeTextプラグイン"><a href="#SublimeTextプラグイン" class="headerlink" title="SublimeTextプラグイン"></a>SublimeTextプラグイン</h2><p>SublimeText3のプラグインとして利用できます。</p>
<p><img src="/images/photo_201670227_02.png"></p>
<p>導入は、<br><code>Package Control</code>の<code>Install Package</code>から<br><strong>uroboroSQL Formatter</strong>を検索しInstallを行ってください。</p>
<p>メニューバー→<code>Edit</code>→<code>SQL Format</code>で利用できます。</p>
<p>設定は下記のgithubリポジトリのREADMEをご覧ください。  </p>
<p><a href="https://github.com/future-architect/Sublime-uroboroSQL-formatter" target="_blank" rel="external">Sublime-uroboroSQL-formatter</a><br><a href="https://github.com/future-architect/Sublime-uroboroSQL-formatter/blob/master/Readme.ja.md" target="_blank" rel="external">日本語Readme</a></p>
<h2 id="コマンドライン実行"><a href="#コマンドライン実行" class="headerlink" title="コマンドライン実行"></a>コマンドライン実行</h2><p>SQLファイルを指定してコマンドラインから実行できるツールも用意しています。<br>導入方法は下記のGitHubリポジトリのREADMEをご覧ください。  </p>
<p><a href="https://github.com/future-architect/uroboroSQL-formatter#exeファイルの実行" target="_blank" rel="external">uroboroSQL-formatter#exeファイルの実行</a><br><a href="https://github.com/future-architect/uroboroSQL-formatter/releases/latest" target="_blank" rel="external">Latest release</a></p>
<h1 id="uroboroSQL-formatter特徴"><a href="#uroboroSQL-formatter特徴" class="headerlink" title="uroboroSQL formatter特徴"></a><strong>uroboroSQL formatter</strong>特徴</h1><p>このSQLフォーマッターには以下のような特徴があります。</p>
<ul>
<li>Doma2とuroboroSQL(※)の2Way SQLに対応したフォーマット</li>
<li>AS句のインデント揃え</li>
<li>テーブル・カラム・条件式の行コメントのインデント揃え</li>
</ul>
<p>※<a href="https://github.com/future-architect/uroborosql" target="_blank" rel="external">uroboroSQL</a>は2月末ごろOSS公開予定のSQL実行エンジンです。<br>SublimeText3のプラグインをDoma2で利用される場合は下記のように設定してください。  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    "uf_comment_syntax": "doma2", // "uroboroSQL" or "doma2"</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="参考：SQLのフォーマット例"><a href="#参考：SQLのフォーマット例" class="headerlink" title="参考：SQLのフォーマット例"></a>参考：SQLのフォーマット例</h2><h3 id="1-プレーンなSELECT-SQLの例"><a href="#1-プレーンなSELECT-SQLの例" class="headerlink" title="1. プレーンなSELECT-SQLの例"></a>1. プレーンなSELECT-SQLの例</h3><ul>
<li><p>フォーマット前</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span></div><div class="line"> <span class="keyword">name</span> <span class="keyword">as</span> <span class="keyword">name</span><span class="comment">-- 都道府県名</span></div><div class="line">,prefectural_capital <span class="keyword">as</span> capital <span class="comment">-- 県庁所在地</span></div><div class="line"><span class="keyword">from</span></div><div class="line"> prefectures <span class="comment">-- 都道府県</span></div><div class="line"><span class="keyword">where</span></div><div class="line"> local_division_id = <span class="number">3</span> <span class="comment">-- 関東地方</span></div><div class="line"><span class="keyword">and</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%東%'</span> <span class="comment">-- 都道府県名に"東"を含む</span></div></pre></td></tr></table></figure>
</li>
<li><p><a href="http://www.oracle.com/technetwork/jp/developer-tools/sql-developer/downloads/index.html" target="_blank" rel="external">SQL Developer</a>によるフォーマット</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span> <span class="keyword">AS</span> <span class="keyword">name</span><span class="comment">-- 都道府県名</span></div><div class="line">  ,</div><div class="line">  prefectural_capital <span class="keyword">AS</span> capital <span class="comment">-- 県庁所在地</span></div><div class="line"><span class="keyword">FROM</span> prefectures                 <span class="comment">-- 都道府県</span></div><div class="line"><span class="keyword">WHERE</span> local_division_id = <span class="number">3</span>      <span class="comment">-- 関東地方</span></div><div class="line"><span class="keyword">AND</span> <span class="keyword">name</span> <span class="keyword">LIKE</span> <span class="string">'%東%'</span>              <span class="comment">-- 都道府県名に"東"を含む</span></div></pre></td></tr></table></figure>
</li>
<li><p><a href="http://a5m2.mmatsubara.com/" target="_blank" rel="external">A5:SQL Mk-2</a>によるフォーマット</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span></div><div class="line">  <span class="keyword">name</span> <span class="keyword">as</span> <span class="keyword">name</span>                                    <span class="comment">-- 都道府県名</span></div><div class="line">  , prefectural_capital <span class="keyword">as</span> capital                <span class="comment">-- 県庁所在地</span></div><div class="line"><span class="keyword">from</span></div><div class="line">  prefectures                                     <span class="comment">-- 都道府県</span></div><div class="line"><span class="keyword">where</span></div><div class="line">  local_division_id = <span class="number">3</span>                           <span class="comment">-- 関東地方</span></div><div class="line">  <span class="keyword">and</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%東%'</span>                            <span class="comment">-- 都道府県名に"東"を含む</span></div></pre></td></tr></table></figure>
</li>
<li><p><strong>uroboroSQL formatter</strong>によるフォーマット</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">NAME</span>                <span class="keyword">AS</span>  <span class="keyword">NAME</span>    <span class="comment">-- 都道府県名</span></div><div class="line">,   PREFECTURAL_CAPITAL <span class="keyword">AS</span>  CAPITAL <span class="comment">-- 県庁所在地</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    PREFECTURES <span class="comment">-- 都道府県</span></div><div class="line"><span class="keyword">WHERE</span></div><div class="line">    LOCAL_DIVISION_ID   =       <span class="number">3</span>       <span class="comment">-- 関東地方</span></div><div class="line"><span class="keyword">AND</span> <span class="keyword">NAME</span>                <span class="keyword">LIKE</span>    <span class="string">'%東%'</span> <span class="comment">-- 都道府県名に"東"を含む</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p><br></p>
<h3 id="2-Domaライクな2Way-SQLの例"><a href="#2-Domaライクな2Way-SQLの例" class="headerlink" title="2. Domaライクな2Way SQLの例"></a>2. Domaライクな2Way SQLの例</h3><ul>
<li><p>フォーマット前(SQLテンプレート)</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * </div><div class="line"><span class="keyword">from</span> emp</div><div class="line"><span class="keyword">where</span> emp_id = <span class="comment">/*empId*/</span><span class="number">123</span></div></pre></td></tr></table></figure>
</li>
<li><p><a href="http://www.oracle.com/technetwork/jp/developer-tools/sql-developer/downloads/index.html" target="_blank" rel="external">SQL Developer</a>によるフォーマット</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> emp_id = <span class="comment">/*empId*/</span></div><div class="line">  <span class="number">123</span></div></pre></td></tr></table></figure>
<p>  崩れます。<br>  （<a href="http://a5m2.mmatsubara.com/beta/" target="_blank" rel="external">beta版</a>のSQL整形機能で2WeySQLの対応がされ、崩れは起こらなくなりました。詳しくは<a href="#2017-3-6追記">追記</a>を参照ください）</p>
</li>
<li><p><a href="http://a5m2.mmatsubara.com/" target="_blank" rel="external">A5:SQL Mk-2</a>によるフォーマット</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span></div><div class="line">  * </div><div class="line"><span class="keyword">from</span></div><div class="line">  emp </div><div class="line"><span class="keyword">where</span></div><div class="line">  emp_id = <span class="comment">/*empId*/</span></div><div class="line">  <span class="number">123</span></div></pre></td></tr></table></figure>
<p>  崩れます。</p>
</li>
<li><p><strong>uroboroSQL formatter</strong>によるフォーマット</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    *</div><div class="line"><span class="keyword">FROM</span></div><div class="line">    EMP</div><div class="line"><span class="keyword">WHERE</span></div><div class="line">    EMP_ID  =   <span class="comment">/*empId*/</span><span class="number">123</span></div></pre></td></tr></table></figure>
<p>  崩れません！</p>
</li>
</ul>
<p>※<a href="http://www.oracle.com/technetwork/jp/developer-tools/sql-developer/downloads/index.html" target="_blank" rel="external">SQL Developer</a>も<a href="http://a5m2.mmatsubara.com/" target="_blank" rel="external">A5:SQL Mk-2</a>を機能不十分と言っているわけではありません。どちらも最高にクールで便利なツールです。どちらも大変お世話になっております。みなさんにとっても扱いやすく馴染みあるSQLフォーマット機能を持つツールかと思い、例として書かせていただいております。</p>
<h1 id="弊社SQLコーディング規約について"><a href="#弊社SQLコーディング規約について" class="headerlink" title="弊社SQLコーディング規約について"></a>弊社SQLコーディング規約について</h1><p>弊社には独自のSQLのコーディング規約が存在し、長年受け継がれメンテナンスを続けています。<br>今回、このSQLコーディング規約を公開させていただくことになりました。</p>
<p><a href="https://future-architect.github.io/coding-standards/documents/forSQL/SQLコーディング規約（Oracle）.html">SQLコーディング規約（Oracle）</a></p>
<p><strong>uroboroSQL formatter</strong>もこの規約に準拠するよう作成しています。</p>
<p>本記事で、少しだけ紹介したいと思います。</p>
<h2 id="論理名のコメント"><a href="#論理名のコメント" class="headerlink" title="論理名のコメント"></a>論理名のコメント</h2><p>テーブル及び、カラムには論理名（日本語）でコメントを書くという規約があります。<br>カラムやテーブル名書いた上にまた日本語で同じことコメントで書かせるのは無駄では？と思われるでしょうが必要なことであると考えます。</p>
<p>Oracleの識別子の名前は30バイト以内という制限があります。<br>（<a href="https://dev.mysql.com/doc/refman/5.6/ja/identifiers.html" target="_blank" rel="external">MySQLも64バイト以内</a>、<a href="http://www.postgresql.jp/document/9.5/html/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS" target="_blank" rel="external">PostgreSQLにもデフォルト63バイト以内</a>という制限があるようですね）</p>
<p>この制限の中で、膨大にある全てのテーブル名・カラム名で、確実に意味の伝わる識別子名を考えるのは至難の業です。<br>であれば、略語を考えるための規約を決めて運用するのが手っ取り早いです。（わたしは出会ったことはありませんがテーブル名をTBL001-TBL100のように連番定義していくなんて話も聞いたことがあります）  </p>
<p>仮にテーブル名を連番定義していく運用を行った場合には、コメントなしで作成されたSQLは読めたものではありません。もし新規参画した方であれば恐怖でしかないでしょう。<br>1テーブル参照のみのSQLであればテーブルのコメントを確認し、かろうじて解読することができるかもしれませんが、サブクエリが現れた場合はどうでしょうか。いっそ匙を投げたくなるのではないでしょうか。<br>このため可読性を考慮し、論理名をコメントで書いてもらう必要があると考えています。</p>
<h3 id="uroboroSQL-formatterの対応"><a href="#uroboroSQL-formatterの対応" class="headerlink" title="uroboroSQL formatterの対応"></a><strong>uroboroSQL formatter</strong>の対応</h3><p>uroboroSQL formatterはテーブル・カラム・条件式に書いた行コメントのインデントを揃えます。</p>
<ul>
<li><p>フォーマット前</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line"> <span class="keyword">ID</span> <span class="keyword">AS</span> DATA_ID <span class="comment">-- ID</span></div><div class="line">, CODE <span class="keyword">AS</span> DATA_CODE <span class="comment">-- コード</span></div><div class="line">, <span class="keyword">NAME</span> <span class="keyword">AS</span> DATA_NAME <span class="comment">-- 名称</span></div><div class="line">, VALUE1 <span class="keyword">AS</span> VAL1 <span class="comment">-- 値１</span></div><div class="line">, VALUE2 <span class="keyword">AS</span> VAL2 <span class="comment">-- 値２</span></div><div class="line">, VALUE3 <span class="keyword">AS</span> VAL3 <span class="comment">-- 値３</span></div><div class="line">, VALUE4 <span class="keyword">AS</span> VAL4 <span class="comment">-- 値４</span></div><div class="line">, VALUE5 <span class="keyword">AS</span> VAL5 <span class="comment">-- 値５</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line"> TABLE01</div></pre></td></tr></table></figure>
</li>
<li><p>フォーマット後</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">ID</span>      <span class="keyword">AS</span>  DATA_ID     <span class="comment">-- ID</span></div><div class="line">,   CODE    <span class="keyword">AS</span>  DATA_CODE   <span class="comment">-- コード</span></div><div class="line">,   <span class="keyword">NAME</span>    <span class="keyword">AS</span>  DATA_NAME   <span class="comment">-- 名称</span></div><div class="line">,   VALUE1  <span class="keyword">AS</span>  VAL1        <span class="comment">-- 値１</span></div><div class="line">,   VALUE2  <span class="keyword">AS</span>  VAL2        <span class="comment">-- 値２</span></div><div class="line">,   VALUE3  <span class="keyword">AS</span>  VAL3        <span class="comment">-- 値３</span></div><div class="line">,   VALUE4  <span class="keyword">AS</span>  VAL4        <span class="comment">-- 値４</span></div><div class="line">,   VALUE5  <span class="keyword">AS</span>  VAL5        <span class="comment">-- 値５</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    TABLE01</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="カンマ、AND・ORを前に配置"><a href="#カンマ、AND・ORを前に配置" class="headerlink" title="カンマ、AND・ORを前に配置"></a>カンマ、AND・ORを前に配置</h2><p>これに関しては賛否両論あると思います。個人的にはどちらでも構わないのですが、統一されていないことは悪でしょう。<br>なぜなら統一されていない場合には、リファクタリングでカラム順序や条件順序を入れ替えただけで苦しめられる可能性が高くなります。</p>
<p>今回”前”とした理由としては、リファクタリング等行う場合、後ろの方が入れ替えや追加が発生しやすいと考えるからです。</p>
<p>どういうことかと言いますと、SELECTを書く際、多くの場合、下記のようにKEYやメインの項目から記述すると考えています。下記の場合<code>ID</code>はリファクタリングや機能追加で動くことがほぼ無いので、カンマ配置の影響を受けません。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">ID</span>      <span class="comment">-- ID</span></div><div class="line">,   CODE    <span class="comment">-- コード</span></div><div class="line">,   <span class="keyword">NAME</span>    <span class="comment">-- 名称</span></div><div class="line">,   VALUE1  <span class="comment">-- 値１</span></div><div class="line">,   VALUE2  <span class="comment">-- 値２</span></div><div class="line">,   VALUE3  <span class="comment">-- 値３</span></div><div class="line">,   VALUE4  <span class="comment">-- 値４</span></div><div class="line"><span class="comment">--, VALUE5  -- 値５ ←追加が容易</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    HOGE</div></pre></td></tr></table></figure>
<p>後ろカンマの場合、<code>VALUE4</code>の次にカラムを追加しようとした際に<code>VALUE4</code>の行にカンマを追加しなければいけませんし、<code>VALUE4</code>自体の順序を変える場合もカンマを編集しなければいけません。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">ID</span>      , <span class="comment">-- ID</span></div><div class="line">    CODE    , <span class="comment">-- コード</span></div><div class="line">    <span class="keyword">NAME</span>    , <span class="comment">-- 名称</span></div><div class="line">    VALUE1  , <span class="comment">-- 値１</span></div><div class="line">    VALUE2  , <span class="comment">-- 値２</span></div><div class="line">    VALUE3  , <span class="comment">-- 値３</span></div><div class="line">    VALUE4    <span class="comment">-- 値４</span></div><div class="line"><span class="comment">--  VALUE5    -- 値５ ←追加したらVALUE4の後ろにカンマを書かないといけない</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    HOGE</div></pre></td></tr></table></figure>
<p>以上を考慮し、カンマの配置は”前”としています。</p>
<h3 id="カンマ位置はフォーマッターで編集するなら気にしなくていいのでは？"><a href="#カンマ位置はフォーマッターで編集するなら気にしなくていいのでは？" class="headerlink" title="カンマ位置はフォーマッターで編集するなら気にしなくていいのでは？"></a>カンマ位置はフォーマッターで編集するなら気にしなくていいのでは？</h3><p>その通りです。通常は。<br>しかし今回の規約ではカンマの前か後ろに”行コメント”が立ちはだかっているのです。</p>
<p>コメントがある場合、後カンマで、前カンマのフォーマットをしてしまうと、下記のようになってしまいます。</p>
<ul>
<li><p>フォーマット前</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">ID</span>      , <span class="comment">-- ID</span></div><div class="line">    CODE      <span class="comment">-- コード</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    HOGE</div></pre></td></tr></table></figure>
</li>
<li><p>フォーマット後（例）</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">  <span class="keyword">ID</span></div><div class="line">  ,            <span class="comment">-- ID</span></div><div class="line">  CODE         <span class="comment">-- コード</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">  HOGE</div></pre></td></tr></table></figure>
</li>
</ul>
<p>とても残念な結果になりますね。<br>というのはフリです、ごめんなさい。今回作成した<strong>uroboroSQL formatter</strong>はカンマ・コメント入れ替えにも対応しています。<br>気にする必要はありません！</p>
<ul>
<li><p>フォーマット後（<strong>uroboroSQL formatter</strong>）</p>
  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">ID</span>      <span class="comment">-- ID</span></div><div class="line">,   CODE    <span class="comment">-- コード</span></div><div class="line"><span class="keyword">FROM</span></div><div class="line">    HOGE</div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="今後"><a href="#今後" class="headerlink" title="今後"></a>今後</h1><h2 id="uroboroSQL-formatter"><a href="#uroboroSQL-formatter" class="headerlink" title="uroboroSQL formatter"></a><a href="https://github.com/future-architect/uroboroSQL-formatter" target="_blank" rel="external"><strong>uroboroSQL formatter</strong></a></h2><p>現在、uroboroSQL formatterは前カンマやTab幅4によるインデントが固定であり、メインの機能としてもまだまだ足りませんし、提供方法もSublimeText3のプラグインのみとなってしまいました。<br>オプション対応、Eclipseプラグインや、ブラウザでのフォーマット機能など追加したい機能や、改善したいことはたくさんあります。<br>今後もご期待ください。</p>
<h2 id="SQLコーディング規約"><a href="#SQLコーディング規約" class="headerlink" title="SQLコーディング規約"></a><a href="https://future-architect.github.io/coding-standards/documents/forSQL/SQLコーディング規約（Oracle）.html">SQLコーディング規約</a></h2><p>今回、SQLのコーディング規約の公開もOracle版だけとなってしまいましたが、PostgreSQL・MySQL対応版も作成中です。<br>これらも近いうちに公開したいと考えています。</p>
<p>また今回のコーディング規約も、どんどん改善していきたいと思っていますので、<br>是非ともPullRequestいただければと思います。お待ちしております。（Markdown書くだけです！）</p>
<hr>
<h1 id="追記"><a href="#追記" class="headerlink" title="追記"></a>追記</h1><h2 id="2017-3-6追記"><a href="#2017-3-6追記" class="headerlink" title="2017/3/6追記"></a>2017/3/6追記</h2><p>本記事の公開に<a href="http://a5m2.mmatsubara.com/" target="_blank" rel="external">A5:SQL Mk-2</a>の作者の方に反応いただきまして、<a href="http://a5m2.mmatsubara.com/beta/" target="_blank" rel="external">beta版</a>のSQL整形機能にて以下の対応が行われました。</p>
<ul>
<li>よくある 2Way-SQLツールのコメント対応</li>
<li>カンマやAND, OR の位置を式の前・後ろに移動するとき、行コメントとの位置関係を修正して整形</li>
</ul>
<p>2WaySQLでのフォーマット崩れの問題、および「カンマ」や「AND・OR」の前後位置と行コメントの整合性の問題は<br><a href="http://a5m2.mmatsubara.com/" target="_blank" rel="external">A5:SQL Mk-2</a>のSQL整形機能(2017/3/6現在beta版)でも解決することができます！<br>（しかもこちらはカンマ・AND・ORの前後配置の設定などいろいろできます。我々も頑張らないといけませんね）</p>
<p>本記事では<a href="http://a5m2.mmatsubara.com/" target="_blank" rel="external">A5:SQL Mk-2</a>の機能についてSQL整形についてのみしか触れていませんが、<br>DB接続機能など様々な機能が豊富にそろっていますので、もし利用されたことのない方は是非一度お試しください！</p>
<hr>
<p>参考<br><a href="http://hidekatsu-izuno.hatenablog.com/entry/2015/12/07/233618" target="_blank" rel="external">http://hidekatsu-izuno.hatenablog.com/entry/2015/12/07/233618</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h1&gt;&lt;p&gt;はじめまして、太田です。&lt;br&gt;今回、弊社謹製のSQLフォーマッター&lt;a href=&quot;https://github.com/
    
    </summary>
    
      <category term="SQL" scheme="https://future-architect.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="https://future-architect.github.io/tags/SQL/"/>
    
      <category term="uroboroSQL" scheme="https://future-architect.github.io/tags/uroboroSQL/"/>
    
  </entry>
  
  <entry>
    <title>第六回社内LT大会～コンサルタントはハイキックがお好き</title>
    <link href="https://future-architect.github.io/articles/20170216/"/>
    <id>https://future-architect.github.io/articles/20170216/</id>
    <published>2017-02-16T01:30:00.000Z</published>
    <updated>2017-03-15T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/photo_201670216_00.jpg"></p>
<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a><strong>はじめに</strong></h1><p>みなさま、こんにちは。第六回LT大会の幹事を務めました入社一年目の谷村です。<br>2016年11月18日（金）に開催された社内LT大会6についてご報告です。</p>
<blockquote>
<p>LTとは <strong>Lightning Talks</strong> の略で、持ち時間が5分程度のプレゼンテーションのことです。<br>短い時間で印象に残るということからLightning（稲妻、電光石火）という言葉が使われるようになったそうです。</p>
</blockquote>
<h1 id="開催の概要"><a href="#開催の概要" class="headerlink" title="開催の概要"></a><strong>開催の概要</strong></h1><p>LT大会は3つの目的で実施されています！</p>
<ul>
<li>PR/ブランディング</li>
<li>採用（新卒・キャリアの採用チームとも協力）</li>
<li>人材育成（技術力底上げ・プレゼンスキルの向上・社外カンファレンス登壇へのステップアップ）</li>
</ul>
<p>ありがたいことに、会社から予算を頂き公式的な社内行事として活動をさせていただいています。<br>会長からは「大いに盛り上げて下さい」と激励を頂いています！</p>
<p>今回は、社員の他に学生さんが <strong>15</strong>名、社外の社会人登壇者の方が <strong>1</strong>名 参加してくださいました。</p>
<p>なお、今回から発表時間厳守！ということで銅鑼をご用意しました。<br>発表時間をオーバーすると、ベルの代わりに銅鑼を響かせます。</p>
<p><img src="/images/photo_201670216_01.jpeg" class="img-small-size"></p>
<h1 id="発表の様子"><a href="#発表の様子" class="headerlink" title="発表の様子"></a><strong>発表の様子</strong></h1><p>前回の開催から期間が空いたからか、過去最大規模のLT大会となりました！<br>なんと、100名入る会場で立ち見が出ていました！</p>
<p><img src="/images/photo_201670216_02.jpeg"></p>
<p>初っ端から会場を沸かせたのは、二年目の若手、六反さん。<br>当社のメールがOutlookからGmailに移行した記念に、自己流のプラクティスを披露してくれました。</p>
<p><img src="/images/photo_201670216_03.jpeg"></p>
<p>ゲストスピーカーとして、株式会社エクスライズ チーフエンジニアの服部さんにご登壇いただきました。<br>服部さんは、iOSでブロックチェーンを扱うゴリゴリな技術ネタを発表。<br>真剣に聴講する人で会場は緊張感に包まれました。</p>
<p><img src="/images/photo_201670216_04.jpeg"></p>
<p>発表の合間にはMCの下山さんが会場の笑いを誘いました。</p>
<p><img src="/images/photo_201670216_05.jpeg"></p>
<p>中でも最大の盛り上がりを見せたのが、佐藤(藍)さんの「私のハイキックで刈られたい奴ちょっとこい(仮)」。<br>比喩でも何でも無く、文字通りの肉体言語的な意味です。<br>ロジカルにハイキックの重要性を説き、会場は爆笑の渦に包まれました。</p>
<p><img src="/images/photo_201670216_06.jpeg"></p>
<p>他にも、会場を煽ってみたり、<br><img src="/images/photo_201670216_07.jpeg"></p>
<p>5分のLTで50分話そうとしてみたり、</p>
<p><img src="/images/photo_201670216_08.jpeg"></p>
<p>多種多様な発表で、会場の熱気はおさまるところをしりません！</p>
<p>残念ながら、攻めすぎて公開不可な資料が多いですが、<br>公開していただいた資料は以下の通りです。</p>
<h1 id="資料"><a href="#資料" class="headerlink" title="資料"></a><strong>資料</strong></h1><table>
<thead>
<tr>
<th>時間</th>
<th>テーマ</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>Webアプリを使い倒そう！　Gmailオレオレベストプラクティス　～ハンズオンもあるよ～（六反さん）</td>
</tr>
<tr>
<td>2</td>
<td>ＡＩ(強化学習)でロボットに学習させてみた（秋元さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/nJ5Yt5bOhricmn" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/akmtt/ai-71681912" title="AI(強化学習)でロボットに学習させてみた" target="_blank">AI(強化学習)でロボットに学習させてみた</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/akmtt">akmtt</a></strong> </div></td>
</tr>
<tr>
<td>3</td>
<td>管理サーバなどもはや不要、今の時代はサーバレスでしょ!!（角田さん）</td>
</tr>
<tr>
<td>4</td>
<td>SparkCL（山本(力)さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/j4F86eQvFwx3ki" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/rkyymmt/spark-cl" title="Spark CL" target="_blank">Spark CL</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/rkyymmt">力世 山本</a></strong> </div></td>
</tr>
<tr>
<td>5</td>
<td>私のハイキックで刈られたい奴ちょっとこい(仮)（佐藤(藍)さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/xKlbznaKfjjLYI" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/aikosato2/20161119-lt-71707068" title="20161119 lt" target="_blank">20161119 lt</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/aikosato2">aiko sato</a></strong> </div></td>
</tr>
<tr>
<td>6</td>
<td>iOSアプリからブロックチェーンに触る（服部さん：スペシャルゲスト） <br><script async class="speakerdeck-embed" data-id="bcd9499c70eb4cb287e0c34681dc1286" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script></td>
</tr>
<tr>
<td>7</td>
<td>Explore dark side of BIgData（須田さん）</td>
</tr>
<tr>
<td>8</td>
<td>未来太郎と未来花子（李(銘)さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/qclTJ1voN1ATAc" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/mingli136/ss-71450069" title="未来太郎と未来花子" target="_blank">未来太郎と未来花子</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/mingli136">ming li</a></strong> </div></td>
</tr>
<tr>
<td>9</td>
<td>5分でわかるカンボジア（百津さん）</td>
</tr>
</tbody>
</table>
<h1 id="表彰-amp-贈呈"><a href="#表彰-amp-贈呈" class="headerlink" title="表彰&amp;贈呈"></a><strong>表彰&amp;贈呈</strong></h1><p>楽しい時間はあっという間。結果発表のお時間です。<br>今回は、1, 2位, ブービーに豪華景品、さらに登壇者全員に参加賞という大盤振る舞いです。<br>景品のテーマは「<strong>空飛ぶもの</strong>」です。</p>
<h2 id="第一位（佐藤-藍-さん）私のハイキックで刈られたい奴ちょっとこい-仮"><a href="#第一位（佐藤-藍-さん）私のハイキックで刈られたい奴ちょっとこい-仮" class="headerlink" title="第一位（佐藤(藍)さん）私のハイキックで刈られたい奴ちょっとこい(仮)"></a><strong>第一位（佐藤(藍)さん）私のハイキックで刈られたい奴ちょっとこい(仮)</strong></h2><p><img src="/images/photo_201670216_09.jpeg"></p>
<p><strong>全日本選手権優勝</strong>の経験を踏まえて話される、圧倒的な説得力に、会場は爆笑の渦に蹴落とされました。<br>ハイキックから始まり、パンチ、頭突き、膝蹴りと、実践的な人の倒し方を学ばせていただきました。<br>今度から姐御と呼ばせていただきます。</p>
<p>景品は、Parrot社のカメラ付きDroneです。<br>Droneと武術のつながりが思いつかないのですが、何か上手いこと使ってもらえればと思います。</p>
<h2 id="第二位（百津さん）5分でわかるカンボジア"><a href="#第二位（百津さん）5分でわかるカンボジア" class="headerlink" title="第二位（百津さん）5分でわかるカンボジア"></a><strong>第二位（百津さん）5分でわかるカンボジア</strong></h2><p><img src="/images/photo_201670216_10.jpeg"></p>
<p>カンボジアで暮らした経験を面白おかしく発表していただきました。<br>カンボジアの知識ゼロの状態でしたが、発表後に早速カンボジア旅行ガイドを購入してしまいました。笑</p>
<p>景品は、ミニDroneです。<br>百津さんのご厚意で、LT大会の後にみんなで会場に飛ばして遊びました。<br>Drone超楽しい！！(個人の感想です)</p>
<h2 id="第三位（李さん）未来太郎と未来花子"><a href="#第三位（李さん）未来太郎と未来花子" class="headerlink" title="第三位（李さん）未来太郎と未来花子"></a><strong>第三位（李さん）未来太郎と未来花子</strong></h2><p>なんと、研修中の新人が入賞です。<br>研修で使われるサンプルの顔画像が不満で、新人全員の平均顔を作成してみたそうです。<br>残念ながら、景品はありません。</p>
<h2 id="ブービー（角田さん）管理サーバなどもはや不要、今の時代はサーバレスでしょ"><a href="#ブービー（角田さん）管理サーバなどもはや不要、今の時代はサーバレスでしょ" class="headerlink" title="ブービー（角田さん）管理サーバなどもはや不要、今の時代はサーバレスでしょ!!"></a><strong>ブービー（角田さん）管理サーバなどもはや不要、今の時代はサーバレスでしょ!!</strong></h2><p><img src="/images/photo_201670216_11.jpeg"></p>
<p>Lambdaで全部やってしまうという、今時のイケてる仕様の発表でした。<br>内容が難しすぎたことが、票が伸び悩んだ原因かもしれません。</p>
<p>景品はミニミニDroneです。</p>
<h2 id="参加賞（登壇者の皆様）"><a href="#参加賞（登壇者の皆様）" class="headerlink" title="参加賞（登壇者の皆様）"></a><strong>参加賞（登壇者の皆様）</strong></h2><p><img src="/images/photo_201670216_12.jpeg"></p>
<p>LT大会を盛り上げていただいた登壇者の皆様に、<br>参加賞として竹とんぼを贈呈しました。</p>
<p>学生の皆様にもお土産としてお配りしたところ、<br>とても喜んでいただけたようです。</p>
<h2 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a><strong>最後に</strong></h2><p><img src="/images/photo_201670216_13.jpeg"></p>
<p>集合写真です。皆様お疲れ様でした！</p>
<h1 id="振り返り"><a href="#振り返り" class="headerlink" title="振り返り"></a><strong>振り返り</strong></h1><p>今回は過去最大規模のLT大会となりました。<br>だからこそ、きっちり振り返りをして次に繋げる必要があります。</p>
<ul>
<li><strong>Keep</strong><ul>
<li>発表内容のバランスがちょうどよかった(技術/非技術, 半々くらい)</li>
<li>銅鑼を導入し、発表時間を厳守するようにした</li>
<li>発表順は技術/非技術を交互にし、休憩前後に盛り上がりそうな人を配置した</li>
<li>LT大会後に学生と交流・会社説明をする場を設けることができた</li>
</ul>
</li>
<li><strong>Problem</strong><ul>
<li>休憩前等、発表時間の銅鑼が緩いとの意見があった</li>
</ul>
</li>
<li><strong>Try</strong><ul>
<li>本社ビル以外の拠点でプチLT大会を開催</li>
<li>料理を多めに用意したい</li>
<li>学生との二次会を予め設定しておく</li>
<li>テーマに関するお土産を用意する</li>
</ul>
</li>
</ul>
<h1 id="お知らせ"><a href="#お知らせ" class="headerlink" title="お知らせ"></a><strong>お知らせ</strong></h1><p>第七回LT大会も開催が決定しています。<br>さらに熱狂的なイベントにすべく、タスクフォースが取り組まれています。<br>乞うご期待！</p>
<ul>
<li>開催日時: 2017年2月24日(金)</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/photo_201670216_00.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;&lt;strong&gt;はじめに&lt;/strong&gt;&lt;/h
    
    </summary>
    
      <category term="社内制度" scheme="https://future-architect.github.io/categories/%E7%A4%BE%E5%86%85%E5%88%B6%E5%BA%A6/"/>
    
    
      <category term="社内イベント" scheme="https://future-architect.github.io/tags/%E7%A4%BE%E5%86%85%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/"/>
    
      <category term="slideshare" scheme="https://future-architect.github.io/tags/slideshare/"/>
    
  </entry>
  
  <entry>
    <title>会社に届いたHoloLensを使ってみた</title>
    <link href="https://future-architect.github.io/articles/20170210/"/>
    <id>https://future-architect.github.io/articles/20170210/</id>
    <published>2017-02-10T04:00:00.000Z</published>
    <updated>2017-03-15T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HoloLensとは…？"><a href="#HoloLensとは…？" class="headerlink" title="HoloLensとは…？"></a>HoloLensとは…？</h1><p><a href="https://www.microsoft.com/microsoft-hololens/ja-jp" target="_blank" rel="external">HoloLens</a>とはざっくり言いますと、</p>
<p><img src="/images/photo_201670210_01.png" class="img-small-size"></p>
<p>このイラストのようなことができる機械になります。</p>
<p>もう少し詳しく説明しますと…</p>
<ul>
<li>現実の空間にCGなどで作られたグラフィックを投影する事ができる、<strong>MR(複合現実: 拡張現実「AR」と仮想現実「VR」を融合させたような概念)</strong>を実現するためのマイクロソフト製のデバイスです</li>
<li>見た目はOculusのようなゴーグル型ですが、VRとは異なり現実世界にグラフィックを重ね合わせる必要があることから <strong>透過型のディスプレイ</strong> になっており、また <strong>各種センサやCPUやGPUが組み込まれたWindows 10が動作するPC</strong> でもあります</li>
<li>開発者向けの<a href="https://www.microsoft.com/microsoft-hololens/ja-jp/developers" target="_blank" rel="external">ドキュメントやSDK</a>が公開されているため、自由にHoloLensを利用したMRアプリケーションを作成することができます</li>
<li>ゲームだけではなく、上記イラストのような遠隔医療といった幅広い応用先が期待されることから注目を集めています</li>
</ul>
<h1 id="届きました"><a href="#届きました" class="headerlink" title="届きました"></a>届きました</h1><p>2017年1月18日から、日本国内でも販売が開始されたため、弊社にも早速２台届きました。</p>
<p><img src="/images/photo_201670210_02.jpeg"></p>
<p>薄くてちっちゃいマニュアルは、日英両言語対応、本体には技適マークも付いており、日本に対応した製品だと実感することができました。</p>
<p>しかし、中身は日本語向けに特別な対応がされたわけでもなく音声認識も基本英語なので、正しい英語の発音が出来ないとなかなかセットアップが進まないことになります。<br>また、Windows StoreにおいてあるHoloLens向けのアプリも今の所は英語ベースのものが多いので、リスニングも出来ないとゲームなども十分楽しむことはできません。</p>
<p>Microsoftのサイトには、</p>
<blockquote>
<p>「HoloLens Developer Edition および Commercial Suite は、消費者契約法第 2 条において消費者にあたらない開発者向けのみの販売となっています。商品とその関連サービスおよびサポートは英語のみでのご提供となっています」</p>
</blockquote>
<p>とありますので、まあ、仕方がないとは思いますが。</p>
<p><a href="http://www.irasutoya.com/2017/02/blog-post_342.html" target="_blank" rel="external">文頭のイラスト</a>の感じを真似するには、HoloLensで<a href="https://www.microsoft.com/en-us/store/p/holoheart/9nblggh4v0pz" target="_blank" rel="external">HoloHeart</a>をすると良いと思います。<br>このHoloHeartは3Dの心臓を拡大縮小回転させて眺めたりするものなのですが、「beat」と発音すると心臓が動き出して少々気持ちが悪いアプリです。</p>
<p><img src="/images/photo_201670210_03.jpeg"></p>
<h1 id="丸一日付けっぱなしにしてみた"><a href="#丸一日付けっぱなしにしてみた" class="headerlink" title="丸一日付けっぱなしにしてみた"></a>丸一日付けっぱなしにしてみた</h1><p>何事も体験しなければ始まらないだろうということで、業務をしながらですがオフィスにて丸一日付けっぱなしにしてみました。</p>
<h2 id="気がついたこと"><a href="#気がついたこと" class="headerlink" title="気がついたこと"></a>気がついたこと</h2><ul>
<li>VRと異なり全く酔わない<ul>
<li>現実の風景が見えるというMRの特性だからなのか、酔いは皆無です。オフィスにはVRよりもMRが相性がよいかもしれません</li>
</ul>
</li>
<li>HoloLensの専用収納ケースにしまい込むのが面倒<ul>
<li>専用収納ケースにしまうにはベルトを絞った状態にし直す必要があり面倒です。100均で売ってる発泡スチロールのマネキンの頭部みたいなものに置いておきたいと思っています</li>
</ul>
</li>
<li>寝ながらの利用が難しい<ul>
<li>寝たまま複数のウィンドウを開いて操作できると楽そうで良いなと思っていたのですが、後頭部に出っ張った部分があるので、それが枕などにぶつかり、頭を自由に動かせません</li>
<li>頭を動かせないということは、HoloLensではマウスを動かせないことと同義なので辛いです</li>
</ul>
</li>
<li>Windows10以外での開発が難しそう<ul>
<li>UnityはWindows版以外が存在しますが、HoloLens用の拡張部分はWindows版以外だと見つけられませんでした</li>
<li>私はMBP上のVirtualBoxに入れていたWindows10に、Unity最新版を入れてビルドを行いました<ul>
<li>Visual Studioでビルドせずに、UnityからHoloLensでプレビューする方法は、何故か今回実行することができませんでした（connectボタンが押せず）</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="よく聞かれたこと"><a href="#よく聞かれたこと" class="headerlink" title="よく聞かれたこと"></a>よく聞かれたこと</h2><ul>
<li>ずっと装着していたけど辛くなかった？<ul>
<li>頭の上を通る補助バンドを着けた場合は、HoloLensを装着しぱなっしでも耐えられますが、補助バンドがない場合は厳しいです。ただし、周りの人が違和感に耐えられなくなるので、装着者の周囲の慣れが必要です</li>
</ul>
</li>
<li>肝心の着け心地は？<ul>
<li>補助バンドの有無で大きく変わります。補助バンドありだと装着感は良いですが、無い場合は重さが辛いです</li>
</ul>
</li>
<li>ポインタ操作（視線の先に点として表示されるマウスカーソルのようなもの）って慣れるの？<ul>
<li>頭を動かす必要ある点はやや面倒ですが、数時間で慣れてきました。本当は視線のみで動くと嬉しかったのですが、現状のHoloLensの限られた視野を考えるとちょうどよいトレードオフかと思います</li>
</ul>
</li>
</ul>
<h1 id="次回予告"><a href="#次回予告" class="headerlink" title="次回予告"></a>次回予告</h1><ul>
<li>2つのHoloLensで同じ空間を共有するアプリケーションの仕組みと、その作り方を共有します</li>
<li>応用例のアイデア出しや実装を試していきたいことはもちろんとして、社内外にHoloLens(MR)体験をもっと布教していきたいと考えています</li>
<li>AR/VR/MRの研究開発は担当者を置いて重点的に進めていく予定です。お楽しみに！</li>
</ul>
<p><img src="/images/photo_201670210_04.jpeg"></p>
<p>※2つのHoloLensを使って同じ空間の同じグラフィックを共有している図です</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HoloLensとは…？&quot;&gt;&lt;a href=&quot;#HoloLensとは…？&quot; class=&quot;headerlink&quot; title=&quot;HoloLensとは…？&quot;&gt;&lt;/a&gt;HoloLensとは…？&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.microsoft
    
    </summary>
    
      <category term="VR" scheme="https://future-architect.github.io/categories/VR/"/>
    
    
      <category term="HoloLens" scheme="https://future-architect.github.io/tags/HoloLens/"/>
    
  </entry>
  
  <entry>
    <title>3Dプリンタを使ってサービス開発やってみた</title>
    <link href="https://future-architect.github.io/articles/20170127/"/>
    <id>https://future-architect.github.io/articles/20170127/</id>
    <published>2017-01-27T03:25:15.000Z</published>
    <updated>2017-03-15T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>Futureグループでは、「２Way戦略」と呼ばれるスローガンの元、今までのB2BだけでなくB2Cなど別の領域へ自らがサービスを提供し、ビジネスを広げていく事を目指した活動が盛んに行われています。</p>
<p>まだまだ、ローンチされたサービスは少ないのですが、その中の一つであるBluetoothのビーコンを使ったIoT系就活サービスの「縁採Quest」（<a href="http://www.entryquest.com/" target="_blank" rel="external">エントリクエスト公式サイト</a>, <a href="https://play.google.com/store/apps/details?id=jp.co.future.entryquest&amp;hl=ja" target="_blank" rel="external">Google Play</a>, <a href="https://itunes.apple.com/jp/app/yuan-caiquest/id1191383379?mt=8" target="_blank" rel="external">App Store</a> ）で、3Dプリンタを使ったモノづくりをしたので、その時の3Dプリンタに関する話をしたいと思います。</p>
<h1 id="「縁採Quest（エントリークエスト）」って？！"><a href="#「縁採Quest（エントリークエスト）」って？！" class="headerlink" title="「縁採Quest（エントリークエスト）」って？！"></a>「縁採Quest（エントリークエスト）」って？！</h1><p>縁採Questは、地方にいながらロールモデルとなる社会人を見つけて深く繋がっていく、ということを目指したサービスになります。<br>弊社は採用に非常に力を入れている会社なのですが「今の就活はおかしいのではないか？」という問題意識を複数の社員が持ったことがサービス誕生の背景です。</p>
<p>この「WEBページでクリックするだけの就活ってどうなのよ？！」という所に一石を投じるために、あえてローカルな場所に縛った就活を展開する事によって、今まで知らなかった働き方や、人との出会いに偶然を生み出して学生さんと会社を結ぼうとしています。</p>
<p>この中で「<strong>ローカルな場所に縛る</strong>」ために、Bluetoothのビーコンを飲食店、インキュベーション施設などに配置して、そこでしか得られない情報や結びを提供していこうとしています。</p>
<p>このBluetoothのビーコンの事を「縁採タグ」（エントリータグ）と呼んでいます。この縁採タグのケース製造に3Dプリンタを活用しました。</p>
<h1 id="3Dプリンタを使った縁採タグの作り方"><a href="#3Dプリンタを使った縁採タグの作り方" class="headerlink" title="3Dプリンタを使った縁採タグの作り方"></a>3Dプリンタを使った縁採タグの作り方</h1><p>今回は3Dプリンタに焦点を当てるので、中の電気回路の部分は省きますがそこにも様々なドラマがありました。</p>
<ul>
<li>国内の認証を通っているBluetoothの部品を集めるところ</li>
<li>基板を中国に発注したけれども、パターンが小さすぎて対応業者が少ないという話</li>
<li>ホットプレートリフローやるのは小さい部品は厳しいという課題を乗り切った話</li>
<li>クリーム半田はどこで調達しようか悩んだこと</li>
<li>etc.</li>
</ul>
<p>それぞれについて詳しくお話したいですが、それはまた別の機会に。</p>
<p>ということで、縁採タグの完成品はこれです。</p>
<p><img src="/images/photo_201670127_01.jpeg"><br>（この中に私たちの青春がギュウギュウに詰まってます。）</p>
<p>小さめのマウスぐらいのサイズで、白いところはポリカーボネートという丈夫な素材で作りました。黒いところは、PLAというトウモロコシなどから作られる環境に優しい材料です。2つの材料を同時に出力できる3Dプリンタを使って作っています。</p>
<p><img src="/images/photo_201670127_02.jpeg"><br>写真は材料が出てくるノズル周辺を写したもので、右側の茶色いノズルがこびりついた方がポリカーボネートを出力していたノズルで、左側の綺麗なノズルが文字の黒いところを出力していたノズルです。</p>
<p>けなげな3Dプリンタは0，4mmのノズルから材料を熱で溶かしながら0.2mmの高さで積み重ねていきました。<br>最終的な高さは20mm程度あるので、100層分積み重ねてできあがっています。</p>
<p>だいたい1タグ4時間ぐらいかけて印刷していました。全部でこの写真のモデルは30個ぐらい作成しています。（今はまだ改良版の制作に取りかかっているので、プリンタは大忙しです。）</p>
<h1 id="3Dプリントの難しかったところ"><a href="#3Dプリントの難しかったところ" class="headerlink" title="3Dプリントの難しかったところ"></a>3Dプリントの難しかったところ</h1><p>いろいろあったのですが、特に印象に残っている、こんなことに苦労したというのを4つ紹介します。</p>
<h2 id="1-ポリカーボネート"><a href="#1-ポリカーボネート" class="headerlink" title="(1) ポリカーボネート"></a>(1) ポリカーボネート</h2><p>本体のケースなので、ある程度耐久性を考慮してポリカーボネートという材料を今回選択しました。使ったのはポリメーカのPC-MAXというフィラメントです。たまたま別のモノづくりで買っていた材料があったのですが、Amazonで売り切れているときは他でも売り切れていることが多くて、海外から直接購入することもありました。今は国際物流がしっかりしているので、DHLとかフェデックスとかへ、ちゃんと送料支払えば2日ぐらいで手に入るので便利な世の中になってます。ポリメーカは中国から配送されるので、距離的にも近いので国際配送でも結構いい感じです。</p>
<p>材料は手に入ったとして、次に問題になるのは3Dプリンタです。<br>ポリカーボネートは、通常の3Dプリンタよりも高温にできるいわゆる「エンプラ」対応の3Dプリンタでないと印刷できません。</p>
<p><strong>エンプラ？！</strong></p>
<p>エンジニアリングプラスチックの略称です。100度以上の温度に耐えるとか、丈夫とかいろいろ優れているよっていうプラスチックを総称する言葉です。3Dプリンタでエンプラ対応というのは300度の温度で印刷が行える機種が必要です。今回は、Genkei社のLeptonを利用しました。高温対応バレルを装備させると、この3Dプリンタはエンプラ対応になります。おまけに、2射出機構も付けているので、文字と本体で色を変えて印刷することにもチャレンジしています。<br><img src="/images/photo_201670127_03.jpeg" class="img-small-size"></p>
<h2 id="2-文字を綺麗に出すために"><a href="#2-文字を綺麗に出すために" class="headerlink" title="(2) 文字を綺麗に出すために"></a>(2) 文字を綺麗に出すために</h2><p>文字の部分を綺麗に出すために、２点ほど工夫が入ってます。</p>
<h3 id="白の台座を用意"><a href="#白の台座を用意" class="headerlink" title="白の台座を用意"></a>白の台座を用意</h3><p>今回のパーツでは、文字の点が飛び飛びで存在するので、その点と点の間を移動するときに黒のノズルが白い本体をこすってしまい、黒い線が出てくることが分かりました。<br>黒い文字の印刷をする最中の移動時に1回1回Zホップさせてノズルを印刷済みの本体から引き離して印刷してみたのですが、印刷時間が増えるとともに文字の印刷品質が落ちてしまいました。（ひどい糸引きが発生する。文字の壁がでこぼこになるなど）<br>これは、ノズルを真横に移動させて拭き取る動作が行われないために、うまく材料が切れなくて発生していたようで、長いこと問題が解決できませんでした。<br>しかし、Zホップさせないと、白いケースの上面に黒い線が残ってしまい、それはそれで問題が残ってしまいます。</p>
<p>この問題は、白の材料で台座の出力までさせることでどうにか解決させました。<br><img src="/images/photo_201670127_04.jpeg" class="img-small-size"></p>
<p>この画像にあるように、上の明るい黄色の部分を黒い材料で出すのですが、その下に、白い材料で台座を印刷して広い平面と高さを変えるようにしました。これにより、黒のノズルが移動するときに白の平面をこすることがなくなったので、綺麗に印刷できるようになりました。</p>
<p>あちらを立てればこちらが立たずで、最後まで苦労したところです。</p>
<h2 id="3-黒の材料の選別"><a href="#3-黒の材料の選別" class="headerlink" title="(3) 黒の材料の選別"></a>(3) 黒の材料の選別</h2><p>文字を出力する、黒い材料ですが5種類ぐらい購入して印刷を試してみました。やはりメーカにより材料の特性が異なるので、一番良い材料に巡り会うまで大変でした。<br>柔らかくて糸引きが多い材料とか、表面は綺麗なんだけど切れが悪いとか、小さい文字を出すときは材料の特性が最終的な品質に与える影響が大きくなるので、選定は慎重さが必要です。<br><img src="/images/photo_201670127_05.jpeg"></p>
<h2 id="4-ヒートベッドが離れていく"><a href="#4-ヒートベッドが離れていく" class="headerlink" title="(4) ヒートベッドが離れていく"></a>(4) ヒートベッドが離れていく</h2><p>さあ、いざうまく一つ出せる用になったのですが、その後量産をするためにまとめて出そうとしたら、印刷途中でモータが脱調したりなにがしかの不具合が出て、途中でうまく印刷できなくなってしまいました。</p>
<p>成功するときもあって、何が起きて失敗しているのか問題を切り分けていったら、印刷時間がある閾値を超えると失敗する事が見えてきました。</p>
<p>なので、まとめて3個ケースを出しているときとかは簡単に失敗してしまい、1個ずつ出すという効率の悪い方法でしのいでいました。<br>その後、1個だしでも、連続して印刷をしていると失敗することが分かり、これはヒートベッドの温度が問題ではないかと当たりがついてきました。</p>
<p>というのも、今回ポリカーボネートを出すために、ヒートベッドを120度まで暖めていました。これは、BuildTakというシートを使わないでポリカーボネートを印刷するために編み出したコツで、120度＋ブリムでBuildTak無しでもどうにか印刷できています。一部浮き上がっているところもあるのですが、今回は許容範囲内なのでこれでガンガン印刷しています。</p>
<p>そのため、120度という少し高温にヒートベッドを加熱していてその加熱により金属膨張が下方向に働いてヒートベッドとノズルの隙間が空いてしまい、うまく印刷できない現象が発生していました。<br>これはFusion360という3D-CADソフトで熱解析も行って裏をとっています。<br><img src="/images/photo_201670127_06.jpeg"></p>
<p><img src="/images/photo_201670127_07.jpeg"></p>
<p>そこで、ヒートベッドの裏側にグラスウールの断熱材を貼り付けてみました。<br>貼り付けると嘘のように連続印刷が問題なく行えるようになりました。熱膨張、皆さんも甘く見ないように気をつけてください。</p>
<h1 id="結局、3Dプリンタを使って良かったと思う"><a href="#結局、3Dプリンタを使って良かったと思う" class="headerlink" title="結局、3Dプリンタを使って良かったと思う"></a>結局、3Dプリンタを使って良かったと思う</h1><p>なんだかんだ、問題もたくさん発生しましたがポリカーボネートを出すことに関してかなり自信がついてきました。材料自体は特性が良いので、ノズルで詰まると言うことも全く発生していませんし、印刷後の加工に関してもPLAよりも加工しやすいと感じています。<br><img src="/images/photo_201670127_08.jpeg"></p>
<h2 id="コスト＆修正サイクル"><a href="#コスト＆修正サイクル" class="headerlink" title="コスト＆修正サイクル"></a>コスト＆修正サイクル</h2><p>縁採タグは見た目こそ小さいですが、これがあるのと無いのではこの就活サービスを宣伝するときのインパクトが違うと言うことで、かなり良い営業ツールになっています。</p>
<p>はじめから金型作って、2つの樹脂を流し込んでとかやっていると、それだけで軽く100万円ぐらいかかります。<br>今回使った3Dプリンタは20万ほどで購入できるので、5分の１です。</p>
<p>さらに金型だと、デザイン変更をしたり内部の形を変えるたびに、この費用がかかってきます。また金型を作って製品ができあがるまでのリードタイムも2週間ぐらいかかったりするので、かなりヘビーです。</p>
<p>設計を変更したら、すぐに印刷、お昼から帰ってくるとできあがっているなんてことも、普通に出来るので高速に改良を加えられ本当にトライアンドエラーで進めていくスタートアップ向きです。</p>
<h1 id="そして、モノづくりは簡単になった"><a href="#そして、モノづくりは簡単になった" class="headerlink" title="そして、モノづくりは簡単になった"></a>そして、モノづくりは簡単になった</h1><p>金型ありきの製品開発でトライアンドエラーなんて時間もコストもかかったので今までは無理だったのがよくわかります。だからモノづくりはウォーターフォール型の開発が主流なんですよね。<br>しかし、そこに今回は3Dプリンタを使ったことで、モノづくりをアジャイル開発的に手軽・高速に行えるようになりました。<br>最終製品に関するこだわりとか、表面の綺麗さとか考えていくと、今までのモノづくりの方が良いという所も多いと思いますが、熱積層タイプの安価な3Dプリンタで最終製品を作るという事もアリだなと今回のサービス開発に関わってモノづくりをする中で感じました。</p>
<p>皆さんも、簡単になったモノづくりに是非チャレンジしてみてはいかがでしょうか。</p>
<p><img src="/images/photo_201670127_09.jpeg"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;Futureグループでは、「２Way戦略」と呼ばれるスローガンの元、今までのB2BだけでなくB2Cなど別の領域へ自らがサービスを提供し、ビジ
    
    </summary>
    
      <category term="モノづくり" scheme="https://future-architect.github.io/categories/%E3%83%A2%E3%83%8E%E3%81%A5%E3%81%8F%E3%82%8A/"/>
    
    
      <category term="3Dプリンタ" scheme="https://future-architect.github.io/tags/3D%E3%83%97%E3%83%AA%E3%83%B3%E3%82%BF/"/>
    
  </entry>
  
  <entry>
    <title>マネージャーがうれしいRedmineデータのEVM表示方法を公開します！！</title>
    <link href="https://future-architect.github.io/articles/20170119/"/>
    <id>https://future-architect.github.io/articles/20170119/</id>
    <published>2017-01-19T09:00:00.000Z</published>
    <updated>2017-03-15T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/photo_20160928_00.jpg" alt=""></p>
<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>こんにちは。近藤です。</p>
<p><a href="https://future-architect.github.io/articles/20160920/">前回</a>はRedmileのデータをKibanaで表示してみました。</p>
<p>今回はRedmineデータをEVMグラフとして表示します。</p>
<p>例えば、Kibana+Timelionを使うと、RedmineデータからEVMグラフを表示することができるのです。</p>
<p><strong>◆EVMグラフ例</strong></p>
<p><img src="/images/photo_20170119_40.png" alt=""></p>
<p>では早速、Kibana+Timelionを使ってみましょう。</p>
<p>なお、下記を前提としています。</p>
<ul>
<li>Windows環境で構築する。</li>
<li>Redmineのデータベース(MySQL)に直接接続する。</li>
</ul>
<h2 id="EVMとは？"><a href="#EVMとは？" class="headerlink" title="EVMとは？"></a>EVMとは？</h2><p><strong>EVM</strong>(Earned Value Management:アーンド・バリュー・マネジメント)はPMBOKでも説明されている有名なプロジェクト管理技法です。</p>
<p>今回は下記の値を計測します。</p>
<table>
<thead>
<tr>
<th>計測値</th>
<th>説明</th>
<th>略称</th>
</tr>
</thead>
<tbody>
<tr>
<td>Planned Value</td>
<td>計画価値</td>
<td>PV</td>
</tr>
<tr>
<td>Actual Cost</td>
<td>実コスト</td>
<td>AC</td>
</tr>
<tr>
<td>Earned Value</td>
<td>出来高</td>
<td>EV</td>
</tr>
</tbody>
</table>
<p>それぞれの計測値をITプロジェクトにおける数値に置き換えると、下記のように言えます。</p>
<ul>
<li>画面開発に必要な工数（Planned Value：<strong>PV</strong>）</li>
<li>メンバーが稼働した時間（Actual Cost：<strong>AC</strong>）</li>
<li>開発が完了した作業量（Earned Value：<strong>EV</strong>）</li>
</ul>
<p><img src="/images/photo_20170119_00.png" alt=""></p>
<p>これらの数値を別々に把握できると、下記が別々に管理できそうです。</p>
<ul>
<li>①.画面開発の進捗（EV ÷ PV）</li>
<li>②.メンバーの生産性（EV ÷ AC）</li>
</ul>
<p>①の値を<strong>SPI</strong>(Schedule Performance Index)、②の値を<strong>CPI</strong>(Cost Performance Index)と呼びます。</p>
<p>いずれも標準値が”1.00”。それを下回る場合は、課題があると考えられます。</p>
<h2 id="RedmineのデータをEVM表示するとどうなる？"><a href="#RedmineのデータをEVM表示するとどうなる？" class="headerlink" title="RedmineのデータをEVM表示するとどうなる？"></a>RedmineのデータをEVM表示するとどうなる？</h2><p>例えば、下記のような4件のチケットがRedmineに登録されているプロジェクトがあったとします。</p>
<p>チケット番号#4の進捗が50%の状況ですね。</p>
<p><img src="/images/photo_20170119_49.png" alt=""></p>
<p>この場合、<strong>PV</strong>の累計は”<strong>32h</strong>“、<strong>EV</strong>の累計は”<strong>28h</strong>“。PVに対して<strong>EV</strong>が”<strong>4h</strong>“足りていないことが分かります。</p>
<p>また、<strong>SPI</strong>は”<strong>0.875</strong>“。<strong>進捗</strong>が”<strong>0.125</strong>“つまり、<strong>12.5%</strong>遅延していることが分かります。</p>
<h2 id="作業時間を付記した場合のEVMの例"><a href="#作業時間を付記した場合のEVMの例" class="headerlink" title="作業時間を付記した場合のEVMの例"></a>作業時間を付記した場合のEVMの例</h2><p>今度は作業時間を付記してみました。</p>
<p><img src="/images/photo_20170119_50.png" alt=""></p>
<p>この場合、<strong>AC</strong>の累計は”<strong>28h</strong>“です。</p>
<p>また、<strong>CPI</strong>は”<strong>1.00</strong>“。つまり、生産性は標準であることがわかります。</p>
<p>つまり、遅延はしているが、メンバーの生産性は標準。<br>メンバーの作業時間を確保することで、進捗が向上する事が検討出来そうです。</p>
<p>EVMを使うことで多角的にプロジェクトを把握する事ができますね。</p>
<p>今回は、このEVMをグラフで表示します。</p>
<h2 id="大まかな流れ"><a href="#大まかな流れ" class="headerlink" title="大まかな流れ"></a>大まかな流れ</h2><p>下記の手順でグラフを表示します。</p>
<ol>
<li>環境構築</li>
<li>データ投入</li>
<li>EVM 表示 </li>
</ol>
<h2 id="1-環境構築"><a href="#1-環境構築" class="headerlink" title="1.環境構築"></a>1.環境構築</h2><p><strong>環境構成図</strong><br><img src="/images/photo_20160928_03.png" alt=""></p>
<p>今回もELK+Timelionを利用して、Redmineデータの可視化環境を構築します。</p>
<p>(a)ELKをダウンロード</p>
<ul>
<li><a href="https://www.elastic.co/jp/downloads/elasticsearch" target="_blank" rel="external">Elastic Search Download URL](https://www.elastic.co/jp/downloads/elasticsearch</a></li>
<li>→前回の構築時から最新版が出ているため（2017/1/19時点）私の場合は、「elasticsearch-5.1.2.zip」をダウンロードしました。</li>
</ul>
<p>(b) Kibanaをダウンロード</p>
<ul>
<li><a href="https://www.elastic.co/downloads/kibana" target="_blank" rel="external">Kibana Download URL](https://www.elastic.co/downloads/kibana</a><ul>
<li>→私の場合は、「kibana-5.1.2-windows-x86.zip」をダウンロードしました。</li>
</ul>
</li>
</ul>
<p>(c) Logstashをダウンロード</p>
<ul>
<li><a href="https://www.elastic.co/downloads/logstash" target="_blank" rel="external">Logstash Download URL](https://www.elastic.co/downloads/logstash</a><ul>
<li>→私の場合は、「logstash-5.1.2.zip」をダウンロードしました。</li>
</ul>
</li>
</ul>
<p>(d) 「c:\elastic」というフォルダを作成</p>
<p>(e) 先ほどダウンロードしたそれぞれの圧縮ファイルを解凍し、「c:\elastic」へ配置します。</p>
<p>最終的には下記のようなフォルダ構成になります。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">C:\elastic</div><div class="line">  └elasticsearch-5.1.2</div><div class="line">  └kibana-5.1.2-windows-x86</div><div class="line">  └logstash-5.1.2</div></pre></td></tr></table></figure>
<h2 id="2-RedmineデータをELKに取り込む"><a href="#2-RedmineデータをELKに取り込む" class="headerlink" title="2.RedmineデータをELKに取り込む"></a>2.RedmineデータをELKに取り込む</h2><p>次に、JDBCドライバを用意します。</p>
<p><a href="https://future-architect.github.io/articles/20160920/">前回</a>ダウンロードした「mysql-connector-java-5.1.39-bin.jar」というファイルを、<br>「C:\elastic\logstash-5.1.2\bin」以下に配置します。</p>
<p>次に、「redmine.txt」というファイルを作成。中身は下記のようにします。（★を含む箇所は皆様の環境に合わせた値へ変えて下さい。）</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line">    jdbc &#123;</div><div class="line">        jdbc_connection_string =&gt; "jdbc:mysql://★IP★:3306/★サービス名★"</div><div class="line">        jdbc_user =&gt; "★ユーザ名★"</div><div class="line">        jdbc_password =&gt; "★パスワード★"</div><div class="line">        jdbc_driver_library =&gt;"mysql-connector-java-5.1.39-bin.jar"</div><div class="line">        jdbc_driver_class =&gt; "com.mysql.jdbc.Driver"</div><div class="line">        statement =&gt; "</div><div class="line">select</div><div class="line">	iss.due_date due_date</div><div class="line">	, iss.updated_on updated_on</div><div class="line">	, iss.estimated_hours pv</div><div class="line">	, iss.estimated_hours * iss.done_ratio / 100 ev</div><div class="line">	, tim.hours ac</div><div class="line">from</div><div class="line">	issues iss</div><div class="line">	left join (</div><div class="line">		select</div><div class="line">			issue_id</div><div class="line">			, sum(hours) hours</div><div class="line">		from</div><div class="line">			time_entries</div><div class="line">		group by</div><div class="line">			issue_id</div><div class="line">	) tim</div><div class="line">	on iss.id = tim.issue_id</div><div class="line">"</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">output &#123;</div><div class="line">    elasticsearch &#123;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>中に記載されているSQLでは、下記5つの値を取得します。</p>
<table>
<thead>
<tr>
<th style="text-align:left">SQL上の項目名</th>
<th style="text-align:left">Redmine上の項目名 　</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">due_date 　</td>
<td style="text-align:left">「期日」 　　　　　　　　</td>
</tr>
<tr>
<td style="text-align:left">updated_on</td>
<td style="text-align:left">「更新日」　　　　　　　</td>
</tr>
<tr>
<td style="text-align:left">pv 　　　　　</td>
<td style="text-align:left">「予定工数」        　</td>
</tr>
<tr>
<td style="text-align:left">ev</td>
<td style="text-align:left">「予定工数」×「進捗率」</td>
</tr>
<tr>
<td style="text-align:left">ac     　　</td>
<td style="text-align:left">「作業時間の記録」 　　　</td>
</tr>
</tbody>
</table>
<p>この「redmine.txt」も「C:\elastic\logstash-all-plugins-2.4.0\logstash-2.4.0\bin」に配置。</p>
<p>結果的に、下記のようなフォルダ構成になります。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">C:\elastic</div><div class="line">  └elasticsearch-5.1.2</div><div class="line">  └kibana-5.1.2-windows-x86</div><div class="line">  └logstash-5.1.2</div><div class="line">     └mysql-connector-java-5.1.39-bin.jar</div><div class="line">     └redmine.txt</div></pre></td></tr></table></figure>
<p>では、ElasticSearchを実行します。<br>「C:\elasticsearch-5.1.2\bin」フォルダで下記のコマンドを実行。</p>
<p><code>elasticsearch.bat</code></p>
<p>コマンドプロンプトの右下に”started”と表示されたら起動完了です。</p>
<p>次にLogstashを使って、RedmineのデータをElasticSearchへ取り込みます。<br>「C:\elastic\logstash-5.1.2\bin」フォルダで下記コマンドを実行。</p>
<p><code>logstash.bat -f redmine.txt</code></p>
<p><img src="/images/photo_20170119_29.png" alt=""></p>
<p>取り込みが完了しました。</p>
<p>次に、Kibanaを起動します。<br>「C:\elastic\kibana-5.1.2-windows-x86\bin」フォルダで下記コマンドを実行。</p>
<p><code>kibana.bat</code></p>
<p><img src="/images/photo_20170119_16.png" alt=""></p>
<p>Kibanaが起動しました。</p>
<p>では、Kibanaを表示します。ブラウザで <code>http://localhost:5601</code>を開く。</p>
<p><img src="/images/photo_20170119_17.png" alt=""></p>
<p>[Configure an index pattern]という画面が開くので、[Time-field name]に”due_date”を指定します。</p>
<p>そして、[Create]をクリック。</p>
<p><img src="/images/photo_20170119_30.png" alt=""></p>
<p>そして、左側の[Timelion]をクリックすると、Timelionの画面が開きます。</p>
<p><img src="/images/photo_20170119_21.png" alt=""></p>
<p>グラフが出ましたね！</p>
<p>次は、少し見やすくするために、グラフエリアを最大化します。<br>グラフにカーソルを当てると[Full screen]ボタンが表示されるのでクリック。</p>
<p><img src="/images/photo_20170119_22.png" alt=""></p>
<p>するとグラフが最大化されます。<br>そして、次は表示期間を変更します。右上[Last 15 minutes]ををクリック。</p>
<p><img src="/images/photo_20170119_23.png" alt=""></p>
<p>すると日付が選べます。今回は[Last 1 Year]をクリック。</p>
<p><img src="/images/photo_20170119_08.png" alt=""></p>
<p>次に、画面右上あたりの[Last 1 Year]をクリック。</p>
<p><img src="/images/photo_20170119_24.png" alt=""></p>
<p>グラフが大きく見やすくなりましたね。</p>
<p><img src="/images/photo_20170119_25.png" alt=""></p>
<h2 id="3-EVM-表示"><a href="#3-EVM-表示" class="headerlink" title="3.EVM 表示"></a>3.EVM 表示</h2><p>では、<code>.es(*)</code>という記載を<br><code>.es(metric=&#39;sum:pv&#39;, timefield=&#39;due_date&#39;).cusum().label(&#39;[累積]pv&#39;)</code><br>に変更します。</p>
<p><img src="/images/photo_20170119_38.png" alt=""></p>
<p>PVの累計が期日別に表示されました。</p>
<p>記載の意味は下記の通りです。</p>
<ul>
<li>.es(metric)：表示する項目を指定する。今回はPVの合計を指定。</li>
<li>.es(timefield)：X軸の項目名を指定する。今回は期日(due_date)を指定。</li>
<li>.cusum()：累積表示するという意味。</li>
</ul>
<p>次は、<code>.es(metric=&#39;sum:pv&#39;, timefield=&#39;due_date&#39;).cusum().label(&#39;[累積]pv&#39;)</code>という記載を</p>
<p><code>.es(metric=&#39;sum:pv&#39;, timefield=&#39;due_date&#39;).cusum().label(&#39;[累積]pv&#39;),.es(metric=&#39;sum:ev&#39;, timefield=&#39;updated_on&#39;).cusum().label(&#39;[累積]ev&#39;)</code><br>に変更します。</p>
<p><img src="/images/photo_20170119_39.png" alt=""></p>
<p>すると、EVの累計が更新日別に表示されます。</p>
<p>記載の意味は下記の通りです。</p>
<ul>
<li>.es(metric)：表示する項目を指定する。今回はEVの合計を指定。</li>
<li>.es(timefield)：X軸の項目名を指定する。今回は更新日(updated_on)を指定。</li>
<li>.cusum()：累積表示するという意味。</li>
</ul>
<p>次は、<code>.es(metric=&#39;sum:pv&#39;, timefield=&#39;due_date&#39;).cusum().label(&#39;[累積]pv&#39;),.es(metric=&#39;sum:ev&#39;, timefield=&#39;updated_on&#39;).cusum().label(&#39;[累積]ev&#39;)</code>という記載を</p>
<p><code>.es(metric=&#39;sum:pv&#39;, timefield=&#39;due_date&#39;).cusum().label(&#39;[累積]pv&#39;),.es(metric=&#39;sum:ev&#39;, timefield=&#39;updated_on&#39;).cusum().label(&#39;[累積]ev&#39;),.es(metric=&#39;sum:ac&#39;, timefield=&#39;updated_on&#39;).cusum().label(&#39;[累積]ac&#39;)</code><br>に変更します。</p>
<p><img src="/images/photo_20170119_40.png" alt=""></p>
<p>すると、ACの累計が更新日別に表示されます。</p>
<p>これで、PVとEV、ACが表示されましたね。</p>
<p>さらに、CPIも併記させます。</p>
<p>左下の[Exit full screen]をクリックし、グラフの大きさを元に戻します。</p>
<p><img src="/images/photo_20170119_41.png" alt=""></p>
<p>そして、右上の[Add]をクリック。</p>
<p><img src="/images/photo_20170119_42.png" alt=""></p>
<p>グラフが追加されました。</p>
<p><img src="/images/photo_20170119_43.png" alt=""></p>
<p>そして、<code>.es(*)</code>という記載を<br><code>.es(metric=&#39;sum:ev&#39;, timefield=&#39;updated_on&#39;).cusum().divide(.es(metric=&#39;sum:ac&#39;, timefield=&#39;updated_on&#39;).cusum()).label(&#39;cpi&#39;).yaxis(min=0.75, max=1.25)</code><br>に変更すると。</p>
<p><img src="/images/photo_20170119_48.png" alt=""></p>
<p>CPIが表示されました。</p>
<p>記載の意味は下記の通りです。</p>
<ul>
<li>.divide()：割り算するという意味。今回は、EV÷ACを指定。</li>
<li>.yaxis()：Y軸の表示範囲を指定する。今回は、0.75～1.25を指定。</li>
</ul>
<p>これでTimelionの左側に、PVとEVとAC。右側にCPIが併記されました。</p>
<h2 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a>最後に</h2><p>今回は、EVMグラフを表示しました。</p>
<p>いかがでしたでしょうか？<br>RedmineをKibana＋Timelionと組み合わせることで、グラフ表示が可能になり、結果的にプロジェクト状況の把握が容易になります。</p>
<p>本記事が、皆様のプロジェクトマネジメントに役に立てば幸いです。</p>
<p>なお、次回以降私がブログを執筆する際は、グラフのドリルダウン、プロジェクトダッシュボードの構築、ダッシュボード画像のメール配信に関する方法を記載していく予定。</p>
<p>これらの記事が、みなさまにとって参考になりそうでしたら「いいね！」をクリックして頂けますと幸いです。執筆の励みになります。＾＾</p>
<p>今後ともよろしくお願い致します。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/photo_20160928_00.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;&lt;p&gt;こんにちは。
    
    </summary>
    
      <category term="プロジェクトマネジメント" scheme="https://future-architect.github.io/categories/%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%83%9E%E3%83%8D%E3%82%B8%E3%83%A1%E3%83%B3%E3%83%88/"/>
    
    
      <category term="Kibana" scheme="https://future-architect.github.io/tags/Kibana/"/>
    
      <category term="Redmine" scheme="https://future-architect.github.io/tags/Redmine/"/>
    
      <category term="Timelion" scheme="https://future-architect.github.io/tags/Timelion/"/>
    
  </entry>
  
  <entry>
    <title>インフラ入門vol.1</title>
    <link href="https://future-architect.github.io/articles/20170109/"/>
    <id>https://future-architect.github.io/articles/20170109/</id>
    <published>2017-01-09T02:01:06.000Z</published>
    <updated>2017-03-15T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/photo_20170109_01.jpg"></p>
<h1 id="１．はじめに"><a href="#１．はじめに" class="headerlink" title="１．はじめに"></a>１．はじめに</h1><p>業務・アプリ実装からすると影のイメージがあるインフラについて、この領域をやりたいと思う人を増やすべく、入門編を記載していきます。<br>（もちろんここでいうインフラとはITインフラのことになります）<br>また入門編の内容に入る前に、今回はまずは「意義」や「興味」を感じて頂くことを目的に記載します。<br>その後、「おっ、ちょっとやってみよう」と一歩を踏み出して頂けるような、入門ネタを記載したいと思っています。</p>
<p>ただ一般的な入門書に載っている内容はそちらを参照すればいいので、ここでは当社のインフラエンジニアがスキルを身に付けていく過程の入門ネタを書き連ねたいと思っています。<br>（結局、一般的なことになった場合はすみません）<br>なお、本内容は筆者の主張が含まれておりますのでご了承ください。</p>
<h1 id="２．インフラって何？"><a href="#２．インフラって何？" class="headerlink" title="２．インフラって何？"></a>２．インフラって何？</h1><p>そもそもインフラって何でしょうか。<br>正しい名称は、インフラストラクチャー (infrastructure)で、Wikipediaには以下の記載があります。</p>
<blockquote>
<p>インフラストラクチャー (英語: infrastructure) とは、「下支えするもの」「下部構造」を指す観念的な用語であり、以下の意味がある。</p>
<ul>
<li>国民福祉の向上と国民経済の発展に必要な公共施設。</li>
<li>企業などの主幹となる設備。</li>
</ul>
</blockquote>
<p><a href="https://ja.wikipedia.org/wiki/インフラストラクチャー" target="_blank" rel="external">https://ja.wikipedia.org/wiki/インフラストラクチャー</a></p>
<p>ITインフラというと、ITの仕組み（アプリケーション）を「下支えするもの」というイメージですね。<br>具体的に、ITのインフラでイメージされるのは、ネットワーク、ハードウェア、OS、各種ミドルウェア等・・・といったところでしょうか。</p>
<p>ただここで、外してはいけないことがあります。<br>「下支えするもの」ということです。<strong>その上で動いている仕組みを動かしてあげる</strong>と言う点です。<br>重要なのは、先ほどの、ネットワーク、ハードウェア、OS、各種ミドルウェア等といったところが<strong>ITインフラの目的となってはいけない</strong>ということです。<br>ITインフラで下支えする仕組みとは、システムを利用するユーザが求める機能（＝アプリケーション）になります。<br>当社のお仕事でいうところの顧客の業務処理（業務アプリケーション）ですね。</p>
<p>以降は業務アプリケーションの例を元に記載します。</p>
<p>アプリケーションは、パッケージ製品など出来合いのものもありますが、求められる機能に対してプログラムでコーディングされたものになります。<br>ITインフラはこれを「下支えするもの」である必要があります。<br>そういう意味で、インフラとは簡単に言うと、プログラムでコーディングされるもの”<strong>以外全て</strong>”となります。<br>少し話しは外れますが、インフラにあまり興味が無い方や初めての方は以下のようなマイナスなイメージがあるのではないでしょうか。</p>
<ul>
<li>製品だから動いて当たり前</li>
<li>マニュアルを見て設定すれば終わりなのでクリエイティブなものは無い</li>
<li>色々なアプリの要求に泥臭く対応する必要がある</li>
<li>製品ベンダでもない限り、モノづくり感はない　など</li>
</ul>
<p>インフラレイヤはコーディングしてゼロから何かを生み出すものではないので、そうかもしれません。<br>（昨今の Infrastructure as Codeのためのコーディングや、また当社はたまにハードも作ってますがそういった例も除く）</p>
<p>ただ、逆に言うとコーディング以外の全てを誰かがお膳立てする必要があります。<br>それがインフラです。</p>
<p>またこのお膳立ての内容は自宅のサーバー機器でもない限り、単純には行きません。<br>結果的に設計が単純だったとしても、<strong>そこに行きつくまでの要件定義や技術検証、インフラデザインには経験と知識が必要</strong> になります。</p>
<p><strong>顧客の予算・業務要件を加味しつつ、将来の技術要素のトレンドも見据え、動いて当たり前の品質を実現するのには何をどうデザインし、採用技術を決め、実装・テストのスケジュールを立てるのか…</strong><br>そのあたりが<strong>インフラの醍醐味</strong>となります。</p>
<p>なお、私的な意見ですが、デザインまで終われば基本的には後は設定作業になります。<br>よほど難解な要件や新技術要素の導入が無い限り、ここに醍醐味はありません。<br>インフラに興味のない方の多くは、その設定作業のみ見えている方かもしれません。</p>
<h1 id="３．インフラエンジニアに求められること"><a href="#３．インフラエンジニアに求められること" class="headerlink" title="３．インフラエンジニアに求められること"></a>３．インフラエンジニアに求められること</h1><p>前述の通り、期待されるのは、システムを利用するユーザが求める機能（＝アプリケーション）を下支えすること。<br>対象は、そのアプリケーションプログラムでコーディングされるもの”<strong>以外全て</strong>”となります。</p>
<p>その手段の種別として、<strong>ネットワーク、ハードウェア、OS、各種ミドルウェア等</strong>があり、それぞれ個の領域に特化された方、フルスタックに検討出来る方など、人によって濃淡はありますが、総じてアプリケーションを期待どおりに動かすインフラを提供する必要があります。<br>もちろんその利用者の要求する機能（アプリケーション）を支えるインフラである必要があり、また<strong>非機能要件</strong>も考慮して、インフラの手段に落とすことが求められます。</p>
<p>またインフラはアプリケーションの開発やテストに先行して環境を提供する必要があります。<br>特にネットワークについてはWAN等、工事に期間を要するものもあるためアプリケーションの全貌が見えない中で準備を開始するケースもあります。</p>
<p>上記に対して必要な基礎知識は以下の通りです。</p>
<ol>
<li>インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計する<strong>デザインセンス</strong></li>
<li>アプリケーション開発をお膳立てするための先回りした<strong>計画力</strong></li>
<li>インフラを分からない人にでも非機能面や選定製品の根拠を説明でき、予算とともに合意していく<strong>交渉力</strong></li>
</ol>
<p>入門編としては(1)のお話ができればと思っています。<br>なお、(1),(2)は経験を積めば着実に身に付く知識ですが、(3)はある程度、その人の人間力や性格にもよります。</p>
<h1 id="４．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」の前提"><a href="#４．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」の前提" class="headerlink" title="４．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」の前提"></a>４．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」の前提</h1><p>このデザインセンスとは、結局のところ、要件に見合った当たり前のインフラ環境を設計し、それを想定通りに本番稼働させるセンスとなります。<br>ここでもやはり外してはいけないのが、インフラを想定通りに稼働させるのはもちろんですが、<strong>目的はインフラが下支えしている業務アプリケーションが想定通りに動くこと</strong>です。<br>アプリケーションはプログラムのコーディングに依存するので、インフラとしてはどうしようもないのでは？という話ではありません。</p>
<p>インフラでは<strong>非機能要件で性能や可用性を定義し、それを担保するためのミドルウェアや技術要素を設計</strong>します。<br>プログラムのコーディングロジック以前の処理方式を決めているのです。</p>
<p>そこで重要なのが、当たり前なのですが、<strong>アプリケーションに求められる処理方式をイメージする必要</strong>があります。<br>インフラはアプリケーションの開発前に製品を発注する必要があるため、アプリケーションの要件定義・基本設計時点でそれらをイメージしきる必要があります。<br>それには、何をするシステムなのかを、データのインプットとアウトプットのフロー（ユーザやシステムとのインターフェース）をイメージし、必要なデータの形式やシステム内外のプロトコルなどを組み上げておく必要があります。</p>
<p>また非機能面でいうと、<strong>業務的に止めてはいけない</strong>機能や、<strong>リアルタイム性</strong>が必要な機能、サイジングに関わる<strong>データ量</strong>などを押さえておく必要もあります。<br>製品や技術要素の選定には<strong>運用スキーム</strong>も想定する必要もあります。</p>
<p>そこで大切なのは、また当たり前ですが、そのイメージをアプリケーション開発の<strong>キーマンとズレがないように、コミュニケーションする</strong>ことです。<br>もちろん修正が必要なケースもありますが、その場合もアプリケーションとインフラで意識を合わせながら検討できる<strong>見通しの良いチームの環境つくりが重要</strong>です。<br>インフラが成功するかどうかは、私はここが一番のポイントだと考えています。</p>
<p>インフラの技術要素に閉じた中での問題は大概何とでも潰しが効くと思いますが、そもそもの処理方式のイメージが違う場合、修正は困難なものとなります。<br>例えると、ミニバンが欲しい人にスポーツカーを押し売るイメージでしょうか。</p>
<h1 id="５．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」入門に向けて"><a href="#５．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」入門に向けて" class="headerlink" title="５．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」入門に向けて"></a>５．「インフラ手段の知識や要件に見合った、動いて当たり前の環境を設計するデザインセンス」入門に向けて</h1><p>さて、前置きが長くなりましたが、インフラの入門ネタとして、知っておくべき各インフラのパートをご紹介します。</p>
<p>また業務アプリケーションを支えるインフラが提供するサービス（役割）としては、基本的に以下のような種類に分かれます。</p>
<ul>
<li><strong>WEB</strong>: 画面からのWebアクセスやAPIなどのWebサービスを受け付け、応答を返す、出入り口</li>
<li><strong>AP</strong>: アプリケーションのロジックを動かす</li>
<li><strong>DB</strong>: データの保管、取り出しを担う</li>
<li><strong>帳票</strong>: ExcelやPDFなど帳票レポートの出力を行う</li>
<li><strong>データ連携</strong>: EDIやEAIなどファイルやメッセージで他と通信する</li>
<li><strong>ジョブ管理</strong>: 自動実行のタイムコントロールや順序制御を行う</li>
<li><strong>監視通知</strong>: 障害の検知や業務に必要な通知を実施</li>
<li><strong>バックアップ</strong>: データやシステムのバックアップ、およびリストアを実施</li>
<li><strong>他システム運用系サービス</strong>: ログイン認証、ログの管理、ウィルス対策等を実現</li>
</ul>
<p>これらの役割に対して、ネットワーク、ハードウェア、OS、各種ミドルウェア等といった、インフラのパーツ・手段を設計することとなります。<br>責任をもって想定通りに業務アプリケーションを下支えするためには、様々な構成パタンや製品を選定するうえで、何を理解して、押さえておく必要があるのでしょうか。</p>
<p>次回以降のインフラ入門編で、個別の領域ごとに、まずはとっかかりとして理解しておくべきことをご説明していきます。</p>
<h1 id="６．次回"><a href="#６．次回" class="headerlink" title="６．次回"></a>６．次回</h1><p>ということで、今回はインフラ入門の前提となる話を中心に書き連ねました。<br>次回からはインフラの個別領域に絞った入門ネタのお話を掲載できればと考えています。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/photo_20170109_01.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;１．はじめに&quot;&gt;&lt;a href=&quot;#１．はじめに&quot; class=&quot;headerlink&quot; title=&quot;１．はじめに&quot;&gt;&lt;/a&gt;１．はじめに&lt;/h1&gt;&lt;p&gt;業務・アプ
    
    </summary>
    
      <category term="インフラ" scheme="https://future-architect.github.io/categories/%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9/"/>
    
    
      <category term="インフラ" scheme="https://future-architect.github.io/tags/%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9/"/>
    
  </entry>
  
  <entry>
    <title>たくさんあって混乱しがちなIoT関連の団体とOSSをまとめました</title>
    <link href="https://future-architect.github.io/articles/20161209/"/>
    <id>https://future-architect.github.io/articles/20161209/</id>
    <published>2016-12-09T01:56:44.000Z</published>
    <updated>2017-03-15T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-はじめに"><a href="#1-はじめに" class="headerlink" title="1. はじめに"></a>1. はじめに</h1><p>「IoT」は、昨今、聞かない日はないくらい、バズワード化した単語になりました。<br>同時に、様々な国や企業が、 <strong>IoTの標準仕様</strong> を抑えることによって、市場において有利なポジションを築くために、それぞれがIoT団体・プロジェクト・OSSプロダクトを支援展開しています。<br>2016年12月9日現在、押さえておきたいIoTに関係する団体・プロジェクトとオープンソースソフトウェアの概要を紹介したいと思います。</p>
<h1 id="2-団体・プロジェクト"><a href="#2-団体・プロジェクト" class="headerlink" title="2. 団体・プロジェクト"></a>2. 団体・プロジェクト</h1><p>今回紹介するIoT関連の団体とプロジェクトの一覧です。</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">団体名</th>
<th style="text-align:center">略称</th>
<th style="text-align:center">設立</th>
<th style="text-align:center">設立主体</th>
<th>参加団体数</th>
<th style="text-align:center">特徴</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">Plattform Industrie 4.0</td>
<td style="text-align:center">-</td>
<td style="text-align:center">2013/4</td>
<td style="text-align:center">ドイツ産業界（情報、機械、電気）、ドイツ連邦政府</td>
<td>-</td>
<td style="text-align:center">ドイツの国策的プロジェクト</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">Industrial Internet Consortium</td>
<td style="text-align:center">IIC</td>
<td style="text-align:center">2014/3</td>
<td style="text-align:center">米国情報産業界（GE、Cisco、AT&amp;T、IBM、Intel、OMG）</td>
<td>259</td>
<td style="text-align:center">米国情報産業が中心の団体</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">Open Connectivity Foundation</td>
<td style="text-align:center">OCF</td>
<td style="text-align:center">2016/2</td>
<td style="text-align:center">Canon、Cisco、Electrolux、GE Digital、Intel、Microsoft、Qualcomm、Samsung、LG、Haier など</td>
<td>284</td>
<td style="text-align:center">家電系企業が中心の団体</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">Open Mobile Alliance</td>
<td style="text-align:center">OMA</td>
<td style="text-align:center">2002/6</td>
<td style="text-align:center">各国のモバイル通信関連企業</td>
<td>72</td>
<td style="text-align:center">携帯キャリアが中心</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">oneM2M</td>
<td style="text-align:center">OM2M</td>
<td style="text-align:center">2012/7</td>
<td style="text-align:center">各国の情報通信系標準化団体</td>
<td>230</td>
<td style="text-align:center">包括的なデバイス周辺の規格を策定</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">デバイスWebAPIコンソーシアム</td>
<td style="text-align:center">-</td>
<td style="text-align:center">2015/4</td>
<td style="text-align:center">NTT DoCoMo、ソフトバンクモバイル</td>
<td>27</td>
<td style="text-align:center">国内のGotAPI推進団体</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">OpenFog Consortium</td>
<td style="text-align:center">-</td>
<td style="text-align:center">2015/11</td>
<td style="text-align:center">ARM、Cisco、Dell、Intel、Microsoft、プリンストン大学など</td>
<td>46</td>
<td style="text-align:center">デバイスからクラウドに渡る分散技術</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">IoT推進コンソーシアム</td>
<td style="text-align:center">ITAC</td>
<td style="text-align:center">2015/10</td>
<td style="text-align:center">国内の産官学</td>
<td>2605</td>
<td style="text-align:center">国内の最大IoT団体</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">ロボット革命イニシアティブ協議会</td>
<td style="text-align:center">RRI</td>
<td style="text-align:center">2015/5</td>
<td style="text-align:center">国内の情報、機械、電気、ロボット団体など</td>
<td>178</td>
<td style="text-align:center">国内の最大ロボット団体</td>
</tr>
</tbody>
</table>
<p>順番に説明していきます。</p>
<h2 id="2-1-Plattform-Industrie-4-0-Industry-4-0"><a href="#2-1-Plattform-Industrie-4-0-Industry-4-0" class="headerlink" title="2-1. Plattform Industrie 4.0 (Industry 4.0)"></a>2-1. <a href="http://www.plattform-i40.de/" target="_blank" rel="external">Plattform Industrie 4.0 (Industry 4.0)</a></h2><p><img src="/images/photo_20161206_01.png" width="*" class="img-reset-size"></p>
<p>Industrie 4.0は第４次産業革命の意味ですが、これは、第１次（蒸気機関による機械化）、第２次（電力による大量生産）、第３次（ITによる自動化）の次のフェーズ(CPSによる新生産システム)というところから名付けられています。<br>ドイツ政府主導の戦略的プロジェクトで、製造業の高度デジタル化を推進し、マスプロダクトにおいてもカスタマイズ可能にし、さらにコストも削減を狙うというものです。<br>実世界（Physical System）の情報とサイバー空間（Cyber System）を結びつけたものを、Cyber Physical System（CPS）と名付け、この概念が本プロジェクトでは中心に置かれています。これはIoTに似通った世界観ですが、IoTの括りよりも大きな括りの考え方になります。<br>実際に実現していく際のソリューションやソフトウェアなどについては、プロジェクトメンバーの中核に位置しているシーメンスとSAPが大きな役割を担っています。</p>
<h2 id="2-2-Industrial-Internet-Consortium-IIC"><a href="#2-2-Industrial-Internet-Consortium-IIC" class="headerlink" title="2-2. Industrial Internet Consortium (IIC)"></a>2-2. <a href="https://www.iiconsortium.org/" target="_blank" rel="external">Industrial Internet Consortium (IIC)</a></h2><p><img src="/images/photo_20161206_02.png" class="img-reset-size"></p>
<p>GE、Cisco、IBM、Intelなど、米国の情報系産業の中心企業が多く参加している団体です。<br>モデリング言語で有名な<a href="http://www.omg.org/spec/UML/" target="_blank" rel="external">UML</a>、言語非依存の分散オブブジェクトのフレームワークである<a href="http://www.corba.org/" target="_blank" rel="external">CORBA</a>、そしてソフトウェアの開発手法である<a href="http://www.omg.org/mda/" target="_blank" rel="external">MDA</a>などで有名な標準化団体である<a href="http://www.omg.org/" target="_blank" rel="external">OMG</a>が事務局を担当しています。<br>どちらかというと製造業に主眼をおいたIndustrie 4.0よりもターゲットとする範囲が広く、米国企業が中心ということでIoTを使った新しいビジネス作りや新技術の開発に主眼をおいてます。<br>多くの標準化団体と連係をしていますが、IIC自身は標準化団体ではありません。<br>当初はPredixを擁すGEとハードベンダー達といった感がありましたが、現在は日本企業も数多く参加している団体でもあります。</p>
<h2 id="2-3-Open-Connectivity-Foundation-OCF"><a href="#2-3-Open-Connectivity-Foundation-OCF" class="headerlink" title="2-3. Open Connectivity Foundation(OCF)"></a>2-3. <a href="https://openconnectivity.org/" target="_blank" rel="external">Open Connectivity Foundation(OCF)</a></h2><p><img src="/images/photo_20161206_03.png" class="img-reset-size"></p>
<p>2016年2月に発足した、旧Open Interconnect Consortium (OIC) の後継団体になります。旧OICは、Intelを中心に発足した団体です。<br>現在は、AllSeen Alliance (AllSeen) がこの団体に合流しました。AllSeenは、Qualcommを中心に発足した団体です。<br>以前は、別組織としてIntelとQualcommが対立していたような構図でしたが、両団体が合流することで、規格の分断ではなく統合が進むものと思われます。<br>今後、それぞれの団体が推進していたIoTプラットフォーム（AllSeen AllianceのAlljoyn、OICのIoTivity）を徐々に統合していくようです。</p>
<figure><br><img src="/images/photo_20161206_15.png"><br><figcaption>図１. OCFの変遷</figcaption><br></figure>



<h2 id="2-4-Open-Mobile-Alliance-OMA"><a href="#2-4-Open-Mobile-Alliance-OMA" class="headerlink" title="2-4. Open Mobile Alliance(OMA)"></a>2-4. <a href="http://openmobilealliance.org/" target="_blank" rel="external">Open Mobile Alliance(OMA)</a></h2><p><img src="/images/photo_20161206_04.gif" class="img-reset-size"></p>
<p>世界のモバイル通信関連企業が加盟している、携帯電話関連の標準規格策定を行う団体です。<br>前身団体の Wireless Application Protocol (WAP) フォーラム、Open Mobile Architecture Initiative と Location Interoperability Forum（LIF）、MMS Interoperability Group（MMS-IOP）、SyncML Initiative、Wireless Village Initiative が合流して設立されました。<br>日本からも、NTT DoCoMo、KDDI、ソフトバンクモバイルなど、主要な通信キャリアなどが参加しています。</p>
<figure><br><img src="/images/photo_20161206_16.png"><br><figcaption>図２. OMAの変遷</figcaption><br></figure>


<h2 id="2-5-oneM2M-OM2M"><a href="#2-5-oneM2M-OM2M" class="headerlink" title="2-5. oneM2M(OM2M)"></a>2-5. <a href="http://www.onem2m.org/" target="_blank" rel="external">oneM2M(OM2M)</a></h2><p><img src="/images/photo_20161206_05.png" class="img-reset-size"></p>
<p>元々はヨーロッパの標準化団体が中心に策定されてきた標準規格を世界に広げるために、世界の各地域の複数の標準化団体によって設立された団体です。<br>特定の技術や通信プロトコルに依存しない、抽象度の高い標準化を進めています。標準化された各規格に対して、実際によく利用されている技術や、OCFのAlljoyn、IoTivity、OMAの<a href="http://technical.openmobilealliance.org/Technical/technical-information/release-program/current-releases/oma-lightweightm2m-v1-0" target="_blank" rel="external">LWM2M</a>などのIoTデバイスシステムと連係可能なものになっています。<br>現在は、<a href="http://www.onem2m.org/technical/published-documents" target="_blank" rel="external">標準仕様の第２版</a>が公開されています。</p>
<h2 id="2-6-デバイスWebAPIコンソーシアム"><a href="#2-6-デバイスWebAPIコンソーシアム" class="headerlink" title="2-6. デバイスWebAPIコンソーシアム"></a>2-6. <a href="https://device-webapi.org/" target="_blank" rel="external">デバイスWebAPIコンソーシアム</a></h2><p><img src="/images/photo_20161206_06.png" class="img-reset-size"></p>
<p><a href="http://openmobilealliance.org/" target="_blank" rel="external">OMA</a>にて標準化された <a href="http://technical.openmobilealliance.org/Technical/technical-information/release-program/current-releases/generic-open-terminal-api-framework-1-0" target="_blank" rel="external">Generic Open Terminal API Framework Version 1.0(GotAPI)</a> の利用・拡張などを中心とした国内の団体です。弊社も企業会員となっています。<br>現在では、本団体のメンバー企業が中心となって、GotAPIを利用したプラットフォーム「<a href="https://linkingiot.com/" target="_blank" rel="external">Linking</a>」が提供されており、このプラットフォームに繋がるデバイスについても複数社から販売されています。</p>
<h2 id="2-7-OpenFog-Consortium"><a href="#2-7-OpenFog-Consortium" class="headerlink" title="2-7. OpenFog Consortium"></a>2-7. <a href="https://www.openfogconsortium.org/" target="_blank" rel="external">OpenFog Consortium</a></h2><p><img src="/images/photo_20161206_07.jpg" class="img-reset-size"></p>
<p>クラウド（雲）、デバイス、そしてその間に位置するフォグ（霧）を中心とした、フォグコンピューティングにフォーカスした団体です。<br>従来のクローズドシステムや昨今のクラウドコンピューティングの次のアーキテクチャを検討していく団体になります。</p>
<h2 id="2-8-IoT推進コンソーシアム（ITAC）"><a href="#2-8-IoT推進コンソーシアム（ITAC）" class="headerlink" title="2-8. IoT推進コンソーシアム（ITAC）"></a>2-8. <a href="http://www.iotac.jp/" target="_blank" rel="external">IoT推進コンソーシアム（ITAC）</a></h2><p><img src="/images/photo_20161206_08.jpg" class="img-reset-size"></p>
<p>2015年10月に設立された、参加団体数2600を超える（2016年12月現在）、日本発の産官学連携のコンソーシアムです。<br>活動は、<a href="http://smartiot-forum.jp/" target="_blank" rel="external">技術開発WG（通称：スマートIoT推進フォーラム）</a>、<a href="https://iotlab.jp/" target="_blank" rel="external">先進的モデル事業推進WG（通称：IoT推進ラボ）</a>、専門WGの３種類のワーキンググループ（以下WG）で行われています。<br>スマートIoT推進フォーラムでは、IoT関連技術の開発・実証・標準化などを行い、IoT推進ラボでは、先進的なモデル事業の創出、規制改革などの環境整備などを行っており、弊社会長の金丸も支援委員として参画しています。<br>専門WGは必要に応じて設置されるのですが、現在は、<a href="http://www.iotac.jp/wg/security/" target="_blank" rel="external">IoTセキュリティWG（2016/1～）</a>と<a href="http://www.iotac.jp/wg/data/" target="_blank" rel="external">データ流通促進WG（2016/1～）</a>の２つのWGが設置されています。<br>今年、IICとOpenFog Consortiumと相互に連係する署名を取り交わしています。</p>
<h2 id="2-9-ロボット革命イニシアティブ協議会-RRI"><a href="#2-9-ロボット革命イニシアティブ協議会-RRI" class="headerlink" title="2-9. ロボット革命イニシアティブ協議会(RRI)"></a>2-9. <a href="https://www.jmfrri.gr.jp/" target="_blank" rel="external">ロボット革命イニシアティブ協議会(RRI)</a></h2><p><img src="/images/photo_20161206_14.gif" class="img-reset-size"></p>
<p><a href="http://www.kantei.go.jp/jp/singi/robot/" target="_blank" rel="external">ロボット革命実現会議</a>にて、日本の国家戦略として「<a href="http://www.meti.go.jp/press/2014/01/20150123004/20150123004.html" target="_blank" rel="external">ロボット新戦略</a>」が提案され、この戦略のための組織的プラットフォームとして本組織が設立されました。<br>国内のロボット・機械系団体・企業が数多く参加しています。</p>
<h2 id="まとめ-各団体の連携状況"><a href="#まとめ-各団体の連携状況" class="headerlink" title="[まとめ]各団体の連携状況"></a>[まとめ]各団体の連携状況</h2><p><img src="/images/photo_20161206_09.png"></p>
<p>現在、上記の各団体は、この図のような連携関係にあります。<br>それぞれの団体がテーマとするレイヤーやドメインが微妙に異なるので、相互で連携をしていくことで標準化作業などの無駄な重複などを避けていくという意味合いもあります。</p>
<h1 id="3-オープンソースソフトウェア"><a href="#3-オープンソースソフトウェア" class="headerlink" title="3. オープンソースソフトウェア"></a>3. オープンソースソフトウェア</h1><p>今回紹介するIoT関連のOSS一覧です。</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th>ソフトウェア名</th>
<th style="text-align:center">主な開発主体</th>
<th style="text-align:center">公開時期</th>
<th style="text-align:center">対象</th>
<th style="text-align:center">特徴</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td>AllJoyn</td>
<td style="text-align:center">Qualcomm (OCF)</td>
<td style="text-align:center">2011</td>
<td style="text-align:center">家電・ウェアラブルなど</td>
<td style="text-align:center">Windows 10 は既に対応済</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td>IoTivity</td>
<td style="text-align:center">Intel, Samsung (OCF)</td>
<td style="text-align:center">2014/12</td>
<td style="text-align:center">家電・ウェアラブルなど</td>
<td style="text-align:center">OCFが推進していくプラットフォーム</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td>Eclipse IoT</td>
<td style="text-align:center">Eclipse Foundaion</td>
<td style="text-align:center">2012 (iot.eclpse.orgとして)</td>
<td style="text-align:center">様々な領域</td>
<td style="text-align:center">ソフトウェアは主にJavaで構成されている</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td>SensorBee</td>
<td style="text-align:center">Preferred Networks</td>
<td style="text-align:center">2016/3</td>
<td style="text-align:center">IoT機器などからのストリームデータ</td>
<td style="text-align:center">日本発のIoT向けストリーム処理OSS Go言語で開発されている</td>
</tr>
</tbody>
</table>
<p>順番に説明していきます。</p>
<h2 id="3-1-AllJoyn"><a href="#3-1-AllJoyn" class="headerlink" title="3-1. AllJoyn"></a>3-1. <a href="https://allseenalliance.org/framework" target="_blank" rel="external">AllJoyn</a></h2><p><img src="/images/photo_20161206_10.jpg" class="img-reset-size"></p>
<p>旧AllSeen Allianceが推進している、IoT Frameworkです。<br>既に、本規格に準拠した家電が複数の有名家電メーカーから販売されています。<br>今後、旧OICが推進しているIoTivityへ徐々に統合されていくものと思われます。</p>
<h2 id="3-2-IoTivity"><a href="#3-2-IoTivity" class="headerlink" title="3-2. IoTivity"></a>3-2. <a href="https://www.iotivity.org/" target="_blank" rel="external">IoTivity</a></h2><p><img src="/images/photo_20161206_11.png" class="img-reset-size"></p>
<p>旧OICが推進している、IoT Frameworkです。<br>今後、旧AllSeen Allianceが推進しているAllJoynを徐々に統合していくものと思われます。</p>
<h2 id="3-3-Eclipse-IoT"><a href="#3-3-Eclipse-IoT" class="headerlink" title="3-3. Eclipse IoT"></a>3-3. <a href="https://iot.eclipse.org/" target="_blank" rel="external">Eclipse IoT</a></h2><p><img src="/images/photo_20161206_12.png" class="img-reset-size"></p>
<p>IDEで有名なEclipseですが、IoTに関するプロジェクトについても多数擁しており、現在、26ものIoT関連プロジェクトがあります。<br>比較的、有名なものとしては、MQTT/MQTT-SNクライアントの「<a href="https://eclipse.org/paho/" target="_blank" rel="external">Paho</a>」、MQTTブローカーの「<a href="https://projects.eclipse.org/projects/technology.mosquitto" target="_blank" rel="external">mosquitto</a>」、oneM2M実装の「<a href="https://eclipse.org/om2m/" target="_blank" rel="external">OM2M</a>」、IoTゲートウェイの「<a href="https://eclipse.org/kura/" target="_blank" rel="external">kura</a>」などがあります。<br>Eclipse IoT内でIoTプラットフォームに必要な要素技術をほぼ網羅しています。<br>詳細については、次のホワイトペーパーを参照してみてください。</p>
<p>参考：<a href="https://iot.eclipse.org/resources/white-papers/Eclipse%20IoT%20White%20Paper%20-%20The%20Three%20Software%20Stacks%20Required%20for%20IoT%20Architectures.pdf" target="_blank" rel="external">White Paper: The Three Software Stacks Required for IoT Architectures</a></p>
<h2 id="3-4-SensorBee"><a href="#3-4-SensorBee" class="headerlink" title="3-4. SensorBee"></a>3-4. <a href="http://sensorbee.io/" target="_blank" rel="external">SensorBee</a></h2><p><img src="/images/photo_20161206_13.png" class="img-reset-size"></p>
<p>Prefered Networks社が開発した、IoT向けの軽量なストリーム処理エンジンです。<br>Go言語で書かれています。</p>
<p>参考：<a href="http://qiita.com/rkyymmt@github/items/4fb2002b167c88c85d55" target="_blank" rel="external">SensorBeeとは何か？</a></p>
<h1 id="4-まとめ"><a href="#4-まとめ" class="headerlink" title="4. まとめ"></a>4. まとめ</h1><p>今回紹介した団体でいうと、コンシューマー系IoTについてはOCF、エンタープライズ系IoTについてはIIC、国内では、IoT全般についてはITAC、製造・機械系IoTについてはRRIなど得意とする領域が微妙に異なります。<br>そのため、フォーカスしたい内容によってウォッチする団体を選択することが重要となります。<br>また、2016年11月にはファーウェイなど中国を中心とした<a href="http://www.huawei.com/en/news/2016/11/Edge-Computing-Consortium-Established" target="_blank" rel="external">Edge Computing Consortium (ECC)</a>という団体が設立されるなど、新しい動きにも注目していきたいところです。<br>OCFへ集約されていく流れなどは、10数年前のモバイル業界で言うところのOMA設立のような状況が、ちょうど今、IoT業界で起きているような状況となっています。<br>紹介したOSSでは、コンシューマー系のIoTについてはIoTivityに収斂していき、より包括的なプラットフォームとしては、Eclipse IoTも存在感を出していくものと思われます。SensorBeeもIoTにフォーカスしたストリーミング処理エンジンとして今後の動向に要注目です。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-はじめに&quot;&gt;&lt;a href=&quot;#1-はじめに&quot; class=&quot;headerlink&quot; title=&quot;1. はじめに&quot;&gt;&lt;/a&gt;1. はじめに&lt;/h1&gt;&lt;p&gt;「IoT」は、昨今、聞かない日はないくらい、バズワード化した単語になりました。&lt;br&gt;同時に、様々な国や
    
    </summary>
    
      <category term="調査" scheme="https://future-architect.github.io/categories/%E8%AA%BF%E6%9F%BB/"/>
    
    
      <category term="IoT" scheme="https://future-architect.github.io/tags/IoT/"/>
    
  </entry>
  
  <entry>
    <title>ビッグデータ対談でニコ生登壇しました</title>
    <link href="https://future-architect.github.io/articles/20161109/"/>
    <id>https://future-architect.github.io/articles/20161109/</id>
    <published>2016-11-09T05:14:24.000Z</published>
    <updated>2017-03-15T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/photo_20161109_01.png"></p>
<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a><strong>背景</strong></h1><ul>
<li>2016/11/02(水)に開催された<a href="http://live.nicovideo.jp/watch/lv279990477" target="_blank" rel="external">アカリクTechTalk（vol.4：ビッグデータ）</a>に弊社のインフラエンジニア<a href="http://qiita.com/keigodasu" target="_blank" rel="external">@keigosuda</a> が出演致しました</li>
<li>内容が<a href="https://plaid.co.jp/" target="_blank" rel="external">株式会社プレイド</a>さんのデータサイエンティストと対談するという、面白い取り組みだったのでこの場をお借りしてご報告致します</li>
</ul>
<p><br></p>
<p><strong>アカリクTechTalkとは…？</strong></p>
<blockquote>
<p>週毎に様々な技術トピックや業界、職種についてテーマを設定し、現場で働いているエンジニアさんから「実際のところ」をトークセッション形式で聞けるイベントとなります。</p>
</blockquote>
<p><br></p>
<p><strong>「vol4：ビックデータ」のテーマについて</strong></p>
<blockquote>
<p>ビッグデータとはなんでしょう？<br>バズワード化して数年が経ちますが、ビッグデータを漠然と「大量のデータ」だけを指すと思っている人も多いのではないでしょうか。<br>ビッグデータは単純なデータ量だけでなく、データの種類の多様性や、データの変化する頻度の高さ（リアルタイム性）もその特性の1つです。<br>時にはデータを扱う技術そのものや、データサイエンティストといった専門職、専門組織なども含む広義な言葉として使われることもあります。<br>そんな、「なんとなくすごい感じのするビッグデータ」について企業がどのように活用しているかを聞いてみませんか？</p>
</blockquote>
<p>詳細は<a href="https://acaric.jp/special/event/2016-acaric-techtalk" target="_blank" rel="external">こちら</a>を参照下さい。</p>
<p><br></p>
<p>多くの学生さんにとって、普段中々話す機会が無いであろう社会人エンジニアの方とカジュアルに話せることが醍醐味なイベントのようです。<br>とはいえ、個人的には何と言っても<strong>ニコ生放送</strong>されることが最大のウリだと思っています。</p>
<ul>
<li><strong>対談がリアルタイムにニコ生放映されること！</strong></li>
<li><strong>当然ながら日本中（世界中）からコメントで即時にフィードバックされること</strong></li>
</ul>
<p>…は通常の就活イベントではまず無いので、非常に貴重な経験でした。</p>
<p>まさか同僚が業務時間中にニコ生放送している風景を見ることが出来るとは…、世の中何があるかわかりませんね。<br>ちなみに、画像では凄く楽しそうですが実は相当緊張していたとのことです。</p>
<p><img src="/images/photo_20161109_02.png"></p>
<h1 id="登壇結果"><a href="#登壇結果" class="headerlink" title="登壇結果"></a><strong>登壇結果</strong></h1><ul>
<li><p>結果的には大好評だったようで、普段より多くの視聴者の方に見て頂け、コメントも多かったそうです！</p>
<ul>
<li>「アルゴリズムの気持ちww」や「データの気持ちになるwww」など、コメントの雰囲気で察することしか出来ませんが、<a href="http://qiita.com/keigodasu" target="_blank" rel="external">@keigosuda</a>氏のトーク力が高かったことは間違い無いと思います。笑</li>
</ul>
</li>
<li><p>終わった後に、対談者であったプレイド社の方々と、会場に来ていただいた学生さんともお話しました。</p>
<ul>
<li>ピザをつまみながら、全力で質問に答えることが出来たのでお互いにとっても有益な時間が過ごせたのではないかと思っています</li>
</ul>
</li>
</ul>
<h1 id="質問回答"><a href="#質問回答" class="headerlink" title="質問回答"></a><strong>質問回答</strong></h1><p><img src="/images/photo_20161109_03.jpeg"></p>
<p>さて、ニコ生ということで、対談中にいくつか質問コメントを頂きましたが全てにお答えすることは出来ませんでした。<br>登壇者の<a href="http://qiita.com/keigodasu" target="_blank" rel="external">@keigosuda</a>にお願いして、いくつかの質問に回答して頂きました。<br>少しでも学生の皆さまのお役に立てればと思います。</p>
<table>
<thead>
<tr>
<th>#</th>
<th>質問事項</th>
<th>回答</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>仕事のやりがいとビッグデータに関わる楽しさは？</td>
<td>ことビッグデータを扱う仕事の楽しさ・やりがいは、まさしくそういった巨大なデータをどう扱うかを考え、実装することです。<br>何も考えず「動く」インフラ・プログラムを作るだけではそういったデータを捌き切ることは出来ません。<br>どう処理を分割・統合するか、どう処理をオフロードさせるかなどあらゆるシステム的な観点で考えることが求められます。そのため自ずと様々なことを勉強しなくてはいけなくなるし、その分広範囲な技術要素が身に着けていけるところも魅力です。</td>
</tr>
<tr>
<td>2</td>
<td>新卒で入社して研究や開発に携われるのか</td>
<td>はい、携われます。私はもともと文卒で情報系は未経験で入社していますが、現在は研究開発の部門で、新しい技術要素を実務に導入していく仕事をしています。</td>
</tr>
<tr>
<td>3</td>
<td>開発部門と運営部門(要件定義・設計)は同じ？分けられてる？</td>
<td>別れていないです。顧客との要件定義から、設計、実装、運用までを同じエンジニアが行います。</td>
</tr>
<tr>
<td>4</td>
<td>ビックデータに携わる仕事に就くひとに求められる素養は何ですか？どんな学生に面接に来てほしいですか？</td>
<td>技術面でいうと様々な技術要素への興味関心が持てる人が強いと思います。<br>なので経験者である必要は全くないと思います。</td>
</tr>
<tr>
<td>5</td>
<td>仕事中に音楽ききながらソースコードかいてる人が居たら怒る？</td>
<td>他の会社は知りませんが、仕事をちゃんとやっていれば怒られません笑<br>私はヘッドホン着用している時間の方がはるかに長いです。</td>
</tr>
</tbody>
</table>
<h1 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a><strong>最後に</strong></h1><ul>
<li>弊社ではアカリクTechTalkのような、<strong>オープン</strong>で<strong>スピード感</strong>があり、<strong>楽しそう</strong>なイベントにドンドン参加し、学生の皆さまに有用だと感じて頂けるような情報を発信していきたいと考えています！</li>
<li>次回はビックデータに限らず別のテーマでも発信出来ればと考えていますので、ぜひウォッチして頂ければと思います！</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/photo_20161109_01.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;l
    
    </summary>
    
      <category term="PR" scheme="https://future-architect.github.io/categories/PR/"/>
    
    
      <category term="ニコ生放送" scheme="https://future-architect.github.io/tags/%E3%83%8B%E3%82%B3%E7%94%9F%E6%94%BE%E9%80%81/"/>
    
      <category term="ニコニコ動画" scheme="https://future-architect.github.io/tags/%E3%83%8B%E3%82%B3%E3%83%8B%E3%82%B3%E5%8B%95%E7%94%BB/"/>
    
      <category term="ビックデータ" scheme="https://future-architect.github.io/tags/%E3%83%93%E3%83%83%E3%82%AF%E3%83%87%E3%83%BC%E3%82%BF/"/>
    
      <category term="アカリクTechTalk" scheme="https://future-architect.github.io/tags/%E3%82%A2%E3%82%AB%E3%83%AA%E3%82%AFTechTalk/"/>
    
  </entry>
  
  <entry>
    <title>SQL実行時のブルームフィルタ(Bloom Filter)アルゴリズム</title>
    <link href="https://future-architect.github.io/articles/20161031/"/>
    <id>https://future-architect.github.io/articles/20161031/</id>
    <published>2016-10-31T03:21:10.000Z</published>
    <updated>2017-03-15T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/photo_20161102_00.png" class="img-small-size"></p>
<h1 id="1-初めに"><a href="#1-初めに" class="headerlink" title="1. 初めに"></a><strong>1. 初めに</strong></h1><p>DBにおける処理はSQLによって記述しますが、データの取得するために具体的にどのような内部処理を行うかという点までは記述しません。</p>
<p>ここでいう内部処理とは「SQLの書き換え」「インデックスの使用」「結合アルゴリズムの選択」などがDBMSのオプティマイザによって選択されて実施されることを指します。</p>
<p>SQLのパフォーマンスを見るにあたっては上記の内部処理について正しく理解する必要があります。</p>
<p>本Blogでは、重要なアルゴリズムであるにもかかわらず、まとまった情報が少ないSQL実行時におけるブルームフィルタ(Bloom Filter)についてOracleをもとに紹介を行います。</p>
<p>Bloom Filterは結合処理を効率化するために、結合の前段階で利用される技術になります。</p>
<p><img src="/images/photo_20161102_01.png"></p>
<p>公式なドキュメントとしては以下になります。<br><a href="http://docs.oracle.com/cd/E49329_01/server.121/b71277/tgsql_join.htm#BABEGJHI" target="_blank" rel="external">Oracle Database SQLチューニング・ガイド 12cリリース1(12.1) 結合の最適化 ブルーム・フィルタ</a></p>
<h1 id="2-Bloom-Filterとは"><a href="#2-Bloom-Filterとは" class="headerlink" title="2. Bloom Filterとは"></a><strong>2. Bloom Filterとは</strong></h1><p>Bloom Filterの概要は他サイトを参照してください。</p>
<ul>
<li><a href="https://ja.wikipedia.org/wiki/%E3%83%96%E3%83%AB%E3%83%BC%E3%83%A0%E3%83%95%E3%82%A3%E3%83%AB%E3%82%BF" target="_blank" rel="external">Wiki ブルームフィルタ</a></li>
<li><a href="https://blogs.oracle.com/datawarehousing/entry/big_data_sql_quick_start4" target="_blank" rel="external">The Data Warehouse Insider</a></li>
</ul>
<p><br></p>
<p>ポイントとしては以下になります。</p>
<ul>
<li>ある集合データからBloom Filterを作成した場合、Bloom Filterを利用してその集合の中にデータが含まれているかどうかを判定できる</li>
<li>その判定は100%正しくなく、「存在する」判定されたが実際は「存在しない」という誤検知を含む<ul>
<li>これを <strong>偽陽性[false positive]</strong> と呼びます</li>
</ul>
</li>
<li>Bloom Filterは非常に小さいサイズとなることから、「インメモリで保持が可能」「別の処理（プロセス）にフィルタを渡すことが可能」というメリットがある</li>
</ul>
<h1 id="3-サンプルスキーマ"><a href="#3-サンプルスキーマ" class="headerlink" title="3. サンプルスキーマ"></a><strong>3. サンプルスキーマ</strong></h1><p>今回の説明は、Oracleのサンプルスキーマを用いて説明を行います。<br>説明に必要なカラム以外は省略しています。</p>
<p><a href="http://docs.oracle.com/cd/E57425_01/121/COMSC/toc.htm" target="_blank" rel="external">Oracle Database Sample Schemas</a></p>
<p><img src="/images/photo_20161102_02.png"></p>
<p>DWHにおけるスタースキーマ構成となっています。</p>
<ul>
<li>SALES表がファクト（OLPTでいうトランザクション表）</li>
<li>TIME表、CUSTOMOER表、PRODUCTION表がディメンジョン（OLTPでいうマスタ表）</li>
<li>レコード数はファクト表が非常に多く、ディメンジョン表はそれほど多くはない</li>
</ul>
<p>実場面ではSALES表にはBitmap Indexを作成する例も多いのですが、今回は無しの状態で議論を進めます。</p>
<h1 id="4-SQL実行時のBloom-Filter"><a href="#4-SQL実行時のBloom-Filter" class="headerlink" title="4. SQL実行時のBloom Filter"></a><strong>4. SQL実行時のBloom Filter</strong></h1><p>SQL実行時におけるBloom Filterは「テーブル結合(Join)」で利用されます。</p>
<p>また、「結合操作はハッシュ結合(Hash-Join)であること」という大前提があります。<br>その理由はハッシュテーブルを作成するタイミングでBloom Filterを同時に作成するからです。（ハッシュ結合については<a href="http://www.atmarkit.co.jp/ait/articles/0408/25/news101.html" target="_blank" rel="external">ここ</a>など参考にどうぞ）</p>
<h2 id="4-1-Bloom-Filterを使わない場合のハッシュ結合"><a href="#4-1-Bloom-Filterを使わない場合のハッシュ結合" class="headerlink" title="4-1. Bloom Filterを使わない場合のハッシュ結合"></a><strong>4-1. Bloom Filterを使わない場合のハッシュ結合</strong></h2><p>サンプルスキーマにおけるハッシュ結合の具体的なフローは以下のようになります。<br><img src="/images/photo_20161102_03.png"></p>
<ol>
<li>ディメンジョン表(TIMES)を全スキャンしてハッシュテーブルを作成</li>
<li>ファクト表(SALES)を全スキャン</li>
<li>ハッシュテーブルを確認して結合できるかを判断する（値の比較）</li>
</ol>
<h2 id="4-2-Bloom-Filterを用いた場合のハッシュ結合"><a href="#4-2-Bloom-Filterを用いた場合のハッシュ結合" class="headerlink" title="4-2. Bloom Filterを用いた場合のハッシュ結合"></a><strong>4-2. Bloom Filterを用いた場合のハッシュ結合</strong></h2><p>これが、Bloom Filterを使うと以下のようになります。<br><img src="/images/photo_20161102_04.png"></p>
<ol>
<li>ディメンジョン表(TIMES)を全スキャンしてハッシュテーブルとBloom Filterを作成<ul>
<li>このBloom FilterをチェックするとTIMESに該当レコードが含まれているかが判断できます</li>
</ul>
</li>
<li>ファクト表(SALES)を全スキャン</li>
<li>Bloom FilterをチェックしFilterを通過（TIMESに該当レコードがあると判断した）したレコードについてハッシュテーブルで結合を実施<ul>
<li>このフローにより結合操作の対象をフィルタすることができるのが分かります</li>
</ul>
</li>
</ol>
<p>Bloom Filterには偽陽性を含むため、Bloom Filterを通過するレコードは実際には必要のないレコードも含まれてしまいます。このレコードについてはハッシュテーブルの確認をした際に結合対象なしと判断されて除外されます。</p>
<h2 id="4-3-Bloom-Filterを用いた複数テーブルの結合"><a href="#4-3-Bloom-Filterを用いた複数テーブルの結合" class="headerlink" title="4-3. Bloom Filterを用いた複数テーブルの結合"></a><strong>4-3. Bloom Filterを用いた複数テーブルの結合</strong></h2><p>さらに、複数のテーブル結合の場合以下のようになります。<br><img src="/images/photo_20161102_05.png"></p>
<ol>
<li>ディメンジョン表(TIMES)を全スキャンしてハッシュテーブルとBloom Filterを作成</li>
<li>ディメンジョン表(PRODUCTS)を全スキャンしてハッシュテーブルとBloom Filterを作成</li>
<li>ファクト表(SALES)を全スキャン</li>
<li>2つのBloom FilterをチェックしてFilterしたレコードに対してハッシュ結合を2回（PRODUCTS、TIMESの順番に）実施<ul>
<li>結合前に2つのBloom Filterを組み合わせてチェック（双方のフィルタを通過する必要がある）しているので、ハッシュ結合の対象データをいきなり減らすことができます</li>
</ul>
</li>
</ol>
<p><br></p>
<p>この挙動をサンプルスキーマ（スタースキーマ）で実際に利用するSQLをベースに説明します。</p>
<p><strong>スタースキーマにおける複数テーブルを結合するSQL</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">  TIMES.CALENDAR_QUARTER_DESC,</div><div class="line">  PRODUCTS.PROD_CATEGORY_DESC,</div><div class="line">  <span class="keyword">SUM</span>(SALES.AMOUNT_SOLD)</div><div class="line"><span class="keyword">FROM</span> SALES SALES</div><div class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> PRODUCTS PRODUCTS <span class="keyword">ON</span> (SALES.PROD_ID = PRODUCTS.PROD_ID)</div><div class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> TIMES TIMES <span class="keyword">ON</span> (SALES.TIME_ID = TIMES.TIME_ID)</div><div class="line"><span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span></div><div class="line"><span class="keyword">AND</span> TIMES.CALENDAR_YEAR=<span class="string">'2001'</span></div><div class="line"><span class="keyword">AND</span> PRODUCTS.PROD_CATEGORY=<span class="string">'Photo'</span></div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></div><div class="line">TIMES.CALENDAR_QUARTER_DESC,</div><div class="line">PRODUCTS.PROD_CATEGORY_DESC;</div></pre></td></tr></table></figure></p>
<p>例として各テーブルは以下の条件でデータが存在すると仮定します。</p>
<ul>
<li>SALESテーブルに全レコードが100万件存在する</li>
<li>TIMES.CALENDAR_YEAR=’2001’に該当するレコードが10万件存在する</li>
<li>PRODUCTS.PROD_CATEGORY=’Photo’に該当するレコードが1000件存在する</li>
</ul>
<p>という場合、Bloom Filterを利用することで(4)の結合は1000レコードに減らすことができます。<br>100万レコードが1000レコードになる。Excelent!!</p>
<p>と、ここまで書くと非常に素晴らしい機能のように見えます。<br>しかし残念ながら、DWHにおいて最も負荷の高い(3)ファクト表の全スキャンについては何も変わっていないためパフォーマンス上の効果は限定的なのです。</p>
<h2 id="4-4-SQL実行時のBloom-Filterまとめ"><a href="#4-4-SQL実行時のBloom-Filterまとめ" class="headerlink" title="4-4. SQL実行時のBloom Filterまとめ"></a><strong>4-4. SQL実行時のBloom Filterまとめ</strong></h2><p>まとめると、SQL実行時におけるBloom Filterの利用について以下のことが言えます。</p>
<ul>
<li>テーブル結合(Join)時に結合対象のデータを減らす効果はあるが、ファクト表のスキャン量は変わらないため普通に使うと効果は限定的</li>
<li>ファクト表のスキャンサイズを減らすことが出来れば効果は出そう</li>
</ul>
<p><br></p>
<p><strong>この「普通に使うと効果は限定的」という条件があるため「パーティション表」「パラレルクエリ」においてBloom Filterは利用されます（後述）が、非パラレルクエリでは効果が無いため利用されません。</strong></p>
<h1 id="5-OracleにおけるBloom-Filterの利用"><a href="#5-OracleにおけるBloom-Filterの利用" class="headerlink" title="5. OracleにおけるBloom Filterの利用"></a><strong>5. OracleにおけるBloom Filterの利用</strong></h1><p>ここまでを踏まえて、Oracleにおいてどのように利用されているか見ていきます。</p>
<p><a href="http://docs.oracle.com/cd/E49329_01/server.121/b71277/tgsql_join.htm#BABEGJHI" target="_blank" rel="external">Oracle Database SQLチューニング・ガイド 12cリリース1(12.1) 結合の最適化 ブルーム・フィルタ</a>では以下の4つにおいて利用されるとあります。</p>
<ul>
<li>5-1. パーティションテーブル結合<ul>
<li>不要なパーティションのアクセスを排除（パーティションプルーニング）するために利用</li>
</ul>
</li>
<li>5-2. パラレルクエリ<ul>
<li>パラレルクエリ実行時のスレーブプロセス間で転送されるデータ量を低減させるために利用</li>
</ul>
</li>
<li>5-3. Exadataにおけるストレージサーバ（セルサーバ）からDBサーバに転送されるデータ量を低減させるために利用</li>
<li>5-4. サーバの結果キャッシュにデータが存在するかどうかをチェックするため</li>
</ul>
<p>(5-4)についてはSQL実行の利用ではないのでここでは除外します。</p>
<h2 id="5-1-パーティションテーブル結合におけるBloom-Filter"><a href="#5-1-パーティションテーブル結合におけるBloom-Filter" class="headerlink" title="5-1. パーティションテーブル結合におけるBloom Filter"></a><strong>5-1. パーティションテーブル結合におけるBloom Filter</strong></h2><p>Bloom Filterの原則「テーブル結合(Join)時に結合対象のデータを減らす効果はあるが、ファクト表のスキャン量は変わらないため普通に使うと効果は限定的」を前提に、ファクト表がパーティションならパーティション単位でデータを減らせる可能性があるので適用しようというコンセプトです。</p>
<p><img src="/images/photo_20161102_06.png"></p>
<ul>
<li>(1)ディメンジョン表(TIMES)を全スキャンしてCALENDER_YEAR=’2001’に合致するデータでハッシュテーブルとBloom Filterを作成。ディクショナリよりSALES表のパーティション定義を取得して、結合対象データが存在するパーティションのリストをBloom Filterとして保持しています。<ul>
<li>（SALESのパーティションキーはTIME_IDでTIMES.CALENDER_YEARから導出可能です）</li>
</ul>
</li>
<li>(2)Bloom Filterを利用してファクト表(SALES)の必要なパーティションのみをスキャンして結合を実施します。</li>
</ul>
<p><br></p>
<p>具体的にSQLの実行計画（プラン）を見ていきます。</p>
<blockquote>
<p><strong>Tips: </strong></p>
<ul>
<li>SQLに <code>gather_plan_statistics</code> ヒントを入れて実行した場合、SQL実行時の統計が記録されます。</li>
<li>実行後に <code>dbms_xplan.display_cursor</code> を利用することで記録された内容を確認することができます。</li>
<li>A-Rowsを見ると、SQL実行中にアクセスした行数が分かります。</li>
<li>[参考URL]<ul>
<li><a href="https://jonathanlewis.wordpress.com/2006/11/09/dbms_xplan-in-10g/" target="_blank" rel="external">Oracle Scratchpad: dbms_xplan in 10g</a></li>
<li><a href="http://kerryosborne.oracle-guy.com/2010/02/gather_plan_statistics/" target="_blank" rel="external">Kerry Osborne’s Oracle Blog: GATHER_PLAN_STATISTICS</a></li>
</ul>
</li>
</ul>
</blockquote>
<p><br></p>
<p>パーティションテーブルでBloom_Filter利用するSQLを実行します。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="comment">/*+ gather_plan_statistics */</span></div><div class="line">  TIMES.CALENDAR_QUARTER_DESC,</div><div class="line">  <span class="keyword">SUM</span>(SALES.AMOUNT_SOLD)</div><div class="line"><span class="keyword">FROM</span> SALES SALES</div><div class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> TIMES TIMES <span class="keyword">ON</span> (SALES.TIME_ID = TIMES.TIME_ID)</div><div class="line"><span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span></div><div class="line"><span class="keyword">AND</span> TIMES.CALENDAR_YEAR=<span class="string">'2001'</span></div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></div><div class="line">TIMES.CALENDAR_QUARTER_DESC;</div></pre></td></tr></table></figure></p>
<p>続いて、実行計画を確認します。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">table</span>(dbms_xplan.display_cursor(<span class="literal">null</span>,<span class="literal">null</span>,<span class="string">'ALLSTATS ALL'</span>));</div><div class="line">PLAN_TABLE_OUTPUT</div><div class="line"><span class="comment">------------------------------------------------------------------------------</span></div><div class="line">| Id  | Operation                     | Name    | E-Rows | Pstart| Pstop | A-Rows |</div><div class="line">|   0 | <span class="keyword">SELECT</span> <span class="keyword">STATEMENT</span>              |         |        |       |       |      <span class="number">4</span> |</div><div class="line">|   <span class="number">1</span> |  <span class="keyword">HASH</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span>                |         |     <span class="number">20</span> |       |       |      <span class="number">4</span> |</div><div class="line">|*  <span class="number">2</span> |   <span class="keyword">HASH</span> <span class="keyword">JOIN</span>                   |         |    <span class="number">229</span>K|       |       |    <span class="number">259</span>K|</div><div class="line">|   <span class="number">3</span> |    PART <span class="keyword">JOIN</span> FILTER <span class="keyword">CREATE</span>    | :BF0000 |    <span class="number">365</span> |       |       |    <span class="number">365</span> |</div><div class="line">|*  <span class="number">4</span> |     <span class="keyword">TABLE</span> <span class="keyword">ACCESS</span> <span class="keyword">FULL</span>         | TIMES   |    <span class="number">365</span> |       |       |    <span class="number">365</span> |</div><div class="line">|   <span class="number">5</span> |    <span class="keyword">PARTITION</span> <span class="keyword">RANGE</span> <span class="keyword">JOIN</span>-FILTER|         |    <span class="number">918</span>K|:BF0000|:BF0000|    <span class="number">259</span>K|</div><div class="line">|   <span class="number">6</span> |     <span class="keyword">TABLE</span> <span class="keyword">ACCESS</span> <span class="keyword">FULL</span>         | SALES   |    <span class="number">918</span>K|:BF0000|:BF0000|    <span class="number">259</span>K|</div><div class="line"><span class="comment">------------------------------------------------------------------------------</span></div></pre></td></tr></table></figure></p>
<p>最後に、パーティション内のデータ件数を確認します。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">select to_char(a.TIME_ID,&apos;YYYY&apos;) time_id_year,count(*)</div><div class="line">from sales a</div><div class="line">group by to_char(a.TIME_ID,&apos;YYYY&apos;);</div><div class="line"></div><div class="line">TIME   COUNT(*)</div><div class="line">---- ----------</div><div class="line">2000     232646</div><div class="line">2001     259418</div><div class="line">1999     247945</div><div class="line">1998     178834</div></pre></td></tr></table></figure></p>
<p>実行計画のLINE#3(id=3の部分) 「PART JOIN FILTER CREATE」でフィルタ(BF000)を作成<br>LINE#6 BF000を利用してアクセスパーティション範囲を特定しているのが分かります。<br>アクセスした行数は259Kレコードで、SALESの2001年のデータとレコード数が一致しています。</p>
<p>例ではSALESのパーションキーに対応していたので、Bloom Filterの効果がはっきりとわかりましたが、条件によってはパーティションの特定が出来ずにフィルタ効果がないこともあり得ます。（たとえば、TIMES.CALENDAR_YEAR between ‘1995’ and ‘2000’ という条件の場合、SALESの全データが必要になるためパーティションフィルタによる効果はゼロです）</p>
<p><strong>パーティションのフィルタ効果が出るかは条件によりますが、Bloom Filterによるパフォーマンス上の副作用もないので、ディメンジョン表とファクト表がパーティションキーで結合される場合ほぼ間違いなく実行計画に登場します。</strong></p>
<p>このSQLの実行操作についてはBloom Filterの特徴を活用していないためBloom Filter操作の一つとすることにあまりしっくりきません。むしろ「PARTION RANGE JOIN-FILTER」という名称の方が理解しやすいのではと感じます。</p>
<h2 id="5-2-パラレルクエリにおけるBloom-Filter"><a href="#5-2-パラレルクエリにおけるBloom-Filter" class="headerlink" title="5-2. パラレルクエリにおけるBloom Filter"></a><strong>5-2. パラレルクエリにおけるBloom Filter</strong></h2><p>Bloom Filterの原則「 テーブル結合(Join)時に結合対象のデータを減らす効果はあるが、ファクト表のスキャン量は変わらないため普通に使うと効果は限定的」を前提に、パラレルプロセス間のデータ転送量を減らすときに適用しようというコンセプトです。</p>
<blockquote>
<ul>
<li>パラレルクエリとは、クエリ実行を複数のプロセスで並列化実行する機能です。</li>
<li>詳細は<a href="http://www.oracle.com/technetwork/jp/database/articles/tsushima/index-1741351-ja.html" target="_blank" rel="external">こちら</a>を参照してください。</li>
</ul>
</blockquote>
<p><br></p>
<h3 id="実行計画の確認"><a href="#実行計画の確認" class="headerlink" title="実行計画の確認"></a><strong>実行計画の確認</strong></h3><p>具体的にSQLの実行計画（プラン）を見ていきます。</p>
<blockquote>
<p><strong>Tips: </strong><br>今回はSQLの実行計画だけを参照するため、 <code>explain plan for</code> をSQLの前につけることで実行計画の作成を行なった後、 <code>dbms_xplan.display</code> を実行することでSQL実行計画の表示を行っています。</p>
</blockquote>
<p><br></p>
<p>パラレルクエリでBloom_Filterを利用するSQLを実行します。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">explain</span> plan <span class="keyword">for</span></div><div class="line"><span class="keyword">SELECT</span> <span class="comment">/*+parallel(4)*/</span>  <span class="comment">--パラレルクエリ実行のためのヒント</span></div><div class="line">  TIMES.CALENDAR_QUARTER_DESC,</div><div class="line">  PRODUCTS.PROD_CATEGORY_DESC,</div><div class="line">  CUSTOMERS.CUST_CITY,</div><div class="line">  <span class="keyword">SUM</span>(SALES.AMOUNT_SOLD)</div><div class="line"><span class="keyword">FROM</span> SALES SALES</div><div class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> PRODUCTS PRODUCTS <span class="keyword">ON</span> (SALES.PROD_ID = PRODUCTS.PROD_ID)</div><div class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> TIMES TIMES <span class="keyword">ON</span> (SALES.TIME_ID = TIMES.TIME_ID)</div><div class="line">  <span class="keyword">INNER</span> <span class="keyword">JOIN</span> CUSTOMERS <span class="keyword">ON</span> (SALES.CUST_ID = CUSTOMERS.CUST_ID)</div><div class="line"><span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span></div><div class="line"><span class="keyword">AND</span> TIMES.CALENDAR_YEAR=<span class="string">'2001'</span></div><div class="line"><span class="keyword">AND</span> CUSTOMERS.CUST_CITY=<span class="string">'Tokyo'</span></div><div class="line"><span class="keyword">AND</span> PRODUCTS.PROD_CATEGORY=<span class="string">'Photo'</span></div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></div><div class="line">TIMES.CALENDAR_QUARTER_DESC,</div><div class="line">PRODUCTS.PROD_CATEGORY_DESC,</div><div class="line">CUSTOMERS.CUST_CITY;</div></pre></td></tr></table></figure></p>
<p>続いて、実行計画を確認します。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">table</span>(dbms_xplan.display(<span class="literal">null</span>, <span class="literal">null</span>, <span class="string">'ALL allstats last outline'</span>));</div><div class="line"><span class="comment">-----------------------------------------------------------------------------------------------------------</span></div><div class="line">| Id  | Operation                       | Name      | E-Rows | Pstart| Pstop |    TQ  |IN-OUT| PQ Distrib |</div><div class="line"><span class="comment">-----------------------------------------------------------------------------------------------------------</span></div><div class="line">|   0 | <span class="keyword">SELECT</span> <span class="keyword">STATEMENT</span>                |           |     <span class="number">50</span> |       |       |        |      |            |</div><div class="line">|   <span class="number">1</span> |  PX COORDINATOR                 |           |        |       |       |        |      |            |</div><div class="line">|   <span class="number">2</span> |   PX SEND QC (RANDOM)           | :TQ10001  |     <span class="number">50</span> |       |       |  Q1,<span class="number">01</span> | P-&gt;S | QC (<span class="keyword">RAND</span>)  |</div><div class="line">|   <span class="number">3</span> |    <span class="keyword">HASH</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span>                |           |     <span class="number">50</span> |       |       |  Q1,<span class="number">01</span> | PCWP |            |</div><div class="line">|   <span class="number">4</span> |     PX RECEIVE                  |           |     <span class="number">50</span> |       |       |  Q1,<span class="number">01</span> | PCWP |            |</div><div class="line">|   <span class="number">5</span> |      PX SEND <span class="keyword">HASH</span>               | :TQ10000  |     <span class="number">50</span> |       |       |  Q1,<span class="number">00</span> | P-&gt;P | <span class="keyword">HASH</span>       |</div><div class="line">|   <span class="number">6</span> |       <span class="keyword">HASH</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span>             |           |     <span class="number">50</span> |       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|*  <span class="number">7</span> |        <span class="keyword">HASH</span> <span class="keyword">JOIN</span>                |           |    <span class="number">583</span> |       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|   <span class="number">8</span> |         <span class="keyword">JOIN</span> FILTER <span class="keyword">CREATE</span>      | :BF0001   |    <span class="number">365</span> |       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|   <span class="number">9</span> |          PART <span class="keyword">JOIN</span> FILTER <span class="keyword">CREATE</span>| :BF0000   |    <span class="number">365</span> |       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|* <span class="number">10</span> |           <span class="keyword">TABLE</span> <span class="keyword">ACCESS</span> <span class="keyword">FULL</span>     | TIMES     |    <span class="number">365</span> |       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|* <span class="number">11</span> |         <span class="keyword">HASH</span> <span class="keyword">JOIN</span>               |           |   <span class="number">2330</span> |       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|  <span class="number">12</span> |          <span class="keyword">JOIN</span> FILTER <span class="keyword">CREATE</span>     | :BF0002   |     <span class="number">14</span> |       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|* <span class="number">13</span> |           <span class="keyword">TABLE</span> <span class="keyword">ACCESS</span> <span class="keyword">FULL</span>     | PRODUCTS  |     <span class="number">14</span> |       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|* <span class="number">14</span> |          <span class="keyword">HASH</span> <span class="keyword">JOIN</span>              |           |  <span class="number">11652</span> |       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|  <span class="number">15</span> |           <span class="keyword">JOIN</span> FILTER <span class="keyword">CREATE</span>    | :BF0003   |     <span class="number">90</span> |       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|* <span class="number">16</span> |            <span class="keyword">TABLE</span> <span class="keyword">ACCESS</span> <span class="keyword">FULL</span>    | CUSTOMERS |     <span class="number">90</span> |       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|  <span class="number">17</span> |           <span class="keyword">JOIN</span> FILTER <span class="keyword">USE</span>       | :BF0001   |    <span class="number">918</span>K|       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|  <span class="number">18</span> |            <span class="keyword">JOIN</span> FILTER <span class="keyword">USE</span>      | :BF0002   |    <span class="number">918</span>K|       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|  <span class="number">19</span> |             <span class="keyword">JOIN</span> FILTER <span class="keyword">USE</span>     | :BF0003   |    <span class="number">918</span>K|       |       |  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line">|  <span class="number">20</span> |              PX <span class="keyword">BLOCK</span> ITERATOR  |           |    <span class="number">918</span>K|:BF0000|:BF0000|  Q1,<span class="number">00</span> | PCWC |            |</div><div class="line">|* <span class="number">21</span> |               <span class="keyword">TABLE</span> <span class="keyword">ACCESS</span> <span class="keyword">FULL</span> | SALES     |    <span class="number">918</span>K|:BF0000|:BF0000|  Q1,<span class="number">00</span> | PCWP |            |</div><div class="line"><span class="comment">-----------------------------------------------------------------------------------------------------------</span></div><div class="line">Predicate Information (<span class="keyword">identified</span> <span class="keyword">by</span> operation <span class="keyword">id</span>):</div><div class="line"><span class="comment">---------------------------------------------------</span></div><div class="line">   <span class="number">7</span> - <span class="keyword">access</span>(<span class="string">"SALES"</span>.<span class="string">"TIME_ID"</span>=<span class="string">"TIMES"</span>.<span class="string">"TIME_ID"</span>)</div><div class="line">  <span class="number">10</span> - filter(<span class="string">"TIMES"</span>.<span class="string">"CALENDAR_YEAR"</span>=<span class="number">2001</span>)</div><div class="line">  <span class="number">11</span> - <span class="keyword">access</span>(<span class="string">"SALES"</span>.<span class="string">"PROD_ID"</span>=<span class="string">"PRODUCTS"</span>.<span class="string">"PROD_ID"</span>)</div><div class="line">  <span class="number">13</span> - filter(<span class="string">"PRODUCTS"</span>.<span class="string">"PROD_CATEGORY"</span>=<span class="string">'Photo'</span>)</div><div class="line">  <span class="number">14</span> - <span class="keyword">access</span>(<span class="string">"SALES"</span>.<span class="string">"CUST_ID"</span>=<span class="string">"CUSTOMERS"</span>.<span class="string">"CUST_ID"</span>)</div><div class="line">  <span class="number">16</span> - filter(<span class="string">"CUSTOMERS"</span>.<span class="string">"CUST_CITY"</span>=<span class="string">'Tokyo'</span>)</div><div class="line">  <span class="number">21</span> - filter(SYS_OP_BLOOM_FILTER_LIST(SYS_OP_BLOOM_FILTER(:BF0003,<span class="string">"SALES"</span>.<span class="string">"CUST_ID"</span>),SYS_OP_BLOOM_FILTER(:BF0002,<span class="string">"SALES"</span>.<span class="string">"PROD_ID"</span></div><div class="line">              ),SYS_OP_BLOOM_FILTER(:BF0001,<span class="string">"SALES"</span>.<span class="string">"</span></div></pre></td></tr></table></figure></p>
<p>図示すると以下のような流れになっているのがわかります。</p>
<p><img src="/images/photo_20161102_07.png"></p>
<ol>
<li>TIMES表をスレーブプロセス群(Q01,00)はパラレルスキャンしてハッシュテーブルとBloom Filterを作成。この時、パーティションフィルタ用(BF0000)と、パラレルプロセス用(BF0001)の2つを作成</li>
<li>PRODUCTS表をスレーブプロセス群(Q01,00)はパラレルスキャンしてハッシュテーブルとBloom Filter(BF0002)を作成</li>
<li>CUSTOMERS表をスレーブプロセス群(Q01,00)はパラレルスキャンしてハッシュテーブルとBloom Filter(BF0003)を作成</li>
<li>SALES表に対してBF0000を利用して必要なパーティションのみスレーブプロセス群(Q01,00)はパラレルスキャン</li>
<li>スレーブプロセス群(Q01,00)は3つのBloom Filter(BF0001,BF0002,BF0003)を利用して、転送するデータを削減して、別のスレーブプロセス群(Q01,01)に転送</li>
<li>スレーブプロセス群(Q01,01)はハッシュテーブルを利用してパラレル結合を実施して結果をQCプロセスに転送</li>
</ol>
<p><br></p>
<p>ここでのポイントは(5)において転送データの削減を行っているところにあります。<br>実行計画でのLINE#21を見ると、3つのBloom Filter(BF0000,BF0001,BF0002)を同時に利用してデータを絞り込んでいるのが分かります。</p>
<blockquote>
<p><code>filter(SYS_OP_BLOOM_FILTER_LIST(SYS_OP_BLOOM_FILTER(:BF0003,&quot;SALES&quot;.&quot;CUST_ID&quot;),SYS_OP_BLOOM_FILTER(:BF0002,&quot;SALES&quot;.&quot;PROD_ID&quot;),SYS_OP_BLOOM_FILTER(:BF0001,&quot;SALES&quot;.&quot;TIME_ID&quot;)))</code></p>
</blockquote>
<p><br></p>
<h3 id="Bloom-Filterの効果計測"><a href="#Bloom-Filterの効果計測" class="headerlink" title="Bloom Filterの効果計測"></a><strong>Bloom Filterの効果計測</strong></h3><p>次に、Bloom Filterの有り無しでSQLの実行計画とI/Oがどのように変化するか見てみます。</p>
<p>まずはBloom Filterを利用しない場合の実行計画を確認します。</p>
<blockquote>
<p><strong>Tips: </strong></p>
<ul>
<li>Bloom Filterを使用しないヒント句として <code>no_px_join_filter(テーブル名)</code> があります。</li>
<li>これを使用することで指定テーブルに対してBloom Filterは作成されなくなります。</li>
</ul>
</blockquote>
<p><strong>パラレルクエリ：Bloom_Filterなし※データは整形済み</strong><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">（使用したヒント:SQL本文は省略）</div><div class="line">parallel(4)</div><div class="line">no_px_join_filter(CUSTOMERS)</div><div class="line">no_px_join_filter(PRODUCTS)</div><div class="line">no_px_join_filter(SALES)</div><div class="line">no_px_join_filter(TIMES)</div><div class="line"></div><div class="line">call     count       cpu    elapsed       disk      query    current        rows  process</div><div class="line">------- ------  -------- ---------- ---------- ---------- ----------  ---------- --------</div><div class="line">Execute      1      0.00       0.40          0       1266         64           0       QC</div><div class="line">Execute      1      0.00       0.40          0          0          0           0    Q1,01</div><div class="line">Execute      1      0.00       0.40          0          0          0           0    Q1,01</div><div class="line">Execute      1      0.16       0.39       4460       6909         72           0    Q1,00</div><div class="line">Execute      1      0.15       0.40       4214       6573         68           0    Q1,00</div><div class="line"></div><div class="line">----------------------------------------------------------------------------------------------------------</div><div class="line">| Id  | Operation                      | Name      | Pstart| Pstop |    TQ  |IN-OUT| PQ Distrib | A-Rows |</div><div class="line">----------------------------------------------------------------------------------------------------------</div><div class="line">|   0 | SELECT STATEMENT               |           |       |       |        |      |            |        |</div><div class="line">|   1 |  PX COORDINATOR                |           |       |       |        |      |            |       4|</div><div class="line">|   2 |   PX SEND QC (RANDOM)          | :TQ10001  |       |       |  Q1,01 | P-&gt;S | QC (RAND)  |       4|</div><div class="line">|   3 |    HASH GROUP BY               |           |       |       |  Q1,01 | PCWP |            |       4|</div><div class="line">|   4 |     PX RECEIVE                 |           |       |       |  Q1,01 | PCWP |            |       8|</div><div class="line">|   5 |      PX SEND HASH              | :TQ10000  |       |       |  Q1,00 | P-&gt;P | HASH       |       8|</div><div class="line">|   6 |       HASH GROUP BY            |           |       |       |  Q1,00 | PCWP |            |       8|</div><div class="line">|*  7 |        HASH JOIN               |           |       |       |  Q1,00 | PCWP |            |    1328|</div><div class="line">|   8 |         PART JOIN FILTER CREATE| :BF0000   |       |       |  Q1,00 | PCWP |            |     730|</div><div class="line">|*  9 |          TABLE ACCESS FULL     | TIMES     |       |       |  Q1,00 | PCWP |            |     730|</div><div class="line">|* 10 |         HASH JOIN              |           |       |       |  Q1,00 | PCWP |            |    1328|</div><div class="line">|* 11 |          TABLE ACCESS FULL     | PRODUCTS  |       |       |  Q1,00 | PCWP |            |      20|</div><div class="line">|* 12 |          HASH JOIN             |           |       |       |  Q1,00 | PCWP |            |    9424|</div><div class="line">|* 13 |           TABLE ACCESS FULL    | CUSTOMERS |       |       |  Q1,00 | PCWP |            |      32|</div><div class="line">|  14 |           PX BLOCK ITERATOR    |           |:BF0000|:BF0000|  Q1,00 | PCWC |            | 4150688|</div><div class="line">|  15 |            TABLE ACCESS FULL   | SALES     |:BF0000|:BF0000|  Q1,00 | PCWP |            | 4150688|</div><div class="line">----------------------------------------------------------------------------------------------------------</div></pre></td></tr></table></figure></p>
<p>続いて、Bloom Filterを利用する場合の実行計画を確認します。<br>変更したのはヒント句のみです。</p>
<p><strong>パラレルクエリ：Bloom_Filterあり※データは整形済み</strong><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">（使用したヒント:SQL本文は省略）</div><div class="line">parallel(4)</div><div class="line"></div><div class="line">call     count       cpu    elapsed       disk      query    current        rows  process</div><div class="line">------- ------  -------- ---------- ---------- ---------- ----------  ---------- --------</div><div class="line">Execute      1      0.00       0.00          0        130          0           0       QC</div><div class="line">Execute      1      0.00       0.23          0          0          0           0    Q1,01</div><div class="line">Execute      1      0.00       0.23          0          0          0           0    Q1,01</div><div class="line">Execute      1      0.14       0.23       4774       5620          0           0    Q1,00</div><div class="line">Execute      1      0.12       0.23       3900       4726          0           0    Q1,00</div><div class="line"></div><div class="line">-----------------------------------------------------------------------------------------------------------</div><div class="line">| Id  | Operation                       | Name      | Pstart| Pstop |    TQ  |IN-OUT| PQ Distrib | A-Rows |</div><div class="line">-----------------------------------------------------------------------------------------------------------</div><div class="line">|   0 | SELECT STATEMENT                |           |       |       |        |      |            |        |</div><div class="line">|   1 |  PX COORDINATOR                 |           |       |       |        |      |            |       4|</div><div class="line">|   2 |   PX SEND QC (RANDOM)           | :TQ10001  |       |       |  Q1,01 | P-&gt;S | QC (RAND)  |       4|</div><div class="line">|   3 |    HASH GROUP BY                |           |       |       |  Q1,01 | PCWP |            |       4|</div><div class="line">|   4 |     PX RECEIVE                  |           |       |       |  Q1,01 | PCWP |            |       8|</div><div class="line">|   5 |      PX SEND HASH               | :TQ10000  |       |       |  Q1,00 | P-&gt;P | HASH       |       8|</div><div class="line">|   6 |       HASH GROUP BY             |           |       |       |  Q1,00 | PCWP |            |       8|</div><div class="line">|*  7 |        HASH JOIN                |           |       |       |  Q1,00 | PCWP |            |      83|</div><div class="line">|   8 |         JOIN FILTER CREATE      | :BF0001   |       |       |  Q1,00 | PCWP |            |     730|</div><div class="line">|   9 |          PART JOIN FILTER CREATE| :BF0000   |       |       |  Q1,00 | PCWP |            |     730|</div><div class="line">|* 10 |           TABLE ACCESS FULL     | TIMES     |       |       |  Q1,00 | PCWP |            |     730|</div><div class="line">|* 11 |         HASH JOIN               |           |       |       |  Q1,00 | PCWP |            |    1328|</div><div class="line">|  12 |          JOIN FILTER CREATE     | :BF0002   |       |       |  Q1,00 | PCWP |            |      20|</div><div class="line">|* 13 |           TABLE ACCESS FULL     | PRODUCTS  |       |       |  Q1,00 | PCWP |            |      20|</div><div class="line">|* 14 |          HASH JOIN              |           |       |       |  Q1,00 | PCWP |            |    1328|</div><div class="line">|  15 |           JOIN FILTER CREATE    | :BF0003   |       |       |  Q1,00 | PCWP |            |      32|</div><div class="line">|* 16 |            TABLE ACCESS FULL    | CUSTOMERS |       |       |  Q1,00 | PCWP |            |      32|</div><div class="line">|  17 |           JOIN FILTER USE       | :BF0001   |       |       |  Q1,00 | PCWP |            |    1328|</div><div class="line">|  18 |            JOIN FILTER USE      | :BF0002   |       |       |  Q1,00 | PCWP |            |    1328|</div><div class="line">|  19 |             JOIN FILTER USE     | :BF0003   |       |       |  Q1,00 | PCWP |            |    1328|</div><div class="line">|  20 |              PX BLOCK ITERATOR  |           |:BF0000|:BF0000|  Q1,00 | PCWC |            |    1328|</div><div class="line">|* 21 |               TABLE ACCESS FULL | SALES     |:BF0000|:BF0000|  Q1,00 | PCWP |            |    1328|</div><div class="line">-----------------------------------------------------------------------------------------------------------</div></pre></td></tr></table></figure></p>
<p>Bloom Filterありとなしの実行計画を見てみると、実際にアクセスしたレコード数(A-Rows)は1/3000になっていますが、読み込みデーブロック数(query)はそれほど変わっていないため、実行時間(elapsed)も劇的には変わっていません。</p>
<table>
<thead>
<tr>
<th style="text-align:left">#</th>
<th style="text-align:left">実際にアクセスしたレコード数(A-Rows)</th>
<th style="text-align:left">読み込みデーブロック数(query)</th>
<th style="text-align:left">実行時間(elapsed)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Bloom Filterなし</td>
<td style="text-align:left">4,150,688</td>
<td style="text-align:left">13,482(6909+6573)</td>
<td style="text-align:left">0.4</td>
</tr>
<tr>
<td style="text-align:left">Bloom Filterあり</td>
<td style="text-align:left">1,328</td>
<td style="text-align:left">10,346(5620+4726)</td>
<td style="text-align:left">0.23</td>
</tr>
</tbody>
</table>
<p><strong>一見パフォーマンスに効果がありそうだけど、実際はいまいちの効果です。結合対象レコードは減らせるのですが、そもそもファクト表をスキャンするサイズは変わらないからです。<br>過度の期待は禁物です。</strong></p>
<h2 id="5-3-ExadataのストレージサーバにおけるBloom-Filter"><a href="#5-3-ExadataのストレージサーバにおけるBloom-Filter" class="headerlink" title="5-3. ExadataのストレージサーバにおけるBloom Filter"></a><strong>5-3. ExadataのストレージサーバにおけるBloom Filter</strong></h2><p>これは「パラレルクエリにおけるBloom Filter」のコンセプトをExadata のストレージサーバ（セルサーバ）とDBサーバに適用するというコンセプトになります。</p>
<p>処理の流れは、パラレルクエリの時と考え方は同じです。パラレルプロセスがストレージサーバに置き換えて考えます。</p>
<p><img src="/images/photo_20161102_08.png"></p>
<ol>
<li>ディメンジョン表(TIMES)をスキャンしてハッシュテーブルとBloom Filterを作成</li>
<li>Bloom Filterをストレージサーバに転送する</li>
<li>ストレージサーバ側でファクト表(SALES)をスキャンしBloom Filterを通過したデータのみをDBサーバに転送</li>
</ol>
<p><br></p>
<p><strong>ExadataでのBloom_Filter例</strong><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">（使用したヒント:SQL本文は省略）</div><div class="line">parallel(4)</div><div class="line"></div><div class="line">----------------------------------------------------------------------------------------------------------------------------</div><div class="line">| Id  | Operation                          | Name                 | E-Rows |E-Bytes| Cost (%CPU)| E-Time   | Pstart| Pstop |</div><div class="line">----------------------------------------------------------------------------------------------------------------------------</div><div class="line">|   0 | SELECT STATEMENT                   |                      |     50 |  4750 |   661   (2)| 00:00:10 |       |       |</div><div class="line">|   1 |  HASH GROUP BY                     |                      |     50 |  4750 |   661   (2)| 00:00:10 |       |       |</div><div class="line">|*  2 |   HASH JOIN                        |                      |    583 | 55385 |   660   (2)| 00:00:10 |       |       |</div><div class="line">|   3 |    JOIN FILTER CREATE              | :BF0001              |    365 |  7300 |    13   (0)| 00:00:01 |       |       |</div><div class="line">|   4 |     PART JOIN FILTER CREATE        | :BF0000              |    365 |  7300 |    13   (0)| 00:00:01 |       |       |</div><div class="line">|*  5 |      TABLE ACCESS STORAGE FULL     | TIMES                |    365 |  7300 |    13   (0)| 00:00:01 |       |       |</div><div class="line">|*  6 |    HASH JOIN                       |                      |   2330 |   170K|   647   (2)| 00:00:10 |       |       |</div><div class="line">|   7 |     JOIN FILTER CREATE             | :BF0002              |     14 |   532 |     2   (0)| 00:00:01 |       |       |</div><div class="line">|   8 |      TABLE ACCESS BY INDEX ROWID   | PRODUCTS             |     14 |   532 |     2   (0)| 00:00:01 |       |       |</div><div class="line">|*  9 |       INDEX RANGE SCAN             | PRODUCTS_PROD_CAT_IX |     14 |       |     1   (0)| 00:00:01 |       |       |</div><div class="line">|* 10 |     HASH JOIN                      |                      |  11652 |   421K|   645   (2)| 00:00:10 |       |       |</div><div class="line">|  11 |      JOIN FILTER CREATE            | :BF0003              |     90 |  1350 |   278   (1)| 00:00:04 |       |       |</div><div class="line">|* 12 |       TABLE ACCESS STORAGE FULL    | CUSTOMERS            |     90 |  1350 |   278   (1)| 00:00:04 |       |       |</div><div class="line">|  13 |      JOIN FILTER USE               | :BF0001              |    918K|    19M|   365   (2)| 00:00:06 |       |       |</div><div class="line">|  14 |       JOIN FILTER USE              | :BF0002              |    918K|    19M|   365   (2)| 00:00:06 |       |       |</div><div class="line">|  15 |        JOIN FILTER USE             | :BF0003              |    918K|    19M|   365   (2)| 00:00:06 |       |       |</div><div class="line">|  16 |         PARTITION RANGE JOIN-FILTER|                      |    918K|    19M|   365   (2)| 00:00:06 |:BF0000|:BF0000|</div><div class="line">|* 17 |          TABLE ACCESS STORAGE FULL | SALES                |    918K|    19M|   365   (2)| 00:00:06 |:BF0000|:BF0000|</div><div class="line">----------------------------------------------------------------------------------------------------------------------------</div><div class="line"></div><div class="line">   2 - access(<span class="string">"SALES"</span>.<span class="string">"TIME_ID"</span>=<span class="string">"TIMES"</span>.<span class="string">"TIME_ID"</span>)</div><div class="line">   5 - storage(<span class="string">"TIMES"</span>.<span class="string">"CALENDAR_YEAR"</span>=2001)</div><div class="line">       filter(<span class="string">"TIMES"</span>.<span class="string">"CALENDAR_YEAR"</span>=2001)</div><div class="line">   6 - access(<span class="string">"SALES"</span>.<span class="string">"PROD_ID"</span>=<span class="string">"PRODUCTS"</span>.<span class="string">"PROD_ID"</span>)</div><div class="line">   9 - access(<span class="string">"PRODUCTS"</span>.<span class="string">"PROD_CATEGORY"</span>=<span class="string">'Photo'</span>)</div><div class="line">  10 - access(<span class="string">"SALES"</span>.<span class="string">"CUST_ID"</span>=<span class="string">"CUSTOMERS"</span>.<span class="string">"CUST_ID"</span>)</div><div class="line">  12 - storage(<span class="string">"CUSTOMERS"</span>.<span class="string">"CUST_CITY"</span>=<span class="string">'Tokyo'</span>)</div><div class="line">       filter(<span class="string">"CUSTOMERS"</span>.<span class="string">"CUST_CITY"</span>=<span class="string">'Tokyo'</span>)</div><div class="line">  17 - storage(SYS_OP_BLOOM_FILTER_LIST(SYS_OP_BLOOM_FILTER(:BF0003,<span class="string">"SALES"</span>.<span class="string">"CUST_ID"</span>),SYS_OP_BLOOM_FILTER(:BF0002,<span class="string">"</span></div><div class="line">              SALES".<span class="string">"PROD_ID"</span>),SYS_OP_BLOOM_FILTER(:BF0001,<span class="string">"SALES"</span>.<span class="string">"TIME_ID"</span>)))</div><div class="line">       filter(SYS_OP_BLOOM_FILTER_LIST(SYS_OP_BLOOM_FILTER(:BF0003,<span class="string">"SALES"</span>.<span class="string">"CUST_ID"</span>),SYS_OP_BLOOM_FILTER(:BF0002,<span class="string">"S</span></div><div class="line">              ALES".<span class="string">"PROD_ID"</span>),SYS_OP_BLOOM_FILTER(:BF0001,<span class="string">"SALES"</span>.<span class="string">"TIME_ID"</span>)))</div></pre></td></tr></table></figure></p>
<p>LINE#17がストレージサーバでのBloom Filterの適用を示します。</p>
<blockquote>
<p><code>storage(SYS_OP_BLOOM_FILTER_LIST(SYS_OP_BLOOM_FILTER(:BF0003,&quot;SALES&quot;.&quot;CUST_ID&quot;),SYS_OP_BLOOM_FILTER(:BF0002,&quot;             SALES&quot;.&quot;PROD_ID&quot;),SYS_OP_BLOOM_FILTER(:BF0001,&quot;SALES&quot;.&quot;TIME_ID&quot;)))</code></p>
</blockquote>
<p><br></p>
<p>さらに、Exadataの持つStorage IndexとBloom FilterデータのMin/Max値を利用してさらにデータを絞り込無ことが可能です。これによりBloom FilterによるデータSCAN処理効果が得られます。<br>Storage Indexは、ストレージサーバにおいて、あるデータの格納単位における列データのmin/maxを保持することで、そのデータ格納単位を読み込む必要があるかを判断することができるExadata特有の機能です。<br><a href="https://docs.oracle.com/cd/E50790_01/doc/doc.121/e50471/concepts.htm#SAGUG21112" target="_blank" rel="external">Oracle Exadata Storage Server Software User’s Guide “Improved Join Performance Using Storage Index”</a></p>
<p><img src="/images/photo_20161102_09.png"></p>
<p>例では、min=3,max=3という値でStorage Indexを利用してファクト表のSCANサイズを削減しています。min=3, max=100という幅広い値である場合はStorage Indexの効果は得られないため、この効果はデータ内容に依存したものとなります。</p>
<p><strong>データ内容に依存はするけど、ファクト表のSCANサイズを減らすことができる」ここ重要なポイントです。</strong></p>
<h2 id="5-4-In-Memory機能におけるBloom-Filter"><a href="#5-4-In-Memory機能におけるBloom-Filter" class="headerlink" title="5-4. In-Memory機能におけるBloom Filter"></a><strong>5-4. In-Memory機能におけるBloom Filter</strong></h2><p>ここまで見ていきましたがBloom Filterはたしかに効果はあるのだけど、画期的というほどでもないのが実情でした。具体的にはマニュアルには記載されていないのですが、In-Memory機能がある場合は事情が変わります。<br>ここでの図は全て<a href="http://www.oracle.com/technetwork/jp/ondemand/od12c-coretech-aug2014-2283256-ja.html#anc_08" target="_blank" rel="external">Oracle Database In-Memory詳細編 検索処理の詳細</a>より引用しています。</p>
<p><img src="/images/photo_20161102_10.png"></p>
<p>この絵の例で結果取得までの流れは以下の通りです。（パラレルクエリーでのみ動作します)</p>
<ol>
<li>「店舗」表でBloom Filter（図ではジョンフィルタと書かれています）を作成</li>
<li>「商品」表でBloom Filter作成</li>
<li>「売上」表をスキャン（具体的には謎ですが、列指向なので列ごとにアクセスしているのではないかと推測します。StoreID列でフィルタに該当するものを調査→Prod ID列でフィルタに該当するものを調査→StoraID列、Prod ID列の双方で必要なAmount列という流れでアクセスしていると思われます）</li>
<li>「商品」表でHash結合</li>
<li>「店舗」表とHash結合</li>
</ol>
<p><img src="/images/photo_20161102_11.png"></p>
<p>もう少し具体的なイメージ図は上記のとおりです。<br>(3)「フィルタ条件にマッチするファクト表（最大件数表）の列、行を抽出」の効率化がポイントです。ここではIn-Memoryの備える以下の機能が利用されます。</p>
<ul>
<li>列指向による必要な列のみアクセス</li>
<li>カラムデータ保持単位(IMCU)に設定されているインメモリ・ストレージ索引（ExadataのStorage Indexと同じです)</li>
<li>SIMD(Single Instruction Multiple Data)による効果的な値の比較</li>
</ul>
<p>これらのすべてが利用されることで結合処理が非常に高速で実行可能となります。</p>
<h1 id="6-OracleにおけるBloom-Filterの利用のまとめ"><a href="#6-OracleにおけるBloom-Filterの利用のまとめ" class="headerlink" title="6. OracleにおけるBloom Filterの利用のまとめ"></a><strong>6. OracleにおけるBloom Filterの利用のまとめ</strong></h1><p>ここまでの話をまとめると、以下のようになります。</p>
<table>
<thead>
<tr>
<th style="text-align:left">#</th>
<th style="text-align:left">Bloom Filter適用シーン</th>
<th style="text-align:left">Filter効果</th>
<th style="text-align:left">ファクト表SCAN処理 低減効果</th>
<th style="text-align:left">効果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">5-1</td>
<td style="text-align:left">パーティション表結合</td>
<td style="text-align:left">パーティションの選択</td>
<td style="text-align:left">なし</td>
<td style="text-align:left">効果小</td>
</tr>
<tr>
<td style="text-align:left">5-2</td>
<td style="text-align:left">パラレルクエリ</td>
<td style="text-align:left">スレーブプロセス間転送サイズ</td>
<td style="text-align:left">なし</td>
<td style="text-align:left">効果小</td>
</tr>
<tr>
<td style="text-align:left">5-3</td>
<td style="text-align:left">Exadataストレージサーバ</td>
<td style="text-align:left">ストレージサーバからの転送</td>
<td style="text-align:left">Storage Indexの利用</td>
<td style="text-align:left">効果中</td>
</tr>
<tr>
<td style="text-align:left">5-4</td>
<td style="text-align:left">In-Memory</td>
<td style="text-align:left">スレーブ プロセス間転送サイズ</td>
<td style="text-align:left">列指向型データ保持、In-Memory Strage Index、SIMDの利用</td>
<td style="text-align:left">効果大</td>
</tr>
</tbody>
</table>
<p>Bloom Filterが利用される(5-1)(5-2)(5-3)(5-4)のすべてにおいて、Filter効果（結合対象データの削減）は確かに有効ではあるのですが、パフォーマンス重要なファクト表のSCAN処理の低減効果があるのは(5-3)(5-4)についてとなります。パフォーマンスという点では(5-3)(5-4)の場面で大きな効果が見込めます。</p>
<p>(5-3)はExadataの機能、(5-4)はOracle In-Memoryオプションによる機能ということで、通常のEnterprise Editionにおいては利用できないのは残念です。</p>
<h1 id="7-終わりに"><a href="#7-終わりに" class="headerlink" title="7. 終わりに"></a><strong>7. 終わりに</strong></h1><p>Bloom Filterについて詳しく見ていく中で、Filter自体の効果よりファクト表のSCANサイズを減らすことがパフォーマンス上に効果を与えることが有効であることがわかりました（ある意味当たり前の結論ですが）。この視点で見てみると（Exadataについては特殊なのでおいておくと）Oracle In-Memoryについては本質的には列指向データ保持による効果と言えます。（Oracle In-MemoryはOLTPにも対応しているのでメモリを利用していますが、分析用であればインメモリである必要はないので列指向であることが重要と言えます）</p>
<p>また、データが大規模になるほどBloom Filterの「Bloom Filterは非常に小さいサイズとなることから、「インメモリで保持が可能」「別の処理（プロセス）にフィルタを渡すことが可能」という効果が重要になってきます。そのため、分散DB（シャーディング機能による複数のサーバにおけるデータを分散保持）においてExadataと同じくサーバ間でBloom Filterを渡すことで処理を効率よく結合処理を分散させることができると言えます。</p>
<p><strong>Bloom Filterアルゴリズムは「列指向型データベース」「分散DB」に有効であることから今後も利用が広がると予測されます。</strong></p>
<h1 id="8-さらなる終わりに"><a href="#8-さらなる終わりに" class="headerlink" title="8. さらなる終わりに"></a><strong>8. さらなる終わりに</strong></h1><p>Oracleのマニュアルは読み物としても質が高いためバージョンアップが行われた際は、Oracleに携わることの多いエンジニアの方はぜひ読み込むことをお勧めします。</p>
<p>12c(12.1)のリリースが行われた際に、SQLチューニングについて新しいドキュメントが追加されました。従来「パフォーマンスチューニングガイド」の一部を独立させて、内容を充実させてドキュメントにしたものです。上級者にとっても新しい発見があると思います。</p>
<ul>
<li>Oracle 12c R1のドキュメント &gt; Oracle Database SQLチューニング・ガイド 12cリリース1(12.1)<ul>
<li><a href="http://docs.oracle.com/cd/E49329_01/server.121/b71277/toc.htm" target="_blank" rel="external">http://docs.oracle.com/cd/E49329_01/server.121/b71277/toc.htm</a></li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/photo_20161102_00.png&quot; class=&quot;img-small-size&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-初めに&quot;&gt;&lt;a href=&quot;#1-初めに&quot; class=&quot;headerlink&quot; title=&quot;1. 初めに&quot;&gt;&lt;/
    
    </summary>
    
      <category term="DB" scheme="https://future-architect.github.io/categories/DB/"/>
    
    
      <category term="Oracle" scheme="https://future-architect.github.io/tags/Oracle/"/>
    
      <category term="Bloom_Filter" scheme="https://future-architect.github.io/tags/Bloom-Filter/"/>
    
      <category term="DB" scheme="https://future-architect.github.io/tags/DB/"/>
    
  </entry>
  
  <entry>
    <title>第五回社内LT大会～頑張る人は光るらしい</title>
    <link href="https://future-architect.github.io/articles/20161013/"/>
    <id>https://future-architect.github.io/articles/20161013/</id>
    <published>2016-10-13T02:06:05.000Z</published>
    <updated>2017-03-15T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a><strong>はじめに</strong></h1><p>2016年8月10日（金）に開催された社内LT大会5についてご報告です。</p>
<p>LTとはLightning Talksの略で、持ち時間が5分程度のプレゼンテーションのことです。<br>短い時間で印象に残るということからLightning（稲妻、電光石火）という言葉が使われるようになったそうです。</p>
<h1 id="開催の概要"><a href="#開催の概要" class="headerlink" title="開催の概要"></a><strong>開催の概要</strong></h1><p>LT大会は3つの目的で実施されています！</p>
<ul>
<li>PR/ブランディング</li>
<li>採用（新卒・キャリアの採用チームとも協力）</li>
<li>人材育成（技術力底上げ・プレゼンスキルの向上・社外カンファレンス登壇へのステップアップ）</li>
</ul>
<p>ありがたいことに、会社から予算を頂き公式的な社内行事として活動をさせていただいています。<br>会長からは「大いに盛り上げて下さい」と激励を頂いています！</p>
<p>今回は、社員の他に学生さんが <strong>13名</strong>、社外の社会人登壇者の方が <strong>1名</strong> 参加してくださいました。</p>
<h1 id="発表の様子"><a href="#発表の様子" class="headerlink" title="発表の様子"></a><strong>発表の様子</strong></h1><p>お盆前開催が影響してなのか、過去最高に人が少ないLT大会になってしまいました。汗<br>前向きに捉えると、イベントの開催時期は連休などを避けた方が良いだろうということを学びました。</p>
<p><img src="/images/photo_20161013_01.jpeg"></p>
<p>人がまばらとは言え、武田さん謹製のオリジナルツールのデモはみんなワクワクして食い入るように見ていました。ELKスタック好きをアピールするため、ElasticのTシャツを着るという気合の入りぶりです。笑<br><img src="/images/photo_20161013_02.jpeg"></p>
<p>今回、会場を湧かせたのは学生さんの二人です！<br>LT中に突然、「エナジードリンク」をクーラーボックスから取り出すなど、ウィットに富んだプレゼンで大盛り上がりでした！</p>
<p><img src="/images/photo_20161013_03.jpeg"></p>
<p>IoTネタはみんな興味津々です。<br>でも一番盛り上がったのは最初の掴みのお料理ネタでした。</p>
<p><img src="/images/photo_20161013_04.jpeg"></p>
<h1 id="資料"><a href="#資料" class="headerlink" title="資料"></a><strong>資料</strong></h1><table>
<thead>
<tr>
<th>時間</th>
<th>テーマ</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>ソシャゲ解析～パケットフィルタリング編（谷村さん）</td>
</tr>
<tr>
<td>2</td>
<td>ログモニタリングツールを自作した話（武田さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/qgCbxwLGJmPpPF" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/HirokiTakeda/ss-65958208" title="ログモニタリングツールを自作した話" target="_blank">ログモニタリングツールを自作した話</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/HirokiTakeda">Hiroki Takeda</a></strong> </div></td>
</tr>
<tr>
<td>3</td>
<td>(続々々)FutureのDNAについてのお話（石橋さん）</td>
</tr>
<tr>
<td>4</td>
<td>WindowsでもLinuxコマンド使いたい！そんな時はCygwinでしょ！！（山上さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/vnxBNzGoGZk0WK" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/SanYamagami/20160810ltcygwin" title="20160810-lt-cygwin" target="_blank">20160810-lt-cygwin</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/SanYamagami">Future Architect.Inc</a></strong> </div></td>
</tr>
<tr>
<td>5</td>
<td>某PJ をSpring Bootで書き直してみた（木佐貫さん）</td>
</tr>
<tr>
<td>6</td>
<td>車載IoTネタでなにか（上和田さん：学生さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/EnE0qLQNE8usVU" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/masaokamiwada/20160811-66855840" title="20160811車載" target="_blank">20160811車載</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/masaokamiwada">masao kamiwada</a></strong> </div></td>
</tr>
<tr>
<td>7</td>
<td>学生流   作業効率を114514倍高める方法（中野さん：学生さん） <br><iframe src="//www.slideshare.net/slideshow/embed_code/key/tMLDPy0Jb1c5fO" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/YutoNakano/114514" title="学生流 能率を114514倍高める方法" target="_blank">学生流 能率を114514倍高める方法</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/YutoNakano">Yuto Nakano</a></strong> </div></td>
</tr>
<tr>
<td>8</td>
<td>Struts2でできること（東さん：スペシャルゲスト）</td>
</tr>
<tr>
<td>9</td>
<td>「禅とオートバイ修理技術」に学ぶエンジニア魂（田中（洋）さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/j1ck2YQjLQWP49" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/YosukeTanaka10/futurelt20160810" title="Future_Lt20160810" target="_blank">Future_Lt20160810</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/YosukeTanaka10">Yosuke Tanaka</a></strong> </div></td>
</tr>
<tr>
<td>10</td>
<td>非IT系ですが、特許出願しました。（浅倉さん）</td>
</tr>
</tbody>
</table>
<h1 id="表彰＆贈呈"><a href="#表彰＆贈呈" class="headerlink" title="表彰＆贈呈"></a><strong>表彰＆贈呈</strong></h1><p>気になる投票結果は次のようになりました！<br>最優秀者とブービーの2名の方に豪華プレゼントを進呈しました。<br>以下、司会兼幹事の塚本さんより頂いたコメントと併せて紹介します。</p>
<h2 id="第一位（中野さん）学生流-作業効率を114514倍高める方法）"><a href="#第一位（中野さん）学生流-作業効率を114514倍高める方法）" class="headerlink" title="第一位（中野さん）学生流 作業効率を114514倍高める方法）"></a><strong>第一位（中野さん）学生流 作業効率を114514倍高める方法）</strong></h2><p><img src="/images/photo_20161013_05.png"></p>
<p>レッドブル、GABA（チョコレート）、カフェイン錠剤…<br>勢い良く繰り出される数々のアイテムで、注目を集め、学生さんでは初めて一位となりました。<br>今後の活躍にも大いに期待！</p>
<p>ちなみに、商品はGoProでした。<br>噂に聞くと中野さんは既にGoProを所有しているそうなのですが、何か新しい使いドコロを見つけてほしいと願わんばかりです。</p>
<h2 id="第二位（谷村さん）ソシャゲ解析～パケットフィルタリング編）"><a href="#第二位（谷村さん）ソシャゲ解析～パケットフィルタリング編）" class="headerlink" title="第二位（谷村さん）ソシャゲ解析～パケットフィルタリング編）"></a><strong>第二位（谷村さん）ソシャゲ解析～パケットフィルタリング編）</strong></h2><p>先発発表から、ダークでギークなテーマで、会場のボルテージを一気に上げてくれました。<br>（※ダークすぎるので資料は非公開です）</p>
<h2 id="第三位（浅倉さん）非IT系ですが、特許出願しました。）"><a href="#第三位（浅倉さん）非IT系ですが、特許出願しました。）" class="headerlink" title="第三位（浅倉さん）非IT系ですが、特許出願しました。）"></a><strong>第三位（浅倉さん）非IT系ですが、特許出願しました。）</strong></h2><p>まさかの「化学」系LTです。<br>おもむろに取り出した家庭的なタッパーの中には、可愛らしいマフィンカップに盛られた…コンクリート並に硬い”新素材”が入っていました！<br>自然に土に還るエコな素材とのことで、よくわからないけどなんかすごい！<br>ちなみに「特許出願中につき、資料公開は控えさせてください」という素敵な断れ方をされました。</p>
<h2 id="ブービー（田中さん）「禅とオートバイ修理技術」に学ぶエンジニア魂）"><a href="#ブービー（田中さん）「禅とオートバイ修理技術」に学ぶエンジニア魂）" class="headerlink" title="ブービー（田中さん）「禅とオートバイ修理技術」に学ぶエンジニア魂）"></a><strong>ブービー（田中さん）「禅とオートバイ修理技術」に学ぶエンジニア魂）</strong></h2><p>バイク狂という田中さんが、こじらせ系LTをフルスイングして頂きました。</p>
<p>もはや言葉は不要です。</p>
<p>気になる方は、発表資料を御覧ください。</p>
<h1 id="振り返り"><a href="#振り返り" class="headerlink" title="振り返り"></a><strong>振り返り</strong></h1><p>司会兼幹事を担当された塚本さんより、振り返り内容を頂いています。</p>
<ul>
<li><p><strong>Keep</strong></p>
<ul>
<li>準備は一ヶ月前からが丁度よい</li>
<li>準備関連での不備発生は0件に出来た</li>
</ul>
</li>
<li><p><strong>Problem</strong></p>
<ul>
<li>発表全般LTにしては長い。もっと短く衝撃的に</li>
<li>学生と社員の交流が図れる工夫が少ない。（発表を聞いているだけ）</li>
<li>（お盆前もあり）途中退室者が多い</li>
</ul>
</li>
<li><p><strong>Try</strong></p>
<ul>
<li>発表内容はネタがバラバラになるよう、順番を上手く考えよう</li>
<li>各部署のトップにLTしてもらって、普段参加されない人に来てもらおう</li>
<li>最後にお楽しみ企画を用意して、途中退室者を減らそう</li>
</ul>
</li>
</ul>
<h1 id="お知らせ"><a href="#お知らせ" class="headerlink" title="お知らせ"></a>お知らせ</h1><p>第六回LT大会も開催が決定しています。<br>より多くの人が盛り上がる事が出来るイベントを目指し、新しい仕組みを導入予定です。<br>乞うご期待！</p>
<ul>
<li>開催日時： 2016年11月18日（金）</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;&lt;strong&gt;はじめに&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;2016年8月10日（金）に開催された社内LT大会5についてご報告です。&lt;/p&gt;
&lt;p&gt;L
    
    </summary>
    
      <category term="社内制度" scheme="https://future-architect.github.io/categories/%E7%A4%BE%E5%86%85%E5%88%B6%E5%BA%A6/"/>
    
    
      <category term="社内イベント" scheme="https://future-architect.github.io/tags/%E7%A4%BE%E5%86%85%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/"/>
    
      <category term="slideshare" scheme="https://future-architect.github.io/tags/slideshare/"/>
    
      <category term="Elasticsearch" scheme="https://future-architect.github.io/tags/Elasticsearch/"/>
    
      <category term="Cygwin" scheme="https://future-architect.github.io/tags/Cygwin/"/>
    
  </entry>
  
  <entry>
    <title>「基幹業務もHadoopで!!」のその後　〜性能編〜</title>
    <link href="https://future-architect.github.io/articles/20161005/"/>
    <id>https://future-architect.github.io/articles/20161005/</id>
    <published>2016-10-05T04:34:31.000Z</published>
    <updated>2017-03-15T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/photo_20161005_00.png"></p>
<p>こんにちは、須田です。</p>
<p>今年の初めに<strong>「基幹業務もHadoopで!! -ローソンにおける店舗発注業務へのHadoop + Hive導入と その取り組みについて-」</strong>と題しまして、<a href="http://hadoop.apache.jp/hcj2016-program/" target="_blank" rel="external">Hadoop / Spark Conference Japan 2016</a>にて発表させて頂きました。</p>
<p>カンファレンスでの発表時は絶賛開発中だったこともあり、いかに業務要件を設計/実装に落としていったかという話を中心に行いました。</p>
<p>本エントリでは、<strong>「カンファレンスのその後」</strong>と題しまして、開発後の性能テストを通じて、いかにプロダクト環境に耐えられる品質にまで高めていったのかについて記載します。</p>
<p>ピーク時では数百HiveQL/秒を処理するこのシステムにおいて、どういった課題があり、そのために実施した対策やチューニングポイントについてまとめます。<br>主にHiveおよびYARNを中心にその取り組みについて記載していきます。</p>
<p>ぜひ本エントリを読み進めて頂く前に、カンファレンス時の資料を一読して頂ければと思います。</p>
<p><iframe src="//www.slideshare.net/slideshow/embed_code/key/deltaDtgJAnbpQ" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/keigosuda/hadoop-hadoop-hive" title="基幹業務もHadoopで!! -ローソンにおける店舗発注業務へのHadoop + Hive導入と その取り組みについて-" target="_blank">基幹業務もHadoopで!! -ローソンにおける店舗発注業務へのHadoop + Hive導入と その取り組みについて-</a> </strong> from <strong><a target="_blank" href="//www.slideshare.net/keigosuda">Keigo Suda</a></strong> </div></p>
<p><br></p>
<h2 id="対応内容-ざっと整理"><a href="#対応内容-ざっと整理" class="headerlink" title="対応内容(ざっと整理)"></a><strong>対応内容(ざっと整理)</strong></h2><p>チューニングの一環として検討・確認を行った項目は以下の通りです。</p>
<table>
<thead>
<tr>
<th>対象</th>
<th>対応内容</th>
<th>対応詳細</th>
</tr>
</thead>
<tbody>
<tr>
<td>Hive</td>
<td>クエリチューニング</td>
<td>・パーティショニング <br>・作成ワーク数の削減</td>
</tr>
<tr>
<td>Hive</td>
<td>ファイルフォーマットの変更</td>
<td>-</td>
</tr>
<tr>
<td>Hive</td>
<td>データ圧縮</td>
<td>・圧縮アルゴリズムの選択 <br>・中間データの圧縮 <br>・転送データの圧縮</td>
</tr>
<tr>
<td>Hive</td>
<td>アクセスプランの効率化</td>
<td>・Vectrizationの有効化 <br>・CBO有効化</td>
</tr>
<tr>
<td>Hive</td>
<td>処理プロセス(スレッド数)の効率化</td>
<td>・Reducer数の調整 <br>・Shuffleコネクション数の調整</td>
</tr>
<tr>
<td>Hive</td>
<td>結合処理の最適化</td>
<td>・バケットの利用 <br>・MapJoinの利用</td>
</tr>
<tr>
<td>Hive</td>
<td>リソース利用の最適化</td>
<td>・JVMヒープサイズの変更 <br>・Tezコンテナの再利用</td>
</tr>
<tr>
<td>YARN</td>
<td>コンテナ配布の最適化</td>
<td>・割当コンテナサイズの範囲調整 <br>・コンテナサイズの変更</td>
</tr>
<tr>
<td>YARN</td>
<td>スケジューラ調整</td>
<td>・スケジューラの変更 <br>・処理用キューの設定</td>
</tr>
<tr>
<td>HDFS</td>
<td>NameNode関連</td>
<td>・NameNode処理スレッド数調整</td>
</tr>
<tr>
<td>その他</td>
<td>システム構成変更</td>
<td>タスクインスタンスグループの追加</td>
</tr>
</tbody>
</table>
<p>上記に記した項目は一通り性能数値を取得し比較検討を行ったものです。<br>中にはそもそも採用に至らなかったものもあります。</p>
<p>今回は上記の中でも特に効果のあったものや、本システムで特徴的だったもののみをピックアップして取り扱います。<br>以下のパートに分けてこの後対応内容の詳細について記載します。</p>
<ul>
<li><strong>1. Hive編</strong></li>
<li><strong>2. YARN編</strong></li>
</ul>
<p><br></p>
<h1 id="1-Hive編"><a href="#1-Hive編" class="headerlink" title="1. Hive編"></a><strong>1. Hive編</strong></h1><p>まずはHiveに関連するチューニング対応の内容について記載します。<br>対応内容としては大きく以下の2つです。</p>
<ul>
<li><strong>1-1. HiveQLチューニング</strong></li>
<li><strong>1-2. Hiveパラメータチューニング</strong></li>
</ul>
<p>対応した内容の中でも効果が大きかったもの、本システムに特徴的なものを中心に取り上げていきます。</p>
<h2 id="1-1-HiveQLチューニング"><a href="#1-1-HiveQLチューニング" class="headerlink" title="1-1. HiveQLチューニング"></a><strong>1-1. HiveQLチューニング</strong></h2><p>HiveQLのチューニングは正攻法で行っています。</p>
<p>開発に入る前にHiveQLのコーディング規約を整備しておいたおかげで、処理負荷が特定ノードに寄ってしまうような処理(ソート処理など)は最低限に留めることができていました。<br>そのため、チューニングの観点としては以下にHiveにとって効率的に処理ができるようにワーク作成処理を組み替えていくか、作りかえていくかというものでした。</p>
<p>主に実施したHiveQLチューニングは以下の通りです。</p>
<ul>
<li><strong>a) 作成ワーク数の削減</strong></li>
<li><strong>b) パーティション作成の廃止</strong></li>
</ul>
<p><br></p>
<h3 id="a-作成ワーク数の削減"><a href="#a-作成ワーク数の削減" class="headerlink" title="a) 作成ワーク数の削減"></a><strong>a) 作成ワーク数の削減</strong></h3><p>ソースコードおよびHive実行プランの可読性を上げる(効率の悪い書き方をしているクエリがないかといったレビュー観点でも見通しが良くなる)ために小さい単位でワーク作成処理を行うことを大方針としていました。<br>そのため、HiveQLの開発規約の中ではワークテーブルの作成基準を明確にしていました。<br>例えば以下のような感じです。</p>
<ul>
<li><strong>１ワーク処理の中での結合数に上限を設け、その上限を超えるようであればワークを分割する</strong></li>
<li><strong>インラインビューが2段階以上になる場合はワークを分割する  etc</strong></li>
</ul>
<p><br></p>
<p>基本的には規約に基づくワーク分割の方針で問題なかったのですが、規約に厳密に則ったために、かえって不効率なワーク処理も見受けられました。<br>例えば、1つのクエリで結合できるテーブル数に上限(最大5としていました)を設けていたために、同一のワークテーブルに追記していくような処理も、クエリが分割されていました。<br>そのためさばくデータ量的にも一つのクエリとしてまとめあげて処理した方がIO効率が良さそうな処理も細かく割れてしまってました。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">//これまでは規約に則っていたので、以下のようにクエリが分割されてしまっているものもあった</div><div class="line"></div><div class="line"><span class="comment">-- *****************************************************************************</span></div><div class="line"><span class="comment">-- 処理名　　xxxxxx</span></div><div class="line"><span class="comment">-- 処理概要   xxxxxx</span></div><div class="line"><span class="comment">-- *****************************************************************************</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span></div><div class="line">    WORK_TABLE</div><div class="line"><span class="keyword">SELECT</span></div><div class="line">	COL1</div><div class="line">,	COL2</div><div class="line">,	COL3</div><div class="line"><span class="keyword">FROM</span></div><div class="line">	TABLE02</div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></div><div class="line">	COL1</div><div class="line">,	COL2</div><div class="line"><span class="keyword">HAVING</span></div><div class="line">	<span class="keyword">MAX</span>(COL3)	!=	<span class="string">'some_value'</span></div><div class="line">;</div><div class="line"></div><div class="line"><span class="comment">-- *****************************************************************************</span></div><div class="line"><span class="comment">-- 処理名　　xxxxxx</span></div><div class="line"><span class="comment">-- 処理概要   xxxxxx</span></div><div class="line"><span class="comment">-- *****************************************************************************</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span></div><div class="line">    WORK_TABLE</div><div class="line"><span class="keyword">SELECT</span></div><div class="line">	COL1</div><div class="line">,	COL2</div><div class="line">,	COL3</div><div class="line"><span class="keyword">FROM</span>	TABLE03</div><div class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></div><div class="line">	TABLE04</div><div class="line"><span class="keyword">ON</span></div><div class="line">	TABLE03.COL1	=	TABLE04.COL1</div><div class="line"><span class="keyword">WHERE</span></div><div class="line">	TABLE03.COL2	=	<span class="string">'some_value'</span></div><div class="line">;</div></pre></td></tr></table></figure>
<p>こういった同一のワークテーブルへのSELECT INSERT処理のようなものはUNION(もしくはUNION ALL)などでまとめあげて1処理に集約していきました。</p>
<p>UNION(もしくはUNION ALL)で繋ぐぶんには、コメントで区切るなどで極端なソースの可読性劣化もなかったので許容することにしました。<br>また、プランの可読性についても、UNION ALLでまとめていく分には、どこが処理の境目になっているかがわかりやすいので、依然として把握しやすい状態を保てていたため特段問題とはなりませんでした。</p>
<p><br></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">//同一ワークテーブルへの追記処理はまとめあげる</div><div class="line"></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span></div><div class="line">    WORK_TABLE</div><div class="line"><span class="keyword">SELECT</span></div><div class="line">	COL1</div><div class="line">,	COL2</div><div class="line">,	COL3</div><div class="line"><span class="keyword">FROM</span></div><div class="line">	TABLE02</div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></div><div class="line">	COL1</div><div class="line">,	COL2</div><div class="line"><span class="keyword">HAVING</span></div><div class="line">	<span class="keyword">MAX</span>(COL3)	!=	<span class="string">'some_value'</span></div><div class="line"><span class="keyword">UNION</span> ALL</div><div class="line"><span class="comment">-- *****************************************************************************</span></div><div class="line"><span class="comment">-- 処理名　　xxxxxx</span></div><div class="line"><span class="comment">-- 処理概要   xxxxxx</span></div><div class="line"><span class="comment">-- *****************************************************************************</span></div><div class="line"><span class="keyword">SELECT</span></div><div class="line">	COL1</div><div class="line">,	COL2</div><div class="line">,	COL3</div><div class="line"><span class="keyword">FROM</span>	TABLE03</div><div class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></div><div class="line">	TABLE04</div><div class="line"><span class="keyword">ON</span></div><div class="line">	TABLE03.COL1	=	TABLE04.COL1</div><div class="line"><span class="keyword">WHERE</span></div><div class="line">	TABLE03.COL2	=	<span class="string">'some_value'</span></div><div class="line"><span class="keyword">UNION</span> ALL</div><div class="line">・・・・</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="b-パーティション作成の廃止"><a href="#b-パーティション作成の廃止" class="headerlink" title="b) パーティション作成の廃止"></a><strong>b) パーティション作成の廃止</strong></h3><p>パーティション作成はいわゆるHiveにおける王道チューニングかもしれませんが、本システムでは利用していません。<br>当初は全マスタデータ作成処理の結合時に利用される共通キー(店舗コード)をもとにdynamic partitionによる動的パーティショニングを実施していました。<br>実際に本番相当の各種データを準備してみると、全部が全部巨大なデータサイズではなかったこともあり、逆に無理にパーティショニングすることで以下の弊害がありました。</p>
<ul>
<li><strong>パーティション後のファイルサイズが小さくなりがちで、結果IO効率が悪くなっていった</strong></li>
<li><strong>パーティション作成処理のオーバーヘッドの積み重ねが処理時間のウェイトを占めるようになっていた</strong></li>
</ul>
<p><br></p>
<p>本システムで主に扱うのがマスタデータということもあり、その性質上トランザクション系のデータに比べてボリュームがそれほど大きくないということから、パーティションは作成せずパワーでやりきる方が全体としてパフォーマンスが良い結果となりました。</p>
<p><br></p>
<h2 id="1-2-Hiveパラメータチューニング"><a href="#1-2-Hiveパラメータチューニング" class="headerlink" title="1-2. Hiveパラメータチューニング"></a><strong>1-2. Hiveパラメータチューニング</strong></h2><p>特に効果があった対応としては以下のものでした。</p>
<ul>
<li><strong>a) Hive on Tezへの変更</strong></li>
<li><strong>b) MapJoinの積極的活用</strong></li>
<li><strong>c) Reducer数の変更</strong></li>
<li><strong>d) 圧縮とファイルフォーマット</strong></li>
</ul>
<p><br></p>
<h3 id="a-Hive-on-Tezへの変更"><a href="#a-Hive-on-Tezへの変更" class="headerlink" title="a) Hive on Tezへの変更"></a><strong>a) Hive on Tezへの変更</strong></h3><p>発表当時は以下の理由によりHiveエンジンの実行エンジンMapReduceを利用していました。</p>
<ul>
<li><strong>当時のEMRの公開バージョンではTezが正式サポートされていなかった</strong></li>
<li><strong>巨大なデータの結合を繰り返す処理が多く、オンメモリでの扱いに慎重だった</strong></li>
</ul>
<p><br></p>
<p>前者については、EMRの起動時にインストールアプリケーションとして標準で提供されていなかったことをさしています。<br>EMRへのTezインストールスクリプトは提供されていたため、ステップ処理でインストール処理を記述すればインストール自体は可能だったため、事前検証は上記提供スクリプトを利用していました。</p>
<p>また、後者ですが確実にクエリが流れ切るということを重視し、必ずディスクを介するMapReduceでの処理する方が安心感がありました。</p>
<p>しかし、開発後の性能テストにて本番相当のデータ量を用いてテストを実施すると、どうしてもMapReduce特有のオーバーヘッドやディスクIOによるIOネックが顕著になってしまい、思っていた以上に処理性能が出ませんでした。</p>
<p>特に本システムの開発においては、ソースコードおよびHiveQL実行プランの可読性を重視するため、なるべくワークテーブルは小さく保ち、小さいワークテーブルを経ながら処理を実施する方針としていたために、上記のオーバーヘッドがチリツモで大きくなっていました。</p>
<p>そんな矢先、EMRバージョン4.7にて正式にTezサポートされたこともあり、Hiveの実行エンジンをMapReduceからTezへ切り替えることにしました。<br>その結果、Tezへの切り替えのみで処理時間をおよそ<strong>1/3</strong>にまで減らすことができました。</p>
<p>以下はデータノードのHDFSへのデータ読み取り・書き込み時のブロック操作数ですが、かなり顕著に差が出ていました。</p>
<p><img src="/images/photo_20161005_01.png"></p>
<p><img src="/images/photo_20161005_02.png"></p>
<p>しかし、メモリ関連のパラメータチューニングは必須で、そのためメモリ関連のパラメータ、特にYARNでのTezコンテナサイズの調整をメインに対応していきました。<br>この詳細については後半の<strong>YARN編</strong>にて記載します。</p>
<p><br></p>
<h3 id="b-MapJoinの積極的活用"><a href="#b-MapJoinの積極的活用" class="headerlink" title="b) MapJoinの積極的活用"></a><strong>b) MapJoinの積極的活用</strong></h3><p>本システムでは実行されるクエリ数も多く、各クエリを見極めてヒント句でMapJoinに縛るのが難しかったこともあり、以下パラメータにより自動的にMapJoinへ誘導する運用としました。</p>
<ul>
<li><strong>hive.auto.convert.join</strong></li>
<li><strong>hive.auto.convert.join.noconditionaltask.size</strong></li>
</ul>
<p><strong>hive.auto.convert.join.noconditionaltask.size</strong>の値ですが、これは性能テストの中で本番相当のデータ量をもとに実行サイズを調整していきました。</p>
<p><br></p>
<h3 id="c-Reducer数の変更"><a href="#c-Reducer数の変更" class="headerlink" title="c) Reducer数の変更"></a><strong>c) Reducer数の変更</strong></h3><p>Tezの変更により、中間データのディスクIOは減らせたものの、最終的にできあがるマスタデータのうち、データサイズが大きなものは依然として最後のHDFSへのファイル書き込みがボトルネックとなってしまっていました。</p>
<p>そこで以下パラメータにより起動するReducer数を調整していきました。</p>
<ul>
<li><strong>hive.exec.reducers.bytes.per.reducer</strong></li>
</ul>
<p><br></p>
<p>最後の書き込み処理だけを考慮してReducer数を起動しすぎてしまうと、ワーク処理の過程にも影響がでてしまう(プロセスが起動しすぎてしまう)のもあり、これは性能テストの中で調整をしていきました。<br>現状は<strong>一律64MB</strong>としています。</p>
<p>Reducer数を上げすぎてしまうと、ファイルが小さくなりすぎてIO効率が悪くなってしまうのではないかと思われるかもしれません。<br>本システムにおいては、最終的にできあがったマスタデータはRDSへエクスポートして利用されます。<br>そのため、できあがったマスタデータが細かくファイルが割れてしまったとしても、直接EMRに対して検索クエリを実行するわけではなかったので、このような対応としました。</p>
<p><br></p>
<h3 id="d-圧縮とファイルフォーマット"><a href="#d-圧縮とファイルフォーマット" class="headerlink" title="d) 圧縮とファイルフォーマット"></a><strong>d) 圧縮とファイルフォーマット</strong></h3><p>これもまたまた王道チューニングですね。<br>圧縮オプションとファイルフォーマットの組み合わせは、ファイル分割が可能な組み合わせとなるよう考慮し、性能テストの中で最も性能がよかった以下の組み合わせを採用しています。</p>
<ul>
<li>ファイルフォーマット：SequeanceFile</li>
<li>圧縮オプション: Snappy</li>
</ul>
<p><br></p>
<p>実現可能な組み合わせのパターンは一通り試したのですが、本システムでは結合をメインとしたワーク処理を積み重ねていく処理のためか、ORCなどのカラムなファイルフォーマットだと処理性能が出ず、Sequence Fileを採用することになりました。</p>
<p><br></p>
<h1 id="2-YARN編"><a href="#2-YARN編" class="headerlink" title="2. YARN編"></a><strong>2. YARN編</strong></h1><p>本システムで一番肝となったのがYARN関連の対応でした。<br>具体的には以下の対応を中心に実施しました。</p>
<ul>
<li><strong>2-1. コンテナサイズの調整</strong></li>
<li><strong>2-2. 処理特性に応じたキュー設定</strong></li>
</ul>
<p>なおYARNの基本的な仕組みについての説明は省略いたしますのでご了承ください。</p>
<p><br></p>
<h2 id="2-1-コンテナサイズの調整"><a href="#2-1-コンテナサイズの調整" class="headerlink" title="2-1. コンテナサイズの調整"></a><strong>2-1. コンテナサイズの調整</strong></h2><p>今回YARNのリソースコントロール配下におかれるアプリケーションは以下でした。</p>
<ul>
<li><strong>a) MRアプリケーション(Apache Sqoopで利用)</strong></li>
<li><strong>b) Tezアプリケーション</strong></li>
</ul>
<p>アプリケーションごとに基準となるコンテナサイズ(主にメモリサイズ)を変えています。</p>
<p><br></p>
<h3 id="a-MRアプリケーション"><a href="#a-MRアプリケーション" class="headerlink" title="a) MRアプリケーション"></a><strong>a) MRアプリケーション</strong></h3><p>MRアプリケーションについて、SqoopによるRDSからのインポート/エクスポート処理はsqoopコマンド実行時にmap数の指定が可能です。<br>そのため、消費コンテナ数を調整可能なので、パフォーマンスは落とさず1コンテナあたりのメモリサイズをどこまで減らすことができるかという観点でメモリサイズの調整行っていきました。</p>
<p><br></p>
<h3 id="b-Tezアプリケーション"><a href="#b-Tezアプリケーション" class="headerlink" title="b) Tezアプリケーション"></a><strong>b) Tezアプリケーション</strong></h3><p>Tezアプリケーションの場合、Sqoopのような利用コンテナ数の調整は難しいため、性能テストの中でコンテナサイズを調整していきました。<br>主に以下の観点でコンテナサイズの調整を実施しました。</p>
<ul>
<li><strong>MapJoinを行えるだけのメモリ確保が可能か(同時にhive.auto.convert.join.noconditionaltask.sizeの調整も実施)</strong></li>
<li><strong>同時実行されるジョブ数に割り当てられるだけのコンテナサイズの確保が可能か</strong></li>
</ul>
<p><br></p>
<p>なおコンテナサイズで指定したメモリの利用内訳については、下記を参考にしました。</p>
<blockquote>
<p><a href="https://community.hortonworks.com/articles/14309/demystify-tez-tuning-step-by-step.html" target="_blank" rel="external">Demystify Apache Tez Memory Tuning - Step by Step</a></p>
</blockquote>
<p>これはもう地道に様々なコンテナサイズで処理を回してみて、適切な値を出しました。<br>最終的にTezアプリケーションでのコンテナサイズは<strong>メモリ4GB・vCPU1コア/コンテナ</strong>が標準として落ち着きました。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-- コンテナサイズ</div><div class="line">SET hive.tez.container.size=4096;</div><div class="line">SET hive.tez.java.opts=-Xmx3200m;</div><div class="line">SET hive.tez.cpu.vcores=1;</div></pre></td></tr></table></figure>
<p>ただし、Hive編で記載した通り、MapJoinに処理をよせるにあたり、作成するマスタデータによってはコンテナあたりのメモリサイズを大きくする必要がありました。<br>そういったマスタデータ作成処理のみ例外的にコンテナのメモリサイズを大きくするといった対応を実施しています。</p>
<p>なお、処理ピーク時に同時稼働ジョブがかなり多くこともあり、なるべくクラスタトータルでメモリの使用を抑えたかったこともあり、TezアプリケーションもMRアプリケーションも起動するApplication Master用のコンテナサイズをデフォルトから小さくしています。</p>
<p><br></p>
<h2 id="2-2-処理特性に応じたキュー設定"><a href="#2-2-処理特性に応じたキュー設定" class="headerlink" title="2-2. 処理特性に応じたキュー設定"></a><strong>2-2. 処理特性に応じたキュー設定</strong></h2><p>本システムではピーク時では常に数百のクエリを処理し続けるといったかなりハードワークです。<br>また作成するマスタデータごとに処理の複雑度合や利用するテーブルのデータサイズなどかなりまちまちです。<br>そのため、作成するマスタデータの業務優先度やそのワークロードに応じたリソース配分が必要となりました。</p>
<p>そのために以下の対応を実施しました。</p>
<ul>
<li><strong>a) YARNのスケジューラの変更</strong></li>
<li><strong>b) 業務優先度や処理特性に応じたキュー設定とリソース制御</strong></li>
</ul>
<p><br></p>
<h3 id="a-YARNのスケジューラ変更"><a href="#a-YARNのスケジューラ変更" class="headerlink" title="a) YARNのスケジューラ変更"></a><strong>a) YARNのスケジューラ変更</strong></h3><p>YARNのデフォルトのスケジューラはFIFO(First in First Out)であるため、最初に実行されたジョブに利用可能なコンテナをほとんど持って行かれてしまい、同時に複数ジョブを投入してもペンディングが多発していました。<br>そのためジョブの実行多重度をあげるために他のスケジューリングアルゴリズムを採用することにしました。</p>
<p>YARNでは他にFair Scheduler、Capacity Schedulerといったスケジューリングアルゴリズムを選択可能なのですが、今回はFair Schedulerを採用することにしました。</p>
<p>Capacity Schedulerでは、利用リソース量に基づいたスケジューリングが可能なのです。</p>
<p>ただFair Shcedulerでもキュー単位でリソース使用量や重み付けが可能であったのと、Capacity Schedulerの場合、キュー間ではリソース利用に応じて細かな制御は可能なのですが、同一キューに投入されたジョブはFIFOで処理されていたため、今回の要件には少し不足気味だったため採用を見送りました。(もしかしたら挙動を変える方法があった・・・？)</p>
<p><br></p>
<h3 id="b-業務優先度や処理特性に応じたキュー設定とリソース制御"><a href="#b-業務優先度や処理特性に応じたキュー設定とリソース制御" class="headerlink" title="b) 業務優先度や処理特性に応じたキュー設定とリソース制御"></a><strong>b) 業務優先度や処理特性に応じたキュー設定とリソース制御</strong></h3><p>クラスタ上で複数のジョブが同時に走るようになったものの、FairSchedulerでは特に設定をしない限りはクラスタに投入されたジョブはみな等しくリソースが按分されて処理が行われます。</p>
<p>そのため、それほどリソースを利用しなくても処理が十分回るもの、そうでないものも全て同じくリソースが按分されることになります。</p>
<p>今回のバッチ処理の特性としては、実行多重度がかなり高く、ひとつひとつの作成処理量の重さもばらつきがあります。</p>
<p>そのため、同時に処理する量が増えてくるほど一向に処理が完了しないマスタ作成処理もでてきてしまうといった事態が発生していました。</p>
<p>そこで必要となるリソース量や業務的な優先度を鑑みて、ジョブを投入するキューを分けることにしました。<br>キュー見直し後の構成は以下のようになりました。</p>
<p><img src="/images/photo_20161005_03.png"></p>
<p>キュー単位に指定している利用可能なリソースウェイトですが、これは最大ピーク時の多重度を考慮した割合としています。<br>実際に性能数値を確認しながら最も全体として短い時間で終わるような重み付けを探っていった具体です。<br>そのため、ピーク時間帯以外で他キューに空きがあればその分のリソースを他キューからも利用できるようにしています。</p>
<p>キュー単位でのリソース制御ですが、リソースを絶対量で指定もできますが、割合による重み付けを利用しています。<br>理由としては、今後クラスタサイズが変更になりトータルのリソース量が変わってしまった際に都度細かな数値を見直さなくても大丈夫なようにするためです。</p>
<h2 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a><strong>最後に</strong></h2><p>ざっとですが、これまでの取り組みについて記載しました。<br>実はもう一つ大きな戦いがあって、EMRで作成したマスタデータをAPI参照のためにRDS(MySQL)へSqoopでエクスポートする処理がなかなか性能がでず、ごりごりMySQLチューニングを実施した話とか、その頑張りをあっさりAmazon Auroraに追いつかれてしまった話などまだまだ話は尽きないのですが、それはまた別の機会に。</p>
<p>お付き合い頂きありがとうございました。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/photo_20161005_00.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;こんにちは、須田です。&lt;/p&gt;
&lt;p&gt;今年の初めに&lt;strong&gt;「基幹業務もHadoopで!! -ローソンにおける店舗発注業務へのHadoop + Hive導入と その取り組
    
    </summary>
    
      <category term="開発" scheme="https://future-architect.github.io/categories/%E9%96%8B%E7%99%BA/"/>
    
    
      <category term="Hadoop" scheme="https://future-architect.github.io/tags/Hadoop/"/>
    
      <category term="Hive" scheme="https://future-architect.github.io/tags/Hive/"/>
    
      <category term="YARN" scheme="https://future-architect.github.io/tags/YARN/"/>
    
      <category term="AWS" scheme="https://future-architect.github.io/tags/AWS/"/>
    
      <category term="EMR" scheme="https://future-architect.github.io/tags/EMR/"/>
    
  </entry>
  
  <entry>
    <title>マネージャーがうれしいRedmineデータのグラフ表示方法を公開します！！</title>
    <link href="https://future-architect.github.io/articles/20160920/"/>
    <id>https://future-architect.github.io/articles/20160920/</id>
    <published>2016-09-20T09:00:00.000Z</published>
    <updated>2017-03-15T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/photo_20160928_00.jpg" alt=""></p>
<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>こんにちは。近藤です。</p>
<p>みなさん、Redmineを使っていますか？</p>
<p>私は使っています。Redmineはタスクをチケット管理する上で便利ですよね。</p>
<p>一方で、Redmineにはデータの可視化機能が標準で搭載されていないという課題があります。</p>
<p>例えばこれが、標準のサマリ画面。グラフがないから傾向とか分かりづらいんですよね。。</p>
<p><img src="/images/photo_20160928_01.png" alt=""><br>参考:<a href="http://www.redmine.org/projects/redmine/issues/report" target="_blank" rel="external">redmine.org</a></p>
<p>そこで、本日はKibana＋Timelionを使ってRedmineデータをグラフ表示する方法を紹介します。</p>
<p>例えば、Kibana+Timelionを利用すると、チケット発生件数の4週移動平均を簡単に表示することができるのです。</p>
<p><img src="/images/photo_20160928_02.png" alt=""></p>
<p>これがあれば、平均して毎週どれくらいのタスクが発生しているかが分かりますね。（このテストデータの場合は9月時点で毎週28件のタスクが発生している）</p>
<p>では早速、Kibana+Timelionを使ってみましょう。</p>
<p>なお、下記を前提としています。</p>
<ul>
<li>Windows環境で構築する。</li>
<li>Redmineのデータベース(MySQL)に直接接続する。</li>
</ul>
<h2 id="大まかな流れ"><a href="#大まかな流れ" class="headerlink" title="大まかな流れ"></a>大まかな流れ</h2><p>下記の手順でグラフを表示します。</p>
<ol>
<li>ELKのインストール</li>
<li>RedmineデータをELKに取り込む</li>
<li>グラフ表示</li>
</ol>
<h2 id="1-ELKのインストール"><a href="#1-ELKのインストール" class="headerlink" title="1.ELKのインストール"></a>1.ELKのインストール</h2><p>はじめに、ELKの説明です。</p>
<p>ELKはelastic社が提供する、データ可視化OSSの総称。</p>
<p>Elastic Search＋Logstash＋Kibanaそれぞれの頭文字をとって、ELKと呼びます。</p>
<p>今回、ELKを利用して、Redmineデータの可視化環境を構築します。</p>
<p><img src="/images/photo_20160928_03.png" alt=""></p>
<p>ではまず、Elastic Searchをダウンロードします。</p>
<p>◆Elastic Search Download URL</p>
<p><a href="https://www.elastic.co/jp/downloads/elasticsearch" target="_blank" rel="external">https://www.elastic.co/jp/downloads/elasticsearch</a></p>
<p>→私の場合は、「Elasticsearch 2.4.0」をダウンロードしました。</p>
<p>次に、Kibanaをダウンロード。</p>
<p>◆Kibana Download URL</p>
<p><a href="https://www.elastic.co/downloads/kibana" target="_blank" rel="external">https://www.elastic.co/downloads/kibana</a></p>
<p>→私の場合は、「Kibana 4.6.1」をダウンロードしました。</p>
<p>最後に、Logstashをダウンロードします。</p>
<p>◆Logstash Download URL</p>
<p><a href="https://www.elastic.co/downloads/logstash" target="_blank" rel="external">https://www.elastic.co/downloads/logstash</a></p>
<p>→私の場合は、「Logstash 2.4.0 All Plugins」をダウンロードしました。</p>
<p>次に、「c:\elastic」というフォルダを作成。そこへ、それぞれのダウンロードした圧縮ファイルを解凍し配置します。</p>
<p>最終的には下記のようなフォルダ構成になります。</p>
<p><img src="/images/photo_20160928_04.png" alt=""></p>
<h2 id="2-RedmineデータをELKに取り込む"><a href="#2-RedmineデータをELKに取り込む" class="headerlink" title="2.RedmineデータをELKに取り込む"></a>2.RedmineデータをELKに取り込む</h2><p>まず、JDBCドライバをダウンロードします。</p>
<p>私のRemineはMysqlを利用しているので、今回はMysqlのJDBCドライバーをインストールしました。</p>
<p>◆Mysql JDBC ドライバ URL</p>
<p><a href="https://dev.mysql.com/downloads/connector/j/" target="_blank" rel="external">https://dev.mysql.com/downloads/connector/j/</a></p>
<p>→私の場合は、「Platform Independent (Architecture Independent), ZIP Archive」をダウンロードしました。</p>
<p>ダウンロードしたファイル内の「mysql-connector-java-5.1.39-bin.jar」というファイルを、<br>「C:\elastic\logstash-all-plugins-2.4.0\logstash-2.4.0\bin」以下に配置します。</p>
<p>次に、「redmine.txt」というファイルを作成。中身は下記のようにします。（★を含む箇所は皆様の環境に合わせた値へ変えて下さい。）</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line">    jdbc &#123;</div><div class="line">        jdbc_connection_string =&gt; "jdbc:mysql://★IP★:3306/★サービス名★"</div><div class="line">        jdbc_user =&gt; "★ユーザ名★"</div><div class="line">        jdbc_password =&gt; "★パスワード★"</div><div class="line">        jdbc_driver_library =&gt;"mysql-connector-java-5.1.39-bin.jar"</div><div class="line">        jdbc_driver_class =&gt; "com.mysql.jdbc.Driver"</div><div class="line">        statement =&gt; "</div><div class="line">select</div><div class="line">	*</div><div class="line">from</div><div class="line">	issues</div><div class="line">"</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">output &#123;</div><div class="line">    elasticsearch &#123;</div><div class="line">	document_id =&gt; "%&#123;id&#125;"</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>「redmine.txt」も「C:\elastic\logstash-all-plugins-2.4.0\logstash-2.4.0\bin」に配置。</p>
<p>結果的に、下記のようなフォルダ構成になります。</p>
<p><img src="/images/photo_20160928_05.png" alt=""></p>
<p>では、ElasticSearchを実行します。ElasticSearchのbinフォルダで下記のコマンドを実行。</p>
<p><code>elasticsearch.bat</code></p>
<p><img src="/images/photo_20160928_06.png" alt=""></p>
<p>次にLogstashを使って、RedmineのデータをElasticSearchへ取り込みます。Logstashのbinフォルダで下記コマンドを実行。</p>
<p><code>logstash.bat -f redmine.txt</code></p>
<p><img src="/images/photo_20160928_07.png" alt=""></p>
<p>取り込みが完了しました。</p>
<p><img src="/images/photo_20160928_08.png" alt=""></p>
<h2 id="3-グラフ表示"><a href="#3-グラフ表示" class="headerlink" title="3.グラフ表示"></a>3.グラフ表示</h2><p>最初に、timelionをインストールします。kibanaのbinフォルダで下記のコマンドを実行。</p>
<p><code>kibana plugin -i elastic/timelion</code></p>
<p><img src="/images/photo_20160928_09.png" alt=""></p>
<p>次に、Kibanaを起動します。下記のコマンドを実行。</p>
<p><code>kibana.bat</code></p>
<p><img src="/images/photo_20160928_10.png" alt=""></p>
<p>Kibanaが起動しました。</p>
<p><img src="/images/photo_20160928_11.png" alt=""></p>
<p>では、Kibanaを表示します。ブラウザで <code>http://localhost:5601</code>を開く。</p>
<p><img src="/images/photo_20160928_12.png" alt=""></p>
<p>[Configure an index pattern]という画面が開くので、[Time-field name]に”created_on”を指定します。</p>
<p>そして、[Create]をクリック。</p>
<p><img src="/images/photo_20160928_13.png" alt=""></p>
<p>[★logstash-*]という画面が開くので、画面上部一番右のブロックボタンをクリック。</p>
<p>次に[Timelion]ボタンをクリックします。</p>
<p><img src="/images/photo_20160928_14.png" alt=""></p>
<p>[Welcome to timelion]という画面が開きます。</p>
<p>[Don’t show again]をクリック。</p>
<p><img src="/images/photo_20160928_15.png" alt=""></p>
<p>これでグラフ表示は完了です。</p>
<p>では、実際にRedmineにおける週別チケット発生数のグラフを表示してみます。</p>
<h2 id="週別チケット発生数のグラフ表示"><a href="#週別チケット発生数のグラフ表示" class="headerlink" title="週別チケット発生数のグラフ表示"></a>週別チケット発生数のグラフ表示</h2><p>まず、右上の[Last 15 minutes]をクリック。画面上部真ん中の”Last 1 years”をクリックします。</p>
<p>そうすると、直近1年間以内に登録されたチケットの情報が表示されます。</p>
<p><img src="/images/photo_20160928_16.png" alt=""></p>
<p>次に、右側の”auto”を”1w”に変更。</p>
<p>左下の”Full screen”をクリックします。</p>
<p><img src="/images/photo_20160928_17.png" alt=""></p>
<p>そして、<code>.es(*)</code>という記載を<br><code>.es(metric=&#39;count:id&#39;, timefield=&#39;created_on&#39;).label(&#39;【週別】open&#39;).bars()</code><br>に変更します。</p>
<p>すると、週ごとの発生チケット数が棒グラフで表示されます。</p>
<p><img src="/images/photo_20160928_18.png" alt=""></p>
<p>次に、<br><code>.es(metric=&#39;count:id&#39;, timefield=&#39;created_on&#39;).label(&#39;【週別】open&#39;).bars(),.es(metric=&#39;count:id&#39;, timefield=&#39;created_on&#39;).movingaverage(4).label(&#39;【4週移動平均】open&#39;)</code><br>という記載に変更します。</p>
<p>すると、発生チケット数の4週移動平均が折れ線グラフで表示されます。</p>
<p>timelion便利ですね！</p>
<p><img src="/images/photo_20160928_19.png" alt=""></p>
<p>そして、<br><code>.es(metric=&#39;count:id&#39;, timefield=&#39;created_on&#39;).label(&#39;【週別】open&#39;).bars(),.es(metric=&#39;count:id&#39;, timefield=&#39;created_on&#39;).movingaverage(4).label(&#39;【4週移動平均】open&#39;),.es(metric=&#39;count:id&#39;, timefield=&#39;created_on&#39;).cusum().label(&#39;[累積]open&#39;),.es(metric=&#39;count:id&#39;, timefield=&#39;closed_on&#39;).cusum().label(&#39;[累積]close&#39;)</code><br>という記載に変更すると、累積のチケット発生数、累積のチケットクローズ数が表示されます。</p>
<p><img src="/images/photo_20160928_20.png" alt=""></p>
<p>これがあると、</p>
<ul>
<li>全部でどれくらいのチケットが発生しているの？</li>
<li>全部でどれくらいのチケットが対応完了しているの？</li>
<li>週にどれくらいのチケットが発生しているの？</li>
</ul>
<p>という問いに回答できますね。</p>
<p>例えば、チームの増員要否についても検討出来そうです。</p>
<h2 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a>最後に</h2><p>今回は、累積グラフと、移動平均グラフを表示しました。</p>
<p>それ以外のグラフも簡単に追加することが可能です。</p>
<p>詳しくは下記Timelionのリファレンスをご参照ください。</p>
<p>◆Timelion function reference</p>
<p><a href="https://github.com/elastic/timelion/blob/master/FUNCTIONS.md" target="_blank" rel="external">https://github.com/elastic/timelion/blob/master/FUNCTIONS.md</a></p>
<p><br></p>
<p>いかがでしたでしょうか？RedmineをKibana＋Timelionと組み合わせることで、グラフ表示が可能になり、結果的にプロジェクト状況の把握が容易になります。</p>
<p>本記事が、皆様のプロジェクトマネジメントに役に立てば幸いです。</p>
<p>なお、今後私がブログを執筆する際は、EVM表示、グラフのドリルダウン、プロジェクトダッシュボードの構築、ダッシュボード画像のメール配信に関する方法を記載していく予定。</p>
<p>これらの記事が、みなさまにとって参考になりそうでしたら「いいね！」をクリックして頂けますと幸いです。執筆の励みになります。＾＾</p>
<p>今後ともよろしくお願い致します。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/photo_20160928_00.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;&lt;p&gt;こんにちは。
    
    </summary>
    
      <category term="プロジェクトマネジメント" scheme="https://future-architect.github.io/categories/%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%83%9E%E3%83%8D%E3%82%B8%E3%83%A1%E3%83%B3%E3%83%88/"/>
    
    
      <category term="Kibana" scheme="https://future-architect.github.io/tags/Kibana/"/>
    
      <category term="Redmine" scheme="https://future-architect.github.io/tags/Redmine/"/>
    
      <category term="Timelion" scheme="https://future-architect.github.io/tags/Timelion/"/>
    
  </entry>
  
  <entry>
    <title>システム屋さんがうれしいJava8対応のコーディング規約を公開します！！</title>
    <link href="https://future-architect.github.io/articles/20160902/"/>
    <id>https://future-architect.github.io/articles/20160902/</id>
    <published>2016-09-02T04:00:00.000Z</published>
    <updated>2017-02-27T15:03:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>こんにちは。星です。</p>
<p>弊社では、お客様の基幹システム構築をする際、Java言語を採用することが多いのですが、2015年4月末にJava7のサポート切れになったことを受けて、昨年よりJava8で開発をしています。</p>
<p>弊社でもそれなりの規模の案件になると、社員やパートナーの皆様を合わせて、数百人が同時に開発することも珍しくありませんので、私の所属する技術部隊でコーディング規約をはじめとして、開発をするにあたってのガイドラインの整備やEclipse等の開発環境の整備などのタスクを実施して、標準化とクオリティの担保を推進しています。</p>
<p>さて、Java8においては、Java7において実装見送りとなったStream APIやラムダ式といった大きな機能追加がありました。とはいえ、これらの機能を使ったとして、性能的に大丈夫なのかとか、どういったコーディングスタイルが良いのか？など、エンタープライズ領域において、どう利用していくのかを決める必要がありました。</p>
<h2 id="世の中のJavaのコーディング規約"><a href="#世の中のJavaのコーディング規約" class="headerlink" title="世の中のJavaのコーディング規約"></a>世の中のJavaのコーディング規約</h2><p>インターネット上で公開されているJavaのコーディング規約で、主要なものを挙げてみました。</p>
<table>
<thead>
<tr>
<th>規約</th>
<th>著作者</th>
<th>URL</th>
</tr>
</thead>
<tbody>
<tr>
<td>Code Conventions for the Java Programming Language</td>
<td>Sun Microsystems</td>
<td><a href="http://www.oracle.com/technetwork/java/codeconvtoc-136057.html" target="_blank" rel="external">http://www.oracle.com/technetwork/java/codeconvtoc-136057.html</a></td>
</tr>
<tr>
<td>Writing Robust Java Code</td>
<td>Scott W. Ambler</td>
<td><a href="http://www.ambysoft.com/downloads/javaCodingStandards.pdf" target="_blank" rel="external">http://www.ambysoft.com/downloads/javaCodingStandards.pdf</a></td>
</tr>
<tr>
<td>オブジェクト倶楽部版 Javaコーディング標準</td>
<td>オブジェクト倶楽部</td>
<td><a href="http://objectclub.jp/community/codingstandard/CodingStd.pdf" target="_blank" rel="external">http://objectclub.jp/community/codingstandard/CodingStd.pdf</a></td>
</tr>
<tr>
<td>電通国際情報際サービス版 Javaコーディング規約2004</td>
<td>電通国際情報サービス</td>
<td><a href="http://objectclub.jp/community/codingstandard/JavaCodingStandard2004.pdf" target="_blank" rel="external">http://objectclub.jp/community/codingstandard/JavaCodingStandard2004.pdf</a></td>
</tr>
<tr>
<td>JJGuideline （Java - J2EE Conventions and Guidelines）</td>
<td>Stephan.J &amp; JCS Team</td>
<td><a href="http://www.fedict.belgium.be/sites/default/files/downloads/Java_J2EE_conventions_and_guidelines_EN.pdf" target="_blank" rel="external">http://www.fedict.belgium.be/sites/default/files/downloads/Java_J2EE_conventions_and_guidelines_EN.pdf</a></td>
</tr>
<tr>
<td>Google Java Style (非公式和訳)</td>
<td>Google</td>
<td><a href="https://kazurof.github.io/GoogleJavaStyle-ja/" target="_blank" rel="external">https://kazurof.github.io/GoogleJavaStyle-ja/</a></td>
</tr>
<tr>
<td>Acroquest Technology Javaコーディング規約</td>
<td>Acroquest Technology</td>
<td><a href="https://www.acroquest.co.jp/webworkshop/javacordingrule/Acroquest_JavaCodingStandard_6_7.pdf" target="_blank" rel="external">https://www.acroquest.co.jp/webworkshop/javacordingrule/Acroquest_JavaCodingStandard_6_7.pdf</a></td>
</tr>
</tbody>
</table>
<p>作成したのが2000年代で古いものが多く、Stream APIやラムダ式についての記載があるものは見当たらず、参考になりませんでした。</p>
<h2 id="Future-Enterprise-Coding-Standards"><a href="#Future-Enterprise-Coding-Standards" class="headerlink" title="Future Enterprise Coding Standards"></a>Future Enterprise Coding Standards</h2><p><img src="/images/photo_20160902_01.png" alt=""></p>
<p>世の中になければ自分たちで作るというのは弊社の行動理念でもあるので、社内で伝統的に受け継がれ、細かな改善をしてきたコーディング規約をベースに技術チーム有志にてJava8対応版を作りました。<br>(ちなみにモチーフがなぜハチなのかは、わかりますよね？)</p>
<p>そして、「Future Enterprise Coding Standards」と名付けて、せっかくなので、Githubに公開しました！！</p>
<ul>
<li>Future Enterprise Coding Standards for Java<ul>
<li><a href="https://future-architect.github.io/coding-standards/">https://future-architect.github.io/coding-standards/</a></li>
</ul>
</li>
</ul>
<p>Java8対応以外にも、性能の考慮も含めたコーディング規約になってます。<br>その一部をここで紹介します。</p>
<h3 id="Java8に対応"><a href="#Java8に対応" class="headerlink" title="Java8に対応"></a>Java8に対応</h3><p>例えばStream APIですが、皆さんだったら、下記3パターンのうち、どれを標準にしますか？</p>
<h4 id="パターン1"><a href="#パターン1" class="headerlink" title="パターン1"></a>パターン1</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">List&lt;Character&gt; alphabetLower = list</div><div class="line">    .stream()</div><div class="line">    .filter(Character::isAlphabetic)</div><div class="line">    .map(Character::toLowerCase)</div><div class="line">    .collect(Collectors.toList());</div></pre></td></tr></table></figure>
<h4 id="パターン２"><a href="#パターン２" class="headerlink" title="パターン２"></a>パターン２</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">List&lt;Character&gt; alphabetLower = list.stream()</div><div class="line">                                    .filter(Character::isAlphabetic)</div><div class="line">                                    .map(Character::toLowerCase)</div><div class="line">                                    .collect(Collectors.toList());</div></pre></td></tr></table></figure>
<h4 id="パターン3"><a href="#パターン3" class="headerlink" title="パターン3"></a>パターン3</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">List&lt;Character&gt; alphabetLower = list.stream()</div><div class="line">    .filter(Character::isAlphabetic)</div><div class="line">    .map(Character::toLowerCase)</div><div class="line">    .collect(Collectors.toList());</div></pre></td></tr></table></figure>
<p>パターン1だと1行目が気持ち悪いと感じる人がいそうですね。<br>パターン2は一見美しく見えるのですが、Eclipse等でフォーマッタの設定が難しかったりします。<br>そんなわけで、私達が設定したコーディング規約では可読性とフォーマッタとの相性も踏まえて、パターン3にしてます。</p>
<h3 id="性能の考慮"><a href="#性能の考慮" class="headerlink" title="性能の考慮"></a>性能の考慮</h3><p>次は性能についてです。下記2つのパターン、どちらも等価のリストを返しますが、<br>どちらのパターンで実装したらよいでしょうか？</p>
<h4 id="1-拡張for文パターン"><a href="#1-拡張for文パターン" class="headerlink" title="1. 拡張for文パターン"></a>1. 拡張for文パターン</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">List&lt;String&gt; list = <span class="comment">//数値文字列のList</span></div><div class="line">List&lt;String&gt; resultList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><span class="keyword">for</span> (String string : list) &#123;</div><div class="line">    <span class="keyword">if</span> (string.endsWith(<span class="string">"0"</span>)) &#123;</div><div class="line">        resultList.add(string);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> resultList;</div></pre></td></tr></table></figure>
<h4 id="2-StreamAPIパターン"><a href="#2-StreamAPIパターン" class="headerlink" title="2. StreamAPIパターン"></a>2. StreamAPIパターン</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">List&lt;String&gt; list = <span class="comment">//数値文字列のList</span></div><div class="line">List&lt;String&gt; resultList = list.stream()</div><div class="line">    .filter(s -&gt; s.endsWith(<span class="string">"0"</span>))</div><div class="line">    .collect(Collectors.toList());</div><div class="line"><span class="keyword">return</span> resultList;</div></pre></td></tr></table></figure>
<p>Java8を使っているし、せっかくだからStream APIで実装しようと思っても、<br>実は性能がシビアに求められる処理だったりしませんか？</p>
<h4 id="計測結果"><a href="#計測結果" class="headerlink" title="計測結果"></a>計測結果</h4><table>
<thead>
<tr>
<th style="text-align:right">処理するListの件数</th>
<th style="text-align:right">拡張for文 (ms)</th>
<th style="text-align:right">StreamAPI (ms)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">100万件</td>
<td style="text-align:right">7</td>
<td style="text-align:right">9</td>
</tr>
<tr>
<td style="text-align:right">1,000万件</td>
<td style="text-align:right">88</td>
<td style="text-align:right">114</td>
</tr>
<tr>
<td style="text-align:right">1億件</td>
<td style="text-align:right">949</td>
<td style="text-align:right">1,026</td>
</tr>
<tr>
<td style="text-align:right">2億件</td>
<td style="text-align:right">1,822</td>
<td style="text-align:right">2,081</td>
</tr>
</tbody>
</table>
<p>このように従来通りの拡張for文のほうが速かったりするので、性能も踏まえて実装をどうすべきかを判断する必要があります。こういった性能への考慮事項もコーディング規約に組み込んであります。</p>
<h2 id="コーディング規約の今後について"><a href="#コーディング規約の今後について" class="headerlink" title="コーディング規約の今後について"></a>コーディング規約の今後について</h2><p>今後はWebアプリケーション編など実践的な内容なども盛り込んでいきたいなと思ってます。<br>またSQLやJavaScriptなど、他の言語についても公開していきたいと思っています。</p>
<p>さらに、CheckStyle定義やフォーマッタ、スニペットなども用意していきたいなとチーム内でも話をしてますが、なかなか手が回らず。。。</p>
<p>これからも改善したいと思っていますので、プルリクお待ちしています！！</p>
<p><a href="https://github.com/future-architect/coding-standards" target="_blank" rel="external">https://github.com/future-architect/coding-standards</a></p>
<h2 id="参考：イメージキャラクターについて"><a href="#参考：イメージキャラクターについて" class="headerlink" title="参考：イメージキャラクターについて"></a>参考：イメージキャラクターについて</h2><p><img src="/images/photo_20160902_01.png" style="width:200px;"></p>
<h3 id="特徴"><a href="#特徴" class="headerlink" title="特徴"></a>特徴</h3><ul>
<li>目と触覚の配色はDukeをリスペクト</li>
<li>針ではなく葉っぱが生えてる（「Javaハチ」 -&gt; 「Java鉢」 -&gt; 鉢植えには葉っぱが生えてる）</li>
</ul>
<p>イメージキャラクターは、<a href="https://future-architect.github.io/articles/20160721/">前回記事</a>のアイコンセット作者の木村さん作成です。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;&lt;p&gt;こんにちは。星です。&lt;/p&gt;
&lt;p&gt;弊社では、お客様の基幹システム構築をする際、Java言語を採用することが多いのですが、2
    
    </summary>
    
      <category term="開発" scheme="https://future-architect.github.io/categories/%E9%96%8B%E7%99%BA/"/>
    
    
      <category term="Java" scheme="https://future-architect.github.io/tags/Java/"/>
    
      <category term="コーディング規約" scheme="https://future-architect.github.io/tags/%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E8%A6%8F%E7%B4%84/"/>
    
  </entry>
  
  <entry>
    <title>これさえあればシステム構成図がだいたい描けるアイコンセットを公開します！</title>
    <link href="https://future-architect.github.io/articles/20160721/"/>
    <id>https://future-architect.github.io/articles/20160721/</id>
    <published>2016-07-21T08:44:04.000Z</published>
    <updated>2017-02-27T15:03:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。<a href="https://github.com/chanomaru" target="_blank" rel="external">@chanomaru</a>です。</p>
<p>みなさん、スライドを作ってますか？<br>最近はビジネスパーソンだけでなく、学生さんもプレゼンテーションをする機会が多くなってきていますよね。</p>
<p>エンジニアがよく作るスライドの一つにシステム構成図があります。<br>わたしもシステムがどのような構造になっているかを説明する際によく作成しています。</p>
<p>システム構成図では各技術要素をアイコンで表現することが多いです。<br>しかし「ロードバランサー」や「キュー」など、よく使うわりにアイコンを探しにくいモチーフも多いですよね？</p>
<p>・・・ということで、社内で利用されている<br><strong>「これさえあればシステム構成図がだいたい描けるアイコンセット」</strong>を公開します！</p>
<h1 id="アイコンセット"><a href="#アイコンセット" class="headerlink" title="アイコンセット"></a>アイコンセット</h1><p>含まれているアイコンはPNG形式で背景は透過済み、全部で35種類、サイズは500×500ピクセルとなっています。</p>
<p>＞＞ <a href="https://github.com/future-architect/icons/releases/download/v_1.0.0/icons-v_1.0.0.zip" download="" target="_blank" rel="external">こちらからダウンロードできます。</a></p>
<p><img src="/images/photo_20160721_01.png"></p>
<p><a rel="external" href="http://creativecommons.org/licenses/by/4.0/" target="_blank"><img alt="クリエイティブ・コモンズ・ライセンス" style="border-width:0;width:70px" src="https://i.creativecommons.org/l/by/4.0/88x31.png"></a><div> Future Architect, Inc. Japan</div>この 作品 は <a rel="external" href="http://creativecommons.org/licenses/by/4.0/" target="_blank">クリエイティブ・コモンズ 表示 4.0 国際 ライセンスの下に提供されています。</a></p>
<p><br></p>
<p>ライセンスはCreative Commonsです。<br>ご自由にお使い下さい！</p>
<p>今後も順次公開していくので、お楽しみに！</p>
<p>なお、アイコンはGithubで管理しています。<br>もちろん、PR大歓迎です！</p>
<p><a href="https://github.com/future-architect/icons" target="_blank" rel="external">https://github.com/future-architect/icons</a></p>
<p>アイコン探しの手間を省き、少しでもみなさまに貢献できれば幸いです。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;こんにちは。&lt;a href=&quot;https://github.com/chanomaru&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@chanomaru&lt;/a&gt;です。&lt;/p&gt;
&lt;p&gt;みなさん、スライドを作ってますか？&lt;br&gt;最近はビジネスパーソンだけでな
    
    </summary>
    
      <category term="素材" scheme="https://future-architect.github.io/categories/%E7%B4%A0%E6%9D%90/"/>
    
    
      <category term="アイコン" scheme="https://future-architect.github.io/tags/%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>JANOG38にてVulsの発表を行いました</title>
    <link href="https://future-architect.github.io/articles/20160719/"/>
    <id>https://future-architect.github.io/articles/20160719/</id>
    <published>2016-07-19T08:50:41.000Z</published>
    <updated>2017-02-27T15:03:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>JANOG38にてVulsの発表を行いました</p>
<p>めんそーれ！！！<br>初投稿となります、ちまたで話題沸騰中のLinux/FreeBSD脆弱性スキャナ <a href="https://github.com/future-architect/vuls" target="_blank" rel="external">Vuls</a> 作者の神戸です。</p>
<p>インターネット系カンファレンスでは日本最大規模である<a href="http://www.janog.gr.jp/meeting/janog38/" target="_blank" rel="external">JANOG38 Meeting</a>@沖縄 にて<a href="https://github.com/future-architect/vuls" target="_blank" rel="external">Vuls</a>について発表してきました。本記事ではその奮闘ぶりを紹介します。</p>
<h1 id="JANOG38について"><a href="#JANOG38について" class="headerlink" title="JANOG38について"></a>JANOG38について</h1><p><img src="/images/photo_20160717_01.jpeg"></p>
<p><a href="https://www.janog.gr.jp/information/" target="_blank" rel="external">JANOG公式ページ</a> より引用</p>
<blockquote>
<p>JANOGとはインターネットに於ける技術的事項、および、それにまつわるオペレーションに関する事項を議論、<br>検討、紹介することにより日本のインターネット技術者、および、利用者に貢献することを目的としたグループです。</p>
</blockquote>
<p><br></p>
<p>年に2回、数百人規模のインターネット系エンジニアが集まって情報交換を行う日本有数の大規模なカンファレンスです。もともとはインターネットの運用関係のカンファレンスでしたが最近はサーバ運用やセキュリティなども対象となっています。</p>
<p>38回目の開催である<a href="http://www.janog.gr.jp/meeting/janog38/" target="_blank" rel="external">JANOG38 Meeting</a>に弊社セキュリティエンジニアの林優二郎と私の２名で参加し、<br><a href="http://www.janog.gr.jp/meeting/janog38/program/secuope" target="_blank" rel="external">セキュリティオペレーション: 使ってる道具を教えて! ～ Linux, FreeBSD 向け脆弱性スキャナ Vuls 開発者が熱く語る～</a>にて発表してきました。</p>
<h1 id="Vulsって何？"><a href="#Vulsって何？" class="headerlink" title="Vulsって何？"></a>Vulsって何？</h1><p>Vulsをご存じない方のために簡単に紹介します。</p>
<p><img src="/images/photo_20160717_02.png"><br><a href="https://github.com/future-architect/vuls" target="_blank" rel="external">https://github.com/future-architect/vuls</a><br><a href="https://github.com/future-architect/vuls/blob/master/README.ja.md" target="_blank" rel="external">日本語README</a></p>
<p>Vulsとは、Linux/FreeBSDに含まれる脆弱性を検知し、詳細情報をレポーティングするツールです。</p>
<p>日々発見される脆弱性の根本対策は、ソフトウェアアップデートです。1日に百万種類のマルウェアが作成されいてる現在、シグニチャベースのアンチウィルスやIDS, IPSを入れているから大丈夫、とは言い切れません。パッケージマネージャの自動アップデート適用が可能であれば楽なのですが、アップデートが原因でサービス停止するリスクを恐れて手動アップデートで運用するケースが多く見受けられます。手動アップデートでの運用は非常に運用コストがかかります。運用者はJVNやNVDなどで日々情報収集をして、日々発見される脆弱性が自分の管理するどのサーバに該当するのかを判断しなければなりません。たまたま見逃したり、影響調査で漏れがあった場合は、システムに脆弱性を含んだ状態で運用することになります。このように、手動アップデートでの運用は困難であり、リスクも高いと言えます。</p>
<p>Vulsは私が100台規模のLinux運用をしていた際に、このソフトウェアアップデート作業に感じた、怒り、悲しみ、憎しみ、そして絶望を糧に作りました。</p>
<p>VulsはLinux、FreeBSDに存在する脆弱性を検知し、Slackやメールなどで日本語で通知します。<br>システム管理者は、VulsをセットアップしてCronなどに仕込むことで、新着脆弱性と該当サーバをVulsが教えてくれるため、上記に書いたようなソフトウェアアップデートに関するシステム管理者の日々の苦悩を軽減し、セキュアなシステム運用の助けとなります。</p>
<p><img src="/images/photo_20160717_03.png"></p>
<p>2016/4/1の公開後、一時GitHub Trending(直近24時間のスター獲得数ランキング)で1000万以上あるGitHubプロジェクトの全言語ランキングで一時 4位となるほど世界中で話題となりました。公開後3ヶ月で1800を超えるGitHubスターを獲得するほど人気であり、現在も活発に改善が行われているツールです。</p>
<h1 id="発表内容"><a href="#発表内容" class="headerlink" title="発表内容"></a>発表内容</h1><p>弊社技術部隊に所属するデザインイケる口な<a href="https://github.com/chanomaru" target="_blank" rel="external">@chanomaru</a>氏がデザイン、<a href="http://qiita.com/hiroki_tanaka" target="_blank" rel="external">@hiroki_tanaka</a>氏実装の、できたてほやほやVulsロゴをTシャツに貼り付けていざ発表にのぞみます。</p>
<p><img src="/images/photo_20160717_04.jpeg"></p>
<p>「なんとなくVulsぽい感じで」<br>というRFPをもとにこのロゴを作成してもらいました(笑</p>
<p>前半は林優二郎による、</p>
<ul>
<li>ネーミングの話</li>
<li>ロゴの発表</li>
<li>Vulsが解決する課題</li>
<li>公開後のバズり具合</li>
<li>コミュニティ誕生秘話<br><img src="/images/photo_20160717_05.jpeg"></li>
</ul>
<p>後半はわたくし、神戸による</p>
<ul>
<li>デモ</li>
<li>アーキテクチャ</li>
<li>どうやって脆弱性を検知するか</li>
<li>苦労した点</li>
<li>Q&amp;A<br>という内容で発表しました。</li>
</ul>
<p><img src="/images/photo_20160717_06.jpeg"></p>
<p>活発に質問をいただき、またすでに使っている方から機能の要望をいただきました。<br>発表後は、ぜひ使用したいと声をかけていただくなどVulsの期待を感じさらなる改善を心に誓いました。</p>
<h1 id="懇親会でVulsビラを配りまくる"><a href="#懇親会でVulsビラを配りまくる" class="headerlink" title="懇親会でVulsビラを配りまくる"></a>懇親会でVulsビラを配りまくる</h1><p>二日目セッション終了後の懇親会にも参加しました。<br>JANOGは懇親会が本番という声もあるほど毎回盛り上がるそうで、今回の懇親会はなんと300人が参加する大規模なものでした。</p>
<p>我々の今回の目的はVulsの宣伝です。<br>懇親会が二日目の勝負所だと考えていた我々は、懇親会当日に思い立って突貫で作成したA4一枚のビラをコンビニで50枚印刷し、さらに発表と同じくVulsロゴをTシャツに貼り付けて参戦です。</p>
<p><img src="/images/photo_20160717_07.jpeg"></p>
<p>まるで20世紀少年の「ともだち」を彷彿とさせる怪しさ全開の出で立ちですが、Vulsの宣伝のためには恥ずかしいなんて言ってられません。</p>
<p>突貫で作ったビラ<br><img src="/images/photo_20160717_08.jpeg"></p>
<p>さくらインターネット 田中代表の乾杯を合図に、我々の戦いの火蓋が切って落とされます。<br><img src="/images/photo_20160717_09.jpeg"></p>
<p>ミス沖縄と泡盛の女王も登場し会場のボルテージが輻輳する<br><img src="/images/photo_20160717_10.jpeg"></p>
<p>なんと10種類の泡盛が飲み放題！！腹が減っては戦はできぬ。<br><img src="/images/photo_20160717_11.jpeg"></p>
<p>オリオンビアーも料理も最高！ クーーーーッ！！！<br>と 飲んで食ってダベって終わるわけにはいきません。<br>そうでした、我々の今回の目的はVulsの宣伝でした。</p>
<p>腹を満たした我々はVuls宣伝活動を開始します。<br>さて、、、周りを見渡すと、ほとんどの人がとなりの誰かと歓談しています。</p>
<p><img src="/images/photo_20160717_12.jpeg"></p>
<p>数人で盛り上がってる中に割り込んでVulsのビラを配りを宣伝をはじめるには、いささかオリオンビアーが足りません。<br>今回がJANOG初参加ということもあり、知り合いがほとんどいない我々は考えます。</p>
<p>まず最初に考えた作戦は、一人でいる人を狙うこと。<br>サバンナの弱肉強食の世界でも、イルカの狩りでも集団から離れた獲物を狙うのはハンティングの基本です。</p>
<p>「いやいやいやいや、どーもどーも Vulsですー」</p>
<p>とビール瓶片手に話しかけてビラをわたし、説明します。<br>するとどなたからも、これ気になってたんだよね、試してみるよという反応が返ってきます。</p>
<p>「機能もそうだけど、とくにネーミングがいいねぇ！逆に破壊されそうだけど」<br>「わかってくれますか、逆に脆弱性をバルスするんですよ…」</p>
<p>嬉しくなって、ついいろいろ話し込ます。</p>
<p>30分ほどたって、気づきます。</p>
<p>「このやり方では効率が悪すぎる。どう考えても時間内にこの枚数は裁けねぇ」<br>「どうやら作戦を変える必要がありそうだ」<br>「でも、いったいどうやって！？」</p>
<p>八方塞がりの絶望に叩きのめされそうになったその瞬間、救世主が現れます。<br>以前よりVulsを気に入ってくれていて、Vuls-Slackで仲良くしていただいているN氏と出会います。そして、N氏は驚くほど顔が広い。</p>
<p><strong>ポクポクポク・・・チーン！！</strong></p>
<p>ひらめいた我々は、このままでは捌けないので、興味のありそうなお知り合いに配ってはいただけませぬか？とN氏にお願いしてみます。N氏快諾。本当にありがとうございます。<strong>ノルマとしてN氏に10枚</strong>ほどお渡ししました。（N氏は早々にノルマの10枚を配り終えていました）</p>
<p>「いっきに10枚はけたぞ。Goroutine!!!」</p>
<p>ということで、N氏の登場で希望が見えた我々は考えます。<br>JANOGは歴史のあるコミュニティであり、参加者同士のつながりが強い。</p>
<p><strong>ポクポクポク・・・チーン！！</strong></p>
<p>「せや！！つながりを使えばええんや。」<br>「ビラを配った人に、Vulsに興味のありそうな知り合いを紹介してもらったらええんや」<br><strong>「タモさんがウキウキウォッチングでやってた手法や！！」</strong></p>
<p>この作戦が功を奏し、次から次にVulsに興味のありそうな人を紹介してくれます。<br>JANOGコミュニティはええ人ばっかりや。</p>
<p>そして、残り10分で5枚残っていましたが、JPCERT/CC 平塚氏に助けていただき、一気になくなりすべてのビラを配り終えることができましたとさ。</p>
<p>今回、いろんな方と名刺交換し、ISP、WebやSIの方など多くの方が使ってみる、社内で宣伝するよとおっしゃってくださり、Vulsへの期待も感じられたので、ますますの改善を心に誓いました。</p>
<p>懇親会は7/7の七夕の日。世界の平和を祈る<br><img src="/images/photo_20160717_13.jpeg"></p>
<h1 id="懇親会おまけ"><a href="#懇親会おまけ" class="headerlink" title="懇親会おまけ"></a>懇親会おまけ</h1><p>懇親会も終了に近づいたころ、思わぬ人と出会うことに。</p>
<p>なんと、娘の親友（よしお君（仮））のパパと懇親会でバッタリ。<br>「なぜJANOGによしお君のパパが？なぜ沖縄に？」<br>テンションが一気に上がります。<br>「えっ、なんでここにいるんですか？」<br>「これはJANOGの奇跡だ。そういえば今日は七夕ですやん。わたしたち、まるで織姫と彦星ですやん？」</p>
<p>今までそれ程話す機会がなかったのですが、まさかの沖縄での偶然に意気投合し、その後２次会に繰り出して泡盛の杯を交わし、パパ友の会を結成することを誓い合いましたとさ。</p>
<p><img src="/images/photo_20160717_14.jpeg"></p>
<h1 id="次はJTFでVulsの発表します"><a href="#次はJTFでVulsの発表します" class="headerlink" title="次はJTFでVulsの発表します"></a>次はJTFでVulsの発表します</h1><p>2016/7/24@東京 で開催されるJuly Tech Festaにて発表します。<br>インフラ系エンジニアが600人以上参加する大規模カンファレンスです。<br><a href="http://2016.techfesta.jp/speaker.html#S25" target="_blank" rel="external">Linux,FreeBSD脆弱性検知ツールVulsを開発したらServerspecを超えるGitHubスターを獲得するほどバズった話 </a></p>
<p>Vulsの概要、内部の詳細から開発秘話、公開後の世界的なバズり具合、バズらせるために何をしたのか、コミュニティ結成のドラマ、OSSの素晴らしさを45分間語りまくります。</p>
<h1 id="今後の開発"><a href="#今後の開発" class="headerlink" title="今後の開発"></a>今後の開発</h1><p>もちろん開発のほうもバリバリやっていきます。直近の大きな目標は、Windowsのスキャンを考えています。また、今後もどんどんカンファレンスや勉強会で発表をしてVulsを広めていきます！</p>
<h1 id="仲間募集"><a href="#仲間募集" class="headerlink" title="仲間募集"></a>仲間募集</h1><p>Vulsを一緒に開発したい方を募集中です。<br>世界的に有名なプロダクトをGoを使ってバリバリ改善したい方、Vulsで世界平和を実現したい方がいらっしゃいましたら<a href="https://twitter.com/kotakanbe" target="_blank" rel="external">@kotakanbe</a>までDMください。</p>
<p>現場からは以上です。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JANOG38にてVulsの発表を行いました&lt;/p&gt;
&lt;p&gt;めんそーれ！！！&lt;br&gt;初投稿となります、ちまたで話題沸騰中のLinux/FreeBSD脆弱性スキャナ &lt;a href=&quot;https://github.com/future-architect/vuls&quot; targ
    
    </summary>
    
      <category term="カンファレンス" scheme="https://future-architect.github.io/categories/%E3%82%AB%E3%83%B3%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/"/>
    
    
      <category term="カンファレンス" scheme="https://future-architect.github.io/tags/%E3%82%AB%E3%83%B3%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/"/>
    
      <category term="JANOG38" scheme="https://future-architect.github.io/tags/JANOG38/"/>
    
      <category term="セキュリティ" scheme="https://future-architect.github.io/tags/%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3/"/>
    
      <category term="vuls" scheme="https://future-architect.github.io/tags/vuls/"/>
    
      <category term="沖縄" scheme="https://future-architect.github.io/tags/%E6%B2%96%E7%B8%84/"/>
    
  </entry>
  
  <entry>
    <title>第四回LT大会～あひると住宅ローンとまたもやキーボード～</title>
    <link href="https://future-architect.github.io/articles/20160718/"/>
    <id>https://future-architect.github.io/articles/20160718/</id>
    <published>2016-07-18T09:14:46.000Z</published>
    <updated>2017-02-27T15:03:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>第四回LT大会～あひると住宅ローンとまたもやキーボード～<br><img src="/images/photo_20160718_01.jpeg"></p>
<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>こんにちは。真野です。<br>2016年6月3日(金)に開催された、LT大会#4についてご報告します。</p>
<p>LTとはLightning Talksの略で、持ち時間が5分程度のプレゼンテーションのことです。<br>短い時間で印象に残るということからLightning（稲妻、電光石火）という言葉が使われるようになったそうです。</p>
<ul>
<li>※過去に開催した様子はこちら<ul>
<li><a href="http://future-architect.github.io/articles/20160217/">第一回LT大会（前編）⇒ 開催の経緯</a></li>
<li><a href="http://future-architect.github.io/articles/20160218/">第一回LT大会（後編）⇒ スライド</a></li>
<li><a href="http://future-architect.github.io/articles/20160413/">第二回LT大会 ⇒ 開催の経緯＆スライド</a></li>
<li><a href="http://future-architect.github.io/articles/20160527/">第三回LT大会 ⇒ 開催の経緯＆スライド</a></li>
</ul>
</li>
</ul>
<h1 id="開催の概要"><a href="#開催の概要" class="headerlink" title="開催の概要"></a>開催の概要</h1><p>LT大会は3つの目的で実施されています！</p>
<ul>
<li>PR/ブランディング</li>
<li>採用（新卒・キャリアの採用チームとも協力）</li>
<li>人材育成（技術力底上げ・プレゼンスキルの向上・社外カンファレンス登壇へのステップアップ）</li>
</ul>
<p>ありがたいことに、会社から予算を頂き公式的な社内行事として活動をさせていただいています。<br>会長からは「大いに盛り上げて下さい」と激励を頂いています！</p>
<p>今回は、社員の他に学生さんが6名、インターン生1名、中途選考中の方が1名参加しました。<br>登壇者はいつもバリエーションに富んでいます！</p>
<ul>
<li>学生さん</li>
<li>インターン生</li>
<li>2016新卒入社の新人さん</li>
<li>入社10年目級のベテラン</li>
<li>エグゼクティブ（CTO&amp;CSOクラス）</li>
</ul>
<p>フレッシュメンから猛者メンまで色とりどり。<br>自然と様々な人が登壇申し込みしていただけて、本当に嬉しいです！</p>
<h1 id="食事"><a href="#食事" class="headerlink" title="食事"></a>食事</h1><p>大好評のピザ＆居酒屋メニューで食べ物を提供しました！<br>週末に美味しい食べ物を食べながらLTを聴くのは本当に良いですね。</p>
<p><img src="/images/photo_20160718_02.png"></p>
<p><img src="/images/photo_20160718_03.png"></p>
<h1 id="会場の様子"><a href="#会場の様子" class="headerlink" title="会場の様子"></a>会場の様子</h1><p>前回より1ヶ月程度しか期間が無かった影響からか、参加者はいつもよりやや少なめで、ゆったりしていたような気がします。<br>立ち見をしている人がほとんどいなかったので、運営としてはホッとしています。</p>
<p><img src="/images/photo_20160718_04.png"></p>
<p><img src="/images/photo_20160718_05.png"></p>
<h1 id="登壇者"><a href="#登壇者" class="headerlink" title="登壇者"></a>登壇者</h1><p>登壇者数はかなり絞った結果、9名です！<br>真ん中の写真は、ひよこです。ええ、ひよこです。</p>
<p><img src="/images/photo_20160718_06.png"></p>
<h1 id="発表の様子"><a href="#発表の様子" class="headerlink" title="発表の様子"></a>発表の様子</h1><p>各自、趣向を凝らした資料やデモで会場を沸かしていました！<br>今回はデモが多めで大いに盛り上がっていました。<br>また、初のIT以外のLTも登場しました！</p>
<p>UI/UXネタで窓ガラスに水滴を付けてみたり・・・<br><img src="/images/photo_20160718_07.png"></p>
<p>母校への愛を見せてみたり…<br><img src="/images/photo_20160718_08.png"></p>
<p>IoTで動かしてみたり・・<br><img src="/images/photo_20160718_09.png"></p>
<p>ある意味、「技術」的なマイホーム話をしてみたり…<br><img src="/images/photo_20160718_10.png"></p>
<p>かつてない、雰囲気に包まれとてもおもしろかったです。<br>個人的にはマイホーム話がお気に入りです！</p>
<h1 id="資料"><a href="#資料" class="headerlink" title="資料"></a>資料</h1><p>資料はSlideShare/SpeakerDeckにて公開中です。<br>ぜひ気になる発表をチェックして下さい！</p>
<table>
<thead>
<tr>
<th>#</th>
<th>トーク内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>なれる！デザイナー(田中宏基さん) <iframe src="//www.slideshare.net/slideshow/embed_code/key/LcsxzkBwJHMPR9" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/kakko1003/ss-63245690" title="なれる！デザイナー(ロゴ作りから始めるデザイン入門)" target="_blank">なれる！デザイナー(ロゴ作りから始めるデザイン入門)</a> </strong> from <strong><a href="//www.slideshare.net/kakko1003" target="_blank">hiroki tanaka</a></strong> </div></td>
</tr>
<tr>
<td>2</td>
<td>森HACK～林業ハッカソン(谷村元気さん) <script async class="speakerdeck-embed" data-id="ddb5dbeb233847dc90354e2cb547d012" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script></td>
</tr>
<tr>
<td>3</td>
<td>FutureのDNA(石橋国人さん)</td>
</tr>
<tr>
<td>4</td>
<td>モニターの中で雨を楽しむ(枇榔晃裕さん) <iframe src="//www.slideshare.net/slideshow/embed_code/key/NHhj3Dj9g2fFUd" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/alfe_below/20160603-lt-rainup" title="20160603 lt rain_up" target="_blank">20160603 lt rain_up</a> </strong> from <strong><a href="//www.slideshare.net/alfe_below" target="_blank">alfe_below</a></strong> </div></td>
</tr>
<tr>
<td>5</td>
<td>電通大発、働き方を伝えるメディア UEQareer(高橋健さん)  <iframe src="//www.slideshare.net/slideshow/embed_code/key/dY3FjUlU7Gnd04" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/KenTakahashi8/ueqareer" title="電通大発、働き方を伝えるメディア  UEQareer" target="_blank">電通大発、働き方を伝えるメディア  UEQareer</a> </strong> from <strong><a href="//www.slideshare.net/KenTakahashi8" target="_blank">Ken Takahashi</a></strong> </div></td>
</tr>
<tr>
<td>6</td>
<td>IoTでアヒルを動かしてみました(竹林康太さん)    <iframe src="//www.slideshare.net/slideshow/embed_code/key/eN52j9hfgZ3d6j" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/KotaTakebayashi/iot-62859287" title="IoTでアヒルを動かしてみました" target="_blank">IoTでアヒルを動かしてみました</a> </strong> from <strong><a href="//www.slideshare.net/KotaTakebayashi" target="_blank">Kota Takebayashi</a></strong> </div></td>
</tr>
<tr>
<td>7</td>
<td>続・競プロ（仮）(塚本祥太さん)</td>
</tr>
<tr>
<td>8</td>
<td>マイホームを買うにあたって過去の自分にアドバイスしたい事(松下聖彦さん)</td>
</tr>
<tr>
<td>9</td>
<td>マイナーデスクトップOS(松本昌己さん) <iframe src="//www.slideshare.net/slideshow/embed_code/key/bMyEzmnaFehtqi" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/MasakiMatsumoto3/os-63242817" title="マイナーデスクトップOsたち" target="_blank">マイナーデスクトップOsたち</a> </strong> from <strong><a href="//www.slideshare.net/MasakiMatsumoto3" target="_blank">Masaki Matsumoto</a></strong> </div></td>
</tr>
</tbody>
</table>
<h1 id="投票"><a href="#投票" class="headerlink" title="投票"></a>投票</h1><p>最優秀LTを決定するため、前回に引き続き「一人三票」で投票を行います。</p>
<p><br></p>
<p>結果やいかに・・・・・・・？！<br>・・・・・・・・・・・・・・・<br>・・・・・・・・・・・・・・・<br>・・・・・・・・・・・・・・・<br><br></p>
<h1 id="表彰＆贈呈"><a href="#表彰＆贈呈" class="headerlink" title="表彰＆贈呈"></a>表彰＆贈呈</h1><p>気になる投票結果は次のようになりました！<br>最優秀者とブービーの2名の方に豪華プレゼントを進呈しました。</p>
<p><br></p>
<h3 id="第一位：マイホームを買うにあたって過去の自分にアドバイスしたい事-松下聖彦さん"><a href="#第一位：マイホームを買うにあたって過去の自分にアドバイスしたい事-松下聖彦さん" class="headerlink" title="第一位：マイホームを買うにあたって過去の自分にアドバイスしたい事(松下聖彦さん)"></a><strong>第一位：マイホームを買うにあたって過去の自分にアドバイスしたい事(松下聖彦さん)</strong></h3><p>マイホーム購入の手続きを、システム構築に例えて爆笑を誘った松下さんが優勝です！<br>5~8分間のLTにもかかわらず、80ページの資料を用意してくださったので、聞いていて濃密な時間を過ごす事ができました。笑<br>あまりの大人気ぶりに、LT大会とは別に社員向け勉強会を1時間×2回も実施したそうです。</p>
<p><img src="/images/photo_20160718_11.png"></p>
<p>優勝賞品は「レトロタイプライター-Bluetoothキーボード」です。<br>格好いい！<br><a href="https://www.amazon.co.jp/dp/B019BZ4LLS" target="_blank" rel="external">https://www.amazon.co.jp/dp/B019BZ4LLS</a></p>
<p><br></p>
<h3 id="ブービー：続・競プロ（仮）-塚本祥太さん"><a href="#ブービー：続・競プロ（仮）-塚本祥太さん" class="headerlink" title="ブービー：続・競プロ（仮）(塚本祥太さん)"></a><strong>ブービー：続・競プロ（仮）(塚本祥太さん)</strong></h3><p>ブービー賞は残念ながら、競プロ伝道師の塚本さんです。<br>同じネタはウケない、新しいモノ好きの社員の性質が裏目に出た形でしょうか。</p>
<p><img src="/images/photo_20160718_12.png"></p>
<p>ブービーの賞品は「Raspberry Pi 3 Model B」です。<br><a href="https://www.amazon.co.jp/dp/B01CG72MK0" target="_blank" rel="external">https://www.amazon.co.jp/dp/B01CG72MK0</a></p>
<h1 id="男気"><a href="#男気" class="headerlink" title="男気"></a>男気</h1><p>松下さんが素敵過ぎる提案をしてくださいました。<br>せっかく学生さんが登壇してくれたということで、「賞品をじゃんけんに勝った方にあげるよ！」と一言。<br>松下さん、なんという太っ腹・・・！</p>
<p>厳正なるじゃんけんの結果、竹林さんにレトロタイプライターキーボードが授与されました。</p>
<p>写真は竹林さんが手に取る前に、社員がタイプライターに触りまくっている様子です。<br>大人げないですね！笑</p>
<p><img src="/images/photo_20160718_13.png"></p>
<h1 id="集合写真"><a href="#集合写真" class="headerlink" title="集合写真"></a>集合写真</h1><p>みんなで集合写真を撮りました！</p>
<p><img src="/images/photo_20160718_14.png"></p>
<h1 id="数値で見るLT大会"><a href="#数値で見るLT大会" class="headerlink" title="数値で見るLT大会"></a>数値で見るLT大会</h1><p>開催間隔が短かったことが影響しているのか、参加者が少なかったです。<br>2ヶ月以上、日程を開けて設定するほうが良いのでしょうか。</p>
<p><img src="/images/photo_20160718_15.png"></p>
<table>
<thead>
<tr>
<th>#</th>
<th>参加者</th>
<th>登壇者</th>
<th>学生</th>
<th>投票数</th>
</tr>
</thead>
<tbody>
<tr>
<td>第一回目</td>
<td>70</td>
<td>15</td>
<td>2</td>
<td>57</td>
</tr>
<tr>
<td>第二回目</td>
<td>80</td>
<td>11</td>
<td>8</td>
<td>41</td>
</tr>
<tr>
<td>第三回目</td>
<td>90</td>
<td>13</td>
<td>17</td>
<td>43</td>
</tr>
<tr>
<td>第四回目</td>
<td>60</td>
<td>9</td>
<td>6</td>
<td>32</td>
</tr>
</tbody>
</table>
<h1 id="振り返り"><a href="#振り返り" class="headerlink" title="振り返り"></a>振り返り</h1><p>運営目線による、KPTでの振り返りも共有します。</p>
<p><img src="/images/photo_20160718_16.png"></p>
<h1 id="お知らせ"><a href="#お知らせ" class="headerlink" title="お知らせ"></a>お知らせ</h1><p>第五回LT大会も開催が決定しています。</p>
<ul>
<li>開催日時： 2016年8月10日（水）※山の日の前日です！</li>
</ul>
<p>初の試みとして、学生さん以外の外部の方に登壇を依頼しています！<br>次回がどのようなLT大会になるか、乞うご期待！</p>
<p><img src="/images/photo_20160718_17.jpeg"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第四回LT大会～あひると住宅ローンとまたもやキーボード～&lt;br&gt;&lt;img src=&quot;/images/photo_20160718_01.jpeg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじ
    
    </summary>
    
      <category term="社内制度" scheme="https://future-architect.github.io/categories/%E7%A4%BE%E5%86%85%E5%88%B6%E5%BA%A6/"/>
    
    
      <category term="社内イベント" scheme="https://future-architect.github.io/tags/%E7%A4%BE%E5%86%85%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/"/>
    
      <category term="slideshare" scheme="https://future-architect.github.io/tags/slideshare/"/>
    
  </entry>
  
  <entry>
    <title>ハッカソン道中記#4～リケジョ、ITと外遊びしてみた～</title>
    <link href="https://future-architect.github.io/articles/20160530/"/>
    <id>https://future-architect.github.io/articles/20160530/</id>
    <published>2016-05-29T23:40:24.000Z</published>
    <updated>2017-02-27T15:03:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/photo_20160530_01.png"></p>
<p>私が参加した、前回のハッカソン記録は<a href="http://future-architect.github.io/articles/20160511/">こちら</a>を見て下さい！</p>
<h1 id="はじまり"><a href="#はじまり" class="headerlink" title="はじまり"></a>はじまり</h1><p>こんにちは。川久保です。</p>
<p>先日の<a href="http://future-architect.github.io/articles/20160511/">NASAが企画しているハッカソン～Space Apps Challenge 2016</a>に続いて、<a href="http://www.beams.co.jp/special/hosb_hack/" target="_blank" rel="external">HAPPY OUTSIDE BEAMS HACK 2016</a>というハッカソンに出場しました！</p>
<p>HAPPY OUTSIDE BEAMS HACK 2016とは・・・</p>
<blockquote>
<p>外遊びが更に楽しくなる様々なコンテンツやプロダクトを提案するプロジェクトです。<br>ファッションとテクノロジーをテーマに、実際にプロダクトを生み出す史上初のハッカソン！！アプリやweb、ハードウェアの開発者からファッションまで、様々な技術とアイデアでハックし、2日間で新しい製品を作り出しましょう！最優秀賞にはBEAMSのサポートによるMakuakeでのクラウドファンディングの成立と商品化を目指します。</p>
</blockquote>
<p>Space Apps Challengeは宇宙兄弟が好きということで参加したのですが、今回は【BEAMS×アウトドア】がテーマのハッカソンです！</p>
<p>キャンプやフェスが大好きな私にとって、今回のテーマもわくわくです(๑˃́ꇴ˂̀๑)<br>今回のチーム名は【おおさき青空同好会】です！</p>
<h1 id="前日"><a href="#前日" class="headerlink" title="前日"></a>前日</h1><p>前日、どんなものを作るかアイディア出しをしました。<br>アウトドアなものを考えるためにはアウトドアしないとでしょ！</p>
<p>ということで近くの公園に来ました。<br><img src="/images/photo_20160530_02.jpg"></p>
<p>素晴らしい躍動感ですね(๑•̀ㅁ•́๑)✧</p>
<p>実際にBBQをしているところを想像しよう！ということで</p>
<p><img src="/images/photo_20160530_03.jpg"></p>
<p>エアBBQしました( ･⊝･∞)</p>
<p><br></p>
<p>その成果もあってか、たくさんの意見が出ました。</p>
<ul>
<li>焼き加減を教えてくれるBBQ串</li>
<li>飲み物の冷え具合が分かるコースター</li>
<li>乾杯したら光り輝くタンブラー</li>
<li>置荷物を監視するカメラ</li>
<li>子どもとの距離が離れたら音が鳴って知らせてくれる服</li>
<li>etc.</li>
</ul>
<p>しかし、これだ！─=≡Σ((( つ•̀ω•́)つ<br>というものは思いつかず。。。</p>
<h1 id="一人アイディアソン"><a href="#一人アイディアソン" class="headerlink" title="一人アイディアソン"></a>一人アイディアソン</h1><p>夜中私は考えていました。</p>
<p>アウトドアするときに身に付けているものはなんだろう？<br>フェスに行くときに身に付けているものはなんだろう？<br>がさごそと家にあるフェスグッツをあさってました。</p>
<p>ｶﾞｻｺﾞｿ･････</p>
<p>ｶﾞｻｺﾞｿ････</p>
<p>(´｡✪ω✪｡｀)！！！</p>
<p>見つけました！！これだ！というものを！！！<br>それが、こちらです。<br><img src="/images/photo_20160530_04.png"></p>
<p>誰もが見たことあるであろう、<strong>ぱっちんバンド</strong> です。<br><img src="/images/photo_20160530_05.png"></p>
<p>こうやって腕に巻いたり、腕以外にも付けれちゃいます！</p>
<p>これに何か取り付けたりしてできたら面白いのでは？！？<br>と考えながら夜はふけていきました<em>(ˇωˇ」∠)</em> ｽﾔｧ…</p>
<h1 id="当日"><a href="#当日" class="headerlink" title="当日"></a>当日</h1><p>さて、遂にHAPPY OUTSIDE BEAMS HACK 2016当日！</p>
<p><img src="/images/photo_20160530_06.png"></p>
<p>こちら、御茶ノ水ソラシティにある会場の様子です。<br>さすがBEAMSだけあって会場もおしゃれ、かかっている音楽もおしゃれでした（●＾o＾●）</p>
<h1 id="アイディアソン"><a href="#アイディアソン" class="headerlink" title="アイディアソン"></a>アイディアソン</h1><p>“ぱっちんバンド” に何をつけるかアイディアソン！<br>色んな案が出ました。</p>
<p><img src="/images/photo_20160530_07.jpg"></p>
<p><img src="/images/photo_20160530_08.jpg"></p>
<p>なにができるのか<br>どうやってやるのか</p>
<p>何もわからない自分が悔しくもあり、新しいことが知れる楽しい時間でもありました(`･⊝･´)</p>
<p><img src="/images/photo_20160530_09.png"></p>
<p>案がまとまってきました！！</p>
<h1 id="ハッカソン"><a href="#ハッカソン" class="headerlink" title="ハッカソン"></a>ハッカソン</h1><p>ということで、ハッカソンスタートです(ง `ω´)ง</p>
<p>プロダクトは以下のような構成をとると先輩に説明されました。</p>
<p><img src="/images/photo_20160530_10.jpg"></p>
<p>私はその中でフルカラーLEDと銅線のハンダ付けを担当したり・・・</p>
<p><img src="/images/photo_20160530_11.jpg"></p>
<p><img src="/images/photo_20160530_12.jpg"></p>
<p>Fusion360という3DCADソフトウェアを初めて操作しながら、”ぱっちんバンド”に付けるためのアタッチメントの作成したり・・・</p>
<p><img src="/images/photo_20160530_13.jpg"></p>
<p>“ぱっちんバンド”をよりオシャレにするべく、レザークラフトに明け暮れていました。<br>写真は縫い穴を空けるためにトンカチをカンカンしています♪</p>
<p><img src="/images/photo_20160530_14.jpg"></p>
<p>ひたすら革との格闘です。<br>IoTハッカソンに参加したはずですが、ITが全く関係ない作業です♪</p>
<p><img src="/images/photo_20160530_15.jpg"></p>
<p>完成したのがこちら！！</p>
<h1 id="amp-8（アンドエイト）"><a href="#amp-8（アンドエイト）" class="headerlink" title="&amp;8（アンドエイト）"></a><strong>&amp;8（アンドエイト）</strong></h1><p>様々なアウトドアシーンで使用でき、組み合わせは無限大、可能性は無限大！！<br>そんな思いを込めて付けました！( •̀ .̫ •́ )✧</p>
<p>写真だと分かりにくいですが、”ぱっちんバンド” を革で包んでいます！<br>使い込めば使い込むほど味が出るはずです！</p>
<p><img src="/images/photo_20160530_16.png"></p>
<p>付属の「LED」・「BLE」・「香り」のアタッチメントは自由に付け替えができる仕組みです。<br>自分の好みにあわせてアタッチメントを取捨選択して付け替えることで、ファッション要素を持たせようと考えました！</p>
<p><img src="/images/photo_20160530_17.png"></p>
<h1 id="LEDの光らせ方について"><a href="#LEDの光らせ方について" class="headerlink" title="LEDの光らせ方について"></a>LEDの光らせ方について</h1><p>LEDは大きく分けて2種類の光らせる方法を考えています！</p>
<h2 id="1-位置情報"><a href="#1-位置情報" class="headerlink" title="1. 位置情報"></a>1. 位置情報</h2><p>ひとつ目はフェスやライブ会場で活用できる、位置情報によって光らせる方法です！<br>各拠点にビーコンを設置して、スマフォを経由して変更する仕組みだそうです。</p>
<p><img src="/images/photo_20160530_18.jpg"></p>
<h2 id="2-アプリ経由"><a href="#2-アプリ経由" class="headerlink" title="2. アプリ経由"></a>2. アプリ経由</h2><p>スマフォアプリによって光り方を変更することも出来ます！<br>ビーコンが設置されていないアウトドアでも楽しめます！</p>
<p><img src="/images/photo_20160530_19.png"></p>
<h1 id="プレゼンテーション"><a href="#プレゼンテーション" class="headerlink" title="プレゼンテーション"></a>プレゼンテーション</h1><p>さあ、プレゼンの時間がやってまいりました！<br>今回はプレゼン2分、ブース発表60分で紹介するというルールでした！</p>
<p><img src="/images/photo_20160530_20.jpg"></p>
<p>一番前の席を陣取りましたo ( ｀ ・ ω ・´ )o</p>
<p>おおさき青空同好会のプレゼンターは我らがリーダー小川さんです！</p>
<p><img src="/images/photo_20160530_21.jpg"></p>
<p><iframe src="//www.slideshare.net/slideshow/embed_code/key/kMzN44IYJ2p1jz" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/OsakiXXDoukoukai/20160515-happy-outside-beams-hack2016" title="20160515 HAPPY OUTSIDE BEAMS HACK2016発表資料（おおさき青空同好会）" target="_blank">20160515 HAPPY OUTSIDE BEAMS HACK2016発表資料（おおさき青空同好会）</a> </strong> from <strong><a href="//www.slideshare.net/OsakiXXDoukoukai" target="_blank">おおさき未来同好会</a></strong> </div></p>
<p>発表お疲れ様でした٩(๑❛ᴗ❛๑)۶</p>
<h1 id="ブース発表"><a href="#ブース発表" class="headerlink" title="ブース発表"></a>ブース発表</h1><p>プレゼンが終わり、ブース発表！<br><img src="/images/photo_20160530_22.jpg"></p>
<p>審査員の方が興味津々で覗き込んできます！</p>
<p><img src="/images/photo_20160530_23.jpg"></p>
<p>先輩のセールストークが炸裂してました！<br><img src="/images/photo_20160530_24.png"></p>
<p>60分のブース発表が終わり、ドキドキの結果発表へ＼＼\ ٩( ‘ω’ )و //／／</p>
<h1 id="結果発表"><a href="#結果発表" class="headerlink" title="結果発表"></a>結果発表</h1><p>結果は・・・・・・・・・・・・・・<br>・・・・・・・・・・・・・・・・・<br>・・・・・・・・・・・・・・・・・<br><br></p>
<h3 id="残念ながら受賞ならず。。。-˚-˃̣̣̥ω˂̣̣̥"><a href="#残念ながら受賞ならず。。。-˚-˃̣̣̥ω˂̣̣̥" class="headerlink" title="残念ながら受賞ならず。。。(˚ ˃̣̣̥ω˂̣̣̥ )"></a>残念ながら受賞ならず。。。(˚ ˃̣̣̥ω˂̣̣̥ )</h3><p><br></p>
<p>とても悔しかったです！<br>しかし審査員の方々から良かったところ、悪かったところのアドバイスを頂け、とてもよい経験となりました(*｀･ω･)ゞ</p>
<h1 id="今後の展開"><a href="#今後の展開" class="headerlink" title="今後の展開"></a>今後の展開</h1><p>今回のハッカソンに参加させてもらって、今更ですが、IoTの面白さを実感しました。</p>
<p>普段生活してて、こうだったらいいのになーって思うことを、自分でIT使って解決出来ちゃうって面白くないですか？！∩(´∀｀)∩ﾜｧｲ♪</p>
<p>今回作ったものは、実際に今度フェスに行くときに友達と一緒に付けれたらなと思ってます。<br>ちょっと改良して、使ってみたいと思います！</p>
<p>実際に使ったときのことも後日公開します！<br>みなさま、こうご期待！！！＼(⑅•̀.̫•)-(⑅•̀.̫•)-(⑅•̀.̫•)／</p>
<h1 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h1><ul>
<li><p>HAPPY OUTSIDE BEAMS HACK 2016</p>
<ul>
<li><a href="http://www.beams.co.jp/special/hosb_hack/" target="_blank" rel="external">http://www.beams.co.jp/special/hosb_hack/</a></li>
</ul>
</li>
<li><p>toggetter（ハッシュタグbeams_hack）</p>
<ul>
<li><a href="http://togetter.com/li/975917" target="_blank" rel="external">http://togetter.com/li/975917</a></li>
</ul>
</li>
<li><p>イベントレポート記事：ファッションビジネスメディア「The FLAG」</p>
<ul>
<li><a href="https://theflag.jp/article/184996" target="_blank" rel="external">https://theflag.jp/article/184996</a></li>
</ul>
</li>
<li><p>イベントレポート記事：「LIG BLOG」</p>
<ul>
<li><a href="http://liginc.co.jp/277101" target="_blank" rel="external">http://liginc.co.jp/277101</a></li>
</ul>
</li>
</ul>
<p><img src="/images/photo_20160530_25.jpg"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/photo_20160530_01.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;私が参加した、前回のハッカソン記録は&lt;a href=&quot;http://future-architect.github.io/articles/20160511/&quot;&gt;こちら&lt;/a&gt;
    
    </summary>
    
      <category term="告知" scheme="https://future-architect.github.io/categories/%E5%91%8A%E7%9F%A5/"/>
    
    
      <category term="イベント" scheme="https://future-architect.github.io/tags/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/"/>
    
      <category term="ハッカソン" scheme="https://future-architect.github.io/tags/%E3%83%8F%E3%83%83%E3%82%AB%E3%82%BD%E3%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>第三回LT大会～grepおじさんは夢を見るか～</title>
    <link href="https://future-architect.github.io/articles/20160527/"/>
    <id>https://future-architect.github.io/articles/20160527/</id>
    <published>2016-05-27T11:09:16.000Z</published>
    <updated>2017-02-27T15:03:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/photo_20160527_01.jpg"></p>
<p>こんにちは。真野です。</p>
<p>2016年4月28日(金)に開催された、LT大会#3についてご報告します。</p>
<h1 id="開催の概要"><a href="#開催の概要" class="headerlink" title="開催の概要"></a>開催の概要</h1><p>過去ニ回に及ぶLT大会は大成功を収め、「この文化をぜひ続けていこう！」ということで第三回目の開催がトントン拍子に決定しました。</p>
<p>今回は、前回以上に多くの学生さんを呼び込むことに成功しました。（なんと17名！）<br>さらに縁があった学生さんが一人、プレゼンタとして参加してくれ、イベントとしての成長を実感しています。</p>
<p>また学生さんを多く呼びこむことは弊社の採用チームを巻き込むことに繋がり、より豪華な食事の調達を可能としました。<br>来てくれた学生さん、本当にありがとうございます！</p>
<ul>
<li>※過去の開催した様子はこちら<ul>
<li><a href="http://future-architect.github.io/articles/20160217/">第一回LT大会（前編）⇒ 開催の経緯</a></li>
<li><a href="http://future-architect.github.io/articles/20160218/">第一回LT大会（後編）⇒ スライド</a></li>
<li><a href="http://future-architect.github.io/articles/20160413/">第二回LT大会 ⇒ 開催の経緯＆スライド</a></li>
</ul>
</li>
</ul>
<h2 id="新人さんによる乾杯の音頭♪"><a href="#新人さんによる乾杯の音頭♪" class="headerlink" title="新人さんによる乾杯の音頭♪"></a>新人さんによる乾杯の音頭♪</h2><p>無茶振りだったので嫌そうな顔をしていますが、この後に良いコメントしていました！笑<br><img src="/images/photo_20160527_02.jpg"></p>
<h2 id="司会の若手エンジニアです♪"><a href="#司会の若手エンジニアです♪" class="headerlink" title="司会の若手エンジニアです♪"></a>司会の若手エンジニアです♪</h2><p>もはや司会業は手慣れたもの。<br><img src="/images/photo_20160527_03.jpg"></p>
<h2 id="とっておきの景品です♪"><a href="#とっておきの景品です♪" class="headerlink" title="とっておきの景品です♪"></a>とっておきの景品です♪</h2><p>何が入っているかはお楽しみ。<br><img src="/images/photo_20160527_04.jpg"></p>
<h1 id="プレゼンタ"><a href="#プレゼンタ" class="headerlink" title="プレゼンタ"></a>プレゼンタ</h1><p>前回より2名多い、豪華13名のプレゼンタが登壇しました。</p>
<p><img src="/images/photo_20160527_05.png"></p>
<p>またしても副社長が自ら参戦いただき、弊社のDNAを熱く語っていただきました。<br>前回は中学～高校時代の話でしたが、今回はいよいよ起業間際まで到達。<br>次回はついに創業期の話を聞くことが出来ると思います！</p>
<p>学生さんのプレゼンタである小形さんは、学生らしからぬ堂々としたプレゼンを披露し、周囲の度肝を抜いていました。<br>社員だけではなく、他の学生さんにも良い影響を与えていたのが印象的です。</p>
<h1 id="発表内容"><a href="#発表内容" class="headerlink" title="発表内容"></a>発表内容</h1><p>各自、趣向を凝らした資料で会場を沸かしていました！</p>
<p>文章で気を引いたり・・・<br><img src="/images/photo_20160527_06.jpg"></p>
<p>こじらせ気味な技術を紹介したり・・・<br><img src="/images/photo_20160527_07.jpg"></p>
<p>GitHubのスター数を自慢したり・・・<br><img src="/images/photo_20160527_08.jpg"></p>
<p>尖った内容ばかりでとても面白かったです！</p>
<p>資料はSlideShareにて公開中です。<br>ぜひ気になる発表をチェックして下さい！</p>
<table>
<thead>
<tr>
<th>#</th>
<th>テーマ</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>selenium×rspec(六反 裕理さん)<br> <iframe src="//www.slideshare.net/slideshow/embed_code/key/2lqijh0hbUFbD3" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/YuriRokutan/2391-seleniumrspec-20160427" title="selenium×rspec" target="_blank">selenium×rspec</a> </strong> from <strong><a href="//www.slideshare.net/YuriRokutan" target="_blank">Yuri Rokutan</a></strong> </div></td>
</tr>
<tr>
<td>2</td>
<td>Seleniumのモバイル版「Appium」を使ってみた（山浦 雄太さん） <br><iframe src="//www.slideshare.net/slideshow/embed_code/key/DGXuMWAbqOwiXt" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/yutayamaura1/seleniumappium" title="Seleniumのモバイル版「Appium」を使ってみた" target="_blank">Seleniumのモバイル版「Appium」を使ってみた</a> </strong> from <strong><a href="//www.slideshare.net/yutayamaura1" target="_blank">yamapy black</a></strong> </div></td>
</tr>
<tr>
<td>3</td>
<td>FutureのDNA（石橋 国人さん）</td>
</tr>
<tr>
<td>4</td>
<td>Spring frameworkが大好きなおはなし（木佐貫 智さん）<br> <iframe src="//www.slideshare.net/slideshow/embed_code/key/rOAneRImeyb2r4" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/ssuser17f327/spring-framework-62165851" title="Spring frameworkが大好きなおはなし" target="_blank">Spring frameworkが大好きなおはなし</a> </strong> from <strong><a href="//www.slideshare.net/ssuser17f327" target="_blank">Satoshi Kisanuki</a></strong> </div></td>
</tr>
<tr>
<td>5</td>
<td>アンテナの貼り方（小形俊輔さん）</td>
</tr>
<tr>
<td>6</td>
<td>vuls（神戸 康多さん）<br> <iframe src="//www.slideshare.net/slideshow/embed_code/key/sj9PL3BgHkGOFK" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/kotakanbe/lt3-2016428-vuls" title="社内LT大会#3 2016-4-28 Vuls" target="_blank">社内LT大会#3 2016-4-28 Vuls</a> </strong> from <strong><a href="//www.slideshare.net/kotakanbe" target="_blank">Kota Kanbe</a></strong> </div></td>
</tr>
<tr>
<td>7</td>
<td>競プロ、なんでお前たちやらないの？（塚本 祥太さん）<br> <iframe src="//www.slideshare.net/slideshow/embed_code/key/tXjM2efDCSuttV" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/ShotaTsukamoto/ss-62379197" title="競プロ、なんでお前たちやらないの？" target="_blank">競プロ、なんでお前たちやらないの？</a> </strong> from <strong><a href="//www.slideshare.net/ShotaTsukamoto" target="_blank">Shota Tsukamoto</a></strong> </div></td>
</tr>
<tr>
<td>8</td>
<td>なんちゃってIotで朝活してみよう！（栗村 和彦さん）<br> <iframe src="//www.slideshare.net/slideshow/embed_code/key/rjKX2SVI7G2h8n" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/KazuhikoKurimura/io-t-62401712" title="なんちゃってIo tで朝活してみよう！" target="_blank">なんちゃってIo tで朝活してみよう！</a> </strong> from <strong><a href="//www.slideshare.net/KazuhikoKurimura" target="_blank">Kazuhiko Kurimura</a></strong> </div></td>
</tr>
<tr>
<td>9</td>
<td>こじらせVBA（大矢 敏さん） <br><iframe src="//www.slideshare.net/slideshow/embed_code/key/lwgF2T73pfyPjI" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/satoshiohya/vba-62341558" title="こじらせVBA" target="_blank">こじらせVBA</a> </strong> from <strong><a href="//www.slideshare.net/satoshiohya" target="_blank">satoshi ohya</a></strong> </div></td>
</tr>
<tr>
<td>10</td>
<td>ぜんぶScalaでやってみた（山本 力世さん）<br> <iframe src="//www.slideshare.net/slideshow/embed_code/key/B9JiNDlVOpjPon" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/rkyymmt/scala-62380851" title="ぜんぶScalaでやってみた" target="_blank">ぜんぶScalaでやってみた</a> </strong> from <strong><a href="//www.slideshare.net/rkyymmt" target="_blank">力世 山本</a></strong> </div></td>
</tr>
<tr>
<td>11</td>
<td>GISについてのお話（大塚 亮平さん）<br><iframe src="//www.slideshare.net/slideshow/embed_code/key/DLxyWZy2maz3ga" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/futureotsuka/gis-62366385" title="GISについてのお話" target="_blank">GISについてのお話</a> </strong> from <strong><a href="//www.slideshare.net/futureotsuka" target="_blank">futureotsuka</a></strong> </div></td>
</tr>
<tr>
<td>12</td>
<td>Grep（山田 勇一さん）<br> <iframe src="//www.slideshare.net/slideshow/embed_code/key/Hg6DQ0BBoJprsU" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/yuichiyamada/grep-62165765" title="Grep" target="_blank">Grep</a> </strong> from <strong><a href="//www.slideshare.net/yuichiyamada" target="_blank">yuichi yamada</a></strong> </div></td>
</tr>
<tr>
<td>13</td>
<td>HiveQLチューニングを通してわかる、今どきHadoop処理（須田 桂伍さん）</td>
</tr>
</tbody>
</table>
<h1 id="タイムテーブル"><a href="#タイムテーブル" class="headerlink" title="タイムテーブル"></a>タイムテーブル</h1><p>開催時間は19:00～21:30の2.5時間を予定していました。<br>各LTは8分で強制終了する予定でした。</p>
<table>
<thead>
<tr>
<th>時間</th>
<th>内容</th>
<th>備考</th>
</tr>
</thead>
<tbody>
<tr>
<td>18:30～19:00</td>
<td>準備</td>
<td>会場準備を開始。並行して一部の学生さんと社員が0次回を敢行し盛り上がる</td>
</tr>
<tr>
<td>19:00~19:10</td>
<td>開会</td>
<td>ぞろぞろと人が集まりだす。みなさんピザを片手に席へ</td>
</tr>
<tr>
<td>19:10~19:50</td>
<td>LT 前半</td>
<td>弊社副社長のLTが会場を盛り上げてくれました！</td>
</tr>
<tr>
<td>19:50~20:10</td>
<td>ご歓談</td>
<td>遅れてピザが到着し、みんなのテンションがMAXへ。タイムスケジュールは10分押し</td>
</tr>
<tr>
<td>20:10~21:10</td>
<td>LT 後半</td>
<td>LTで大盛り上がり。会場後方がガヤガヤしすぎているという苦情が出ました。笑</td>
</tr>
<tr>
<td>21:10~21:30</td>
<td>表彰</td>
<td>最優秀LTの発表!優勝の座はどこへ！？</td>
</tr>
<tr>
<td>21:30~21:45</td>
<td>閉会</td>
<td>集合写真＆後片付け</td>
</tr>
</tbody>
</table>
<h1 id="投票"><a href="#投票" class="headerlink" title="投票"></a>投票</h1><p>最優秀LTを決定するための投票を実施しました！</p>
<p>前回までは一人一票でしたが、特定のLTに票が固まり順位付けに難があるということで、今回は実験的に <strong>一人三票</strong> で行いまいした。<br>サービスはGoogleフォームではなく、<a href="https://creativesurvey.com/" target="_blank" rel="external">CREATIVE SUVERVEY</a> を利用しました。<br>一番の変更理由はGoogleフォームの投票結果URLが推測しやすく、運営者以外が結果を覗いてしまう事案が続出したからです。</p>
<p>結果は如何に・・・・・・・？！<br>・・・・・・・・・・・・・・・<br>・・・・・・・・・・・・・・・<br>・・・・・・・・・・・・・・・</p>
<h1 id="投票結果"><a href="#投票結果" class="headerlink" title="投票結果"></a>投票結果</h1><p>気になる投票結果は次のようになりました！</p>
<h3 id="第1位-grep（山田-勇一さん）"><a href="#第1位-grep（山田-勇一さん）" class="headerlink" title="第1位: grep（山田 勇一さん）"></a><strong>第1位: grep（山田 勇一さん）</strong></h3><p>awk, sed, while, findなど数多のコマンド全てを「grepのオプションです！（キリ」と華麗に言い放ち、笑いを誘った山田さんが優勝です！<br>分かりやすいフレーズを繰り返すことによる威力をまざまざと見せつけられました。<br>Vulsに打ち勝ててよかったですね、grepおじさん！<br>おめでとうございます！</p>
<p><img src="/images/photo_20160527_09.jpg"></p>
<h3 id="第2位-Vuls（神戸-康多さん）"><a href="#第2位-Vuls（神戸-康多さん）" class="headerlink" title="第2位: Vuls（神戸 康多さん）"></a><strong>第2位: Vuls（神戸 康多さん）</strong></h3><p>Vuls（VULnerability Scanner）の誕生秘話についてです！<br>個人的にとても響くものがありました。<br>良い話でしたがそれでも声を大きくして叫びたい！ <del>「バ◯ス！」</del></p>
<p><img src="/images/photo_20160527_10.jpg"></p>
<h3 id="第3位"><a href="#第3位" class="headerlink" title="第3位:"></a>第3位:</h3><p>※3位は同率で2名選出されました！</p>
<h3 id="こじらせVBA（大矢-敏さん）"><a href="#こじらせVBA（大矢-敏さん）" class="headerlink" title="こじらせVBA（大矢 敏さん）"></a><strong>こじらせVBA（大矢 敏さん）</strong></h3><p><img src="/images/photo_20160527_11.jpg"></p>
<h3 id="競プロ、なんでお前たちやらないの？（塚本-祥太さん）"><a href="#競プロ、なんでお前たちやらないの？（塚本-祥太さん）" class="headerlink" title="競プロ、なんでお前たちやらないの？（塚本 祥太さん）"></a><strong>競プロ、なんでお前たちやらないの？（塚本 祥太さん）</strong></h3><p><img src="/images/photo_20160527_12.jpg"></p>
<h3 id="ブービー：全部、Scalaで作ってみた（山本-力也さん）"><a href="#ブービー：全部、Scalaで作ってみた（山本-力也さん）" class="headerlink" title="ブービー：全部、Scalaで作ってみた（山本 力也さん）"></a>ブービー：全部、Scalaで作ってみた（山本 力也さん）</h3><p><img src="/images/photo_20160527_13.jpg"></p>
<p>投票結果です！<br>だれが何位だったか詳細は秘密です！</p>
<p><img src="/images/photo_20160527_14.png"></p>
<h1 id="景品"><a href="#景品" class="headerlink" title="景品"></a>景品</h1><p>今回は最優秀者とブービーの2名の方に豪華プレゼントを進呈しました。</p>
<p>その内容は・・・・・・・・？！<br>・・・・・・・・・・・・・・・<br>・・・・・・・・・・・・・・・<br>・・・・・・・・・・・・・・・</p>
<h2 id="最優秀者賞：28インチ4Kディスプレイ"><a href="#最優秀者賞：28インチ4Kディスプレイ" class="headerlink" title="最優秀者賞：28インチ4Kディスプレイ"></a>最優秀者賞：28インチ4Kディスプレイ</h2><p><img src="/images/photo_20160527_15.jpg"><br><img src="/images/photo_20160527_16.jpg"><br><img src="/images/photo_20160527_17.jpg" class="img-middle-size"></p>
<p><a href="http://www.amazon.co.jp/dp/B01BS8MYMO" target="_blank" rel="external">http://www.amazon.co.jp/dp/B01BS8MYMO</a></p>
<h2 id="ブービー賞：Amazonマグカップ"><a href="#ブービー賞：Amazonマグカップ" class="headerlink" title="ブービー賞：Amazonマグカップ"></a>ブービー賞：Amazonマグカップ</h2><p><img src="/images/photo_20160527_18.jpg"></p>
<p>どちらもすご～く喜んでもらえたようで良かったです！</p>
<h1 id="次回の幹事任命"><a href="#次回の幹事任命" class="headerlink" title="次回の幹事任命"></a>次回の幹事任命</h1><p>最優秀賞＆ブービー賞を獲得した人が、次回LT大会の幹事に任命されます。<br>というわけで、次回の幹事はgrepおじさん山田さん、ハッカソンに出場し過ぎで疲労困ぱいだった山本さんです。<br>よろしくお願いします！</p>
<h1 id="集合写真"><a href="#集合写真" class="headerlink" title="集合写真"></a>集合写真</h1><p>最後にみんなで集合写真を撮りました。</p>
<p><img src="/images/photo_20160527_19.jpg"></p>
<h1 id="数値で見るLT大会"><a href="#数値で見るLT大会" class="headerlink" title="数値で見るLT大会"></a>数値で見るLT大会</h1><p>第三回LT大会も大成功に終わりました。<br>社内での認知度もさらに高まり、一見さんにも多く来ていただけました。</p>
<h2 id="参加者数"><a href="#参加者数" class="headerlink" title="参加者数"></a>参加者数</h2><p>途中で何度かカウントした概算ですが、回を重ねるごと明らかに参加者（青）が増えています。<br>なぜか、投票数は初回が異常に高いのが気になりますが・・</p>
<p><img src="/images/photo_20160527_20.png" class="img-middle-size"></p>
<table>
<thead>
<tr>
<th>#</th>
<th>参加者</th>
<th>登壇者</th>
<th>学生</th>
<th>投票数</th>
</tr>
</thead>
<tbody>
<tr>
<td>第一回目</td>
<td>約70名</td>
<td>15名</td>
<td>2名</td>
<td>57票</td>
</tr>
<tr>
<td>第二回目</td>
<td>約80名</td>
<td>11名</td>
<td>8名</td>
<td>41票</td>
</tr>
<tr>
<td>第三回目</td>
<td>約90名</td>
<td>13名</td>
<td>17名</td>
<td>43票</td>
</tr>
</tbody>
</table>
<h2 id="アンケート"><a href="#アンケート" class="headerlink" title="アンケート"></a>アンケート</h2><p>今回から投票時にアンケートを同時に取るようにしました。</p>
<h2 id="満足度"><a href="#満足度" class="headerlink" title="満足度"></a>満足度</h2><p>満足度は非常に高い評価をいただけました。<br>投票してくれた人だけのみの結果なので信頼性は低いですが、嬉しいですね！</p>
<p><img src="/images/photo_20160527_21.png" class="img-middle-size"></p>
<h2 id="個別コメント"><a href="#個別コメント" class="headerlink" title="個別コメント"></a>個別コメント</h2><p>アンケートによってたくさんのコメントをいただけました。<br>数が多いので全ては紹介できませんが、いくつか代表的なものを紹介します！</p>
<p>ピザが大好評過ぎて怖いですね！</p>
<table>
<thead>
<tr>
<th>#</th>
<th>分類</th>
<th>コメント内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>01</td>
<td>雰囲気</td>
<td>面白かったですー</td>
</tr>
<tr>
<td>02</td>
<td>雰囲気</td>
<td>自由な感じが良かった</td>
</tr>
<tr>
<td>03</td>
<td>雰囲気</td>
<td>おれもでたい</td>
</tr>
<tr>
<td>04</td>
<td>LT内容</td>
<td>アプリテストに利用したい内容が聞けたこと</td>
</tr>
<tr>
<td>05</td>
<td>LT内容</td>
<td>バラエティ豊かなLTと、おいしいご飯を食べれられて満足です</td>
</tr>
<tr>
<td>06</td>
<td>LT内容</td>
<td>フランクに技術に触れる機会はなかなかないので貴重な機会だった。</td>
</tr>
<tr>
<td>07</td>
<td>登壇者</td>
<td>発表する人も聞いてる人も目が輝いていた</td>
</tr>
<tr>
<td>08</td>
<td>登壇者</td>
<td>たくさんの先輩とお話できたため</td>
</tr>
<tr>
<td>09</td>
<td>登壇者</td>
<td>技術面で尖りすぎている(いい意味です)人が多かったため</td>
</tr>
<tr>
<td>10</td>
<td>登壇者</td>
<td>おれもでたい</td>
</tr>
<tr>
<td>11</td>
<td>飲食</td>
<td>ピザ素晴らしい</td>
</tr>
<tr>
<td>12</td>
<td>飲食</td>
<td>ピザ美味しかった。終わるのがやや遅い。</td>
</tr>
<tr>
<td>13</td>
<td>飲食</td>
<td>おいしいご飯を食べれられて満足です</td>
</tr>
</tbody>
</table>
<h1 id="振り返り"><a href="#振り返り" class="headerlink" title="振り返り"></a>振り返り</h1><p>運営目線による、KPTでの振り返りも共有します。<br>テキストだと味気なかったので付箋スタイル感を出してみました。</p>
<p><img src="/images/photo_20160527_22.jpg" class="img-middle-size"></p>
<h1 id="運営の所感"><a href="#運営の所感" class="headerlink" title="運営の所感"></a>運営の所感</h1><p>LT大会の運営は大変ですが、みんなに喜んでもらえて嬉しいです。<br>ただ、幹事役を拝命すると自分が登壇側に回りにくいのが辛いところですね。<br>ブービーを取ってしまった自分が悪いので、納得感はありますが。笑</p>
<p>今回はGW前に実施した影響もあってか参加見込み者が多く、食料の調達に非常に苦労しました。<br>それでも足りないという声があったので、より美味しく安く仕入れられるように工夫したいと思います。</p>
<p>もちろん、予算アップ出来れば一番なのですが（チラ</p>
<h1 id="お知らせ"><a href="#お知らせ" class="headerlink" title="お知らせ"></a>お知らせ</h1><p>第四回LT大会も開催が決定しています。</p>
<ul>
<li>開催日時： 2016年6月3日（金）</li>
<li>テーマ　： みんな楽しく</li>
</ul>
<p>2016/5/27時点では、LLT案の採用や、今までに無いテーマでの発表があるということです！<br>次回がどのようなLT大会になるか、乞うご期待！</p>
<p><img src="/images/photo_20160527_23.jpg"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/photo_20160527_01.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;こんにちは。真野です。&lt;/p&gt;
&lt;p&gt;2016年4月28日(金)に開催された、LT大会#3についてご報告します。&lt;/p&gt;
&lt;h1 id=&quot;開催の概要&quot;&gt;&lt;a href=&quot;#開催
    
    </summary>
    
      <category term="社内制度" scheme="https://future-architect.github.io/categories/%E7%A4%BE%E5%86%85%E5%88%B6%E5%BA%A6/"/>
    
    
      <category term="社内イベント" scheme="https://future-architect.github.io/tags/%E7%A4%BE%E5%86%85%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/"/>
    
      <category term="slideshare" scheme="https://future-architect.github.io/tags/slideshare/"/>
    
  </entry>
  
  <entry>
    <title>Space Apps Challenge 2016への投票方法</title>
    <link href="https://future-architect.github.io/articles/20160512/"/>
    <id>https://future-architect.github.io/articles/20160512/</id>
    <published>2016-05-12T00:05:59.000Z</published>
    <updated>2017-02-27T15:03:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Space-Apps-Challengeとは"><a href="#Space-Apps-Challengeとは" class="headerlink" title="Space Apps Challengeとは"></a>Space Apps Challengeとは</h1><p>Space Apps Challenge は宇宙関係のオープンデータの活用を目指し、NASA（アメリカ航空宇宙局）の呼びかけにより始まったハッカソンで、2012年から毎年1回4月に開催されています。<br><a href="https://2016.spaceappschallenge.org/" target="_blank" rel="external">2016年</a>は世界135の都市で同時開催し、日本国内では会津、つくば、東京、相模原、福井、宇部、熊本（平成28年熊本震災の影響のため、熊本会場は中止となりました）で開催します。</p>
<h1 id="People’s-Choice"><a href="#People’s-Choice" class="headerlink" title="People’s Choice"></a>People’s Choice</h1><p>各都市の上位2作品が、後日開催される国際コンペティションに参戦し、世界中から選出された作品とその成果を競います！</p>
<p>また、People’s Choice とは一般人による投票の意味で、各都市につき1作品が選ばれます。<br>Space Apps Challenge では、25チームに絞られた後に一般投票が行われるようです。<br><img src="/images/photo_20160512_01.png" class="img-middle-size"></p>
<p>2016年つくば会場のPeople’s ChoiceはThe ZEN(ザ禅)が選ばれました！<br>ぜひ以下の記事を確認下さい！<br><a href="/articles/20160511/">ハッカソン道中記#3～社会人2年目のリケジョがハッカソンに出てみました～</a></p>
<h1 id="投票方法"><a href="#投票方法" class="headerlink" title="投票方法"></a>投票方法</h1><p>投票サイトにアクセスします</p>
<p><strong>【投票サイト】</strong><br><strong><a href="https://2016.spaceappschallenge.org/" target="_blank" rel="external">https://2016.spaceappschallenge.org/</a></strong></p>
<p><strong>※2016年は、5月10日～5月16日の一週間です！</strong></p>
<h2 id="ユーザ登録"><a href="#ユーザ登録" class="headerlink" title="ユーザ登録"></a>ユーザ登録</h2><p><img src="/images/photo_20160512_02.png" class="img-middle-size"><br><img src="/images/photo_20160512_03.png" class="img-middle-size"><br><img src="/images/photo_20160512_04.png" class="img-middle-size"></p>
<h2 id="Space-AppsからEメールが来ていないか確認します"><a href="#Space-AppsからEメールが来ていないか確認します" class="headerlink" title="Space AppsからEメールが来ていないか確認します"></a>Space AppsからEメールが来ていないか確認します</h2><p><img src="/images/photo_20160512_05.png" class="img-middle-size"></p>
<h2 id="ログイン"><a href="#ログイン" class="headerlink" title="ログイン"></a>ログイン</h2><p><img src="/images/photo_20160512_06.png" class="img-middle-size"></p>
<p>先ほど登録したユーザ名、パスワードを入力します<br><img src="/images/photo_20160512_07.png" class="img-middle-size"></p>
<h2 id="投票する作品を選択"><a href="#投票する作品を選択" class="headerlink" title="投票する作品を選択"></a>投票する作品を選択</h2><p>Awardページから投票したいプロダクトを選びます。<br><img src="/images/photo_20160512_08.png" class="img-middle-size"></p>
<p>よろしければ、ぜひとも『The ZEN』(ザ禅)に投票下さい。笑<br><img src="/images/photo_20160512_09.png" class="img-middle-size"></p>
<h2 id="投票"><a href="#投票" class="headerlink" title="投票"></a>投票</h2><p><img src="/images/photo_20160512_10.png" class="img-middle-size"></p>
<h1 id="おしまい"><a href="#おしまい" class="headerlink" title="おしまい"></a>おしまい</h1><p>投票作業は以上です。<br>期間中は毎日投票できるので、お気に入りの作品を応援しましょう！</p>
<p>結果が楽しみですね！</p>
<p><img src="/images/photo_20160512_11.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Space-Apps-Challengeとは&quot;&gt;&lt;a href=&quot;#Space-Apps-Challengeとは&quot; class=&quot;headerlink&quot; title=&quot;Space Apps Challengeとは&quot;&gt;&lt;/a&gt;Space Apps Challenge
    
    </summary>
    
    
  </entry>
  
</feed>
