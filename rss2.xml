<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>フューチャー技術ブログ</title>
    <link>https://future-architect.github.io/</link>
    
    <image>
      <url>https://future-architect.github.io/feed_icon.png</url>
      <title>フューチャー技術ブログ</title>
      <link>https://future-architect.github.io/</link>
    </image>
    
    <atom:link href="https://future-architect.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>フューチャーの開発者による公式技術ブログです。業務で利用している技術を幅広く紹介します。</description>
    <pubDate>Mon, 27 Dec 2021 01:55:12 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>科目等履修生はいいぞ</title>
      <link>https://future-architect.github.io/articles/20211227a/</link>
      <guid>https://future-architect.github.io/articles/20211227a/</guid>
      <pubDate>Sun, 26 Dec 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;img src=&quot;/images/20211227a/education-g3f9d86844_640.jpg&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;404&quot;&gt;

&lt;p&gt;TIG</description>
          
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/20211227a/education-g3f9d86844_640.jpg" alt="" width="640" height="404"><p>TIG DXユニット所属の中川旭です。</p><p>昔から興味がありCS(Computer Science)に触れてはきましたが、大学では非CSの学部に行ったため体系的な知識を持っているのか不安を持ちながら過ごしてきました。<br>働き始めてお金に余裕が生まれたこと、そして優秀なメンバーに囲まれ学習意欲が湧いてきたことからふと私は思い立ちました。</p><p><strong>よし！大学院行くぞ！</strong></p><p>でも、社会人コースであったとしてもいきなり修士課程に入学するのはハードルが高い。<br>入学を決める前に、社会人学生になるとどのような生活をすることになるか知っておきたい。<br>そんな私が見つけたのが「科目等履修生制度」でした。</p><h2 id="科目等履修生とは"><a href="#科目等履修生とは" class="headerlink" title="科目等履修生とは"></a>科目等履修生とは</h2><p>科目等履修生とは、「正規生でない、大学や大学院の科目を履修する者」のことです。<br>日本の大学/大学院の多くが科目等履修生制度を採用しています。<br><a href="https://www.niad.ac.jp/n_gakui/application/kamokutou/">大学改革支援・学位授与機構のページ</a> に一覧があるので、気になる大学を調べてみましょう。</p><h2 id="科目等履修生の特徴"><a href="#科目等履修生の特徴" class="headerlink" title="科目等履修生の特徴"></a>科目等履修生の特徴</h2><p>科目等履修生には、以下のような特徴があります。</p><ul><li>一つの科目から履修が可能である</li><li>履修した科目の単位を正式に認定される</li><li>授業料は履修する単位数の分だけ支払う（そのほか、検定料や入学料がかかります）</li></ul><p>このため、「この分野について学んでみたいけど、まだ知らないから入学は決意できない」という方や「この先生の講義を受けてみたい！」という方に最適な制度です。</p><p>そしてなんと、単位が正式に認定されるため、もし大学や大学院に入学する場合に取得済みの単位として認められる場合があります。※事前によく調べましょう。</p><h3 id="ちなみに料金"><a href="#ちなみに料金" class="headerlink" title="ちなみに料金"></a>ちなみに料金</h3><p>大学によって異なるかと思いますが、私が科目を履修しているJAIST東京社会人コースでは以下のようになっています。<br>在学期間満了日から2年以内であれば授業料のみでまた履修が可能で、検定料と入学料を再度支払う必要はありません。</p><p><a href="https://www.jaist.ac.jp/education/non-degree/">https://www.jaist.ac.jp/education/non-degree/</a></p><ul><li>検定料 9800円</li><li>入学料 28,200円</li><li>授業料 14,800円 / 1単位</li></ul><p>※各大学の最新の情報を参照してください。</p><h3 id="社会人向けの情報系コースがある大学院"><a href="#社会人向けの情報系コースがある大学院" class="headerlink" title="社会人向けの情報系コースがある大学院"></a>社会人向けの情報系コースがある大学院</h3><p>こちらのブログを読んでいる人はIT業界の方が多そう、ということで情報系のコースで社会人が勤務しながらでも通いやすいように配慮されている大学院について書いておきます。私が調べた範囲なので網羅できているわけではありません。</p><ul><li><a href="https://www.jaist.ac.jp/satellite/sate/">北陸先端科学技術大学院大学(JAIST) 東京社会人コース</a><br><a href="https://www.jaist.ac.jp/education/non-degree/">科目等履修生制度のページ</a><br>「東京社会人コース」とある通り、社会人向けのコースが存在します。講義は基本的に土日に行われるため、スケジュールの調整がしやすいことが特徴です。<br>私もJAISTの東京サテライトの講義を受講しています。</li><li><a href="https://aiit.ac.jp/">東京都立産業技術大学院大学(AIIT)</a><br><a href="https://aiit.ac.jp/admission/credited_student/">AIIT単位バンク制度(科目等履修生制度)のページ</a><br>社会人学生が約8割を占める、社会人が通いやすい大学院です。<br>講義の多くが土日と平日夜間に行われており、平日日中に仕事をしながらでも受講しやすくなっています。</li></ul><h2 id="科目等履修生をやってよかったこと"><a href="#科目等履修生をやってよかったこと" class="headerlink" title="科目等履修生をやってよかったこと"></a>科目等履修生をやってよかったこと</h2><h3 id="自分の生活にあった負荷で履修できる"><a href="#自分の生活にあった負荷で履修できる" class="headerlink" title="自分の生活にあった負荷で履修できる"></a>自分の生活にあった負荷で履修できる</h3><p>3か月で社会人コースの1科目2単位を履修しており、平日に適度に課題をこなす状態をキープできています。<br>〇年間で△単位といった決まりがないため、次はもう少し増やそう、減らそう、と調節ができるのは科目等履修生の非常に大きなメリットです。</p><h3 id="興味のある科目を履修できる"><a href="#興味のある科目を履修できる" class="headerlink" title="興味のある科目を履修できる"></a>興味のある科目を履修できる</h3><p>自分にとって大学生時代の履修の目的は「学位を取得すること」でしたが、科目等履修生としての履修の目的は「その科目の学習をすること」であると強く自覚できており、楽しみながら講義を受け課題に取り組むことができています。</p><p>私が履修しているのは「並列処理」という講義です。この講義では処理能力向上のためにハードウェア・ソフトウェアの両面からどのような工夫がされてきたか学ぶことができます。実習では講義の内容を生かしたプログラムを作成し、なんとJAISTのスーパーコンピューターで実行することもできます。スパコンを使えるなんて、これだけでもコスパがいいですね！</p><h2 id="おわりに"><a href="#おわりに" class="headerlink" title="おわりに"></a>おわりに</h2><p>技術の進歩が非常に早いこともあり、IT業界には他の業界よりも社会人学生や働いてから大学や大学院に行く例が多いように見えます。しかしまだまだ周囲からの理解が得られないこともあるかと思います。</p><p>科目等履修生という選択肢の存在がもっと広く知られ、もともと興味のあった分野や仕事を通じて興味を持ったことについて多くの人が気軽に学べるようになるといいなと思っています。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Culture/">Culture</category>
      
      
      <category domain="https://future-architect.github.io/tags/%E5%A4%A7%E5%AD%A6%E9%99%A2/">大学院</category>
      
      <category domain="https://future-architect.github.io/tags/%E7%A7%91%E7%9B%AE%E7%AD%89%E5%B1%A5%E4%BF%AE%E7%94%9F/">科目等履修生</category>
      
      
      <comments>https://future-architect.github.io/articles/20211227a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>FlutterでGoogleマップを表示してみる</title>
      <link>https://future-architect.github.io/articles/20211224a/</link>
      <guid>https://future-architect.github.io/articles/20211224a/</guid>
      <pubDate>Thu, 23 Dec 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;TIGの伊藤真彦です&lt;/p&gt;
&lt;p&gt;先日&lt;a href=&quot;/articles/20211221a/&quot;&gt;入門記事&lt;/a&gt;を書いたFlutterですが、実践的なアプリケーションの作り込みも試してみました。&lt;/p&gt;
&lt;h1</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>TIGの伊藤真彦です</p><p>先日<a href="/articles/20211221a/">入門記事</a>を書いたFlutterですが、実践的なアプリケーションの作り込みも試してみました。</p><h1 id="FlutterでGoogleマップを表示したい"><a href="#FlutterでGoogleマップを表示したい" class="headerlink" title="FlutterでGoogleマップを表示したい"></a>FlutterでGoogleマップを表示したい</h1><p>FlutterではGoogleマップを表示するためのウィジェットが存在するため、どのくらい簡単に実現できるか検証してみました。</p><h1 id="実装の準備"><a href="#実装の準備" class="headerlink" title="実装の準備"></a>実装の準備</h1><p><a href="https://developers.google.com/maps/documentation?hl=ja">Google Maps Platform</a>を活用することで、任意のアプリケーションからGoogleマップの機能を利用することができます。<br>アプリケーションの実装の前に、GCPアカウントを用意し、<code>Maps JavaScript API</code>など必要な機能を有効化し、APIを実行するためのキーを払い出す必要があります。</p><h1 id="google-maps-flutter"><a href="#google-maps-flutter" class="headerlink" title="google_maps_flutter"></a>google_maps_flutter</h1><p>Flutterでは<a href="https://pub.dev/packages/google_maps_flutter">google_maps_flutter</a>というパッケージが存在します。Flutterチームのオフィシャルプラグインで安心感が高いです。このプラグインの機能を試してみます。</p><p>今回もFlutter on the Webで検証します。</p><h2 id="パッケージの導入"><a href="#パッケージの導入" class="headerlink" title="パッケージの導入"></a>パッケージの導入</h2><p>環境構築、Hello Worldアプリケーションの用意は<a href="https://future-architect.github.io/articles/20211221a/">環境構築の記事</a>を参照してください。<br>アプリケーションの用意ができたらパッケージをインストールします。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter pub add google_maps_flutter</span><br></pre></td></tr></table></figure><p>Flutter on the Webでは<a href="https://pub.dev/packages/google_maps_flutter_web">google_maps_flutter_web</a>も導入します。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter pub add google_maps_flutter_web</span><br></pre></td></tr></table></figure><p>導入するとGoogleMapウィジェットが使えるようになります。</p><figure class="highlight dart"><figcaption><span>main.dart</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:google_maps_flutter/google_maps_flutter.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> GoogleMap(</span><br><span class="line">      mapType: MapType.normal,</span><br><span class="line">      initialCameraPosition: _kGooglePlex,</span><br><span class="line">      markers: _markers,</span><br><span class="line">      polylines: _lines,</span><br><span class="line">      onMapCreated: (GoogleMapController controller) &#123;</span><br><span class="line">        _controller.complete(controller);</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Flutter on the Webでは<code>index.html</code>のヘッダー部分にGoogle MapsのJavascriptを追加するとウィジェットが正常に動作します。</p><figure class="highlight html"><figcaption><span>index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://maps.googleapis.com/maps/api/js?key=MyApiKey&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ウィジェットを組み込む"><a href="#ウィジェットを組み込む" class="headerlink" title="ウィジェットを組み込む"></a>ウィジェットを組み込む</h2><p><a href="https://pub.dev/packages/google_maps_flutter/example">公式example</a>は中々壮大な例となっており、最小限の機能を抜粋するのが逆に難しいくらいです.<br><a href="https://github.com/flutter/plugins/tree/master/packages/google_maps_flutter/google_maps_flutter">GitHubのREADME</a>には比較的ミニマムな実装が用意されています。</p><figure class="highlight dart"><figcaption><span>main.dart</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:async&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:google_maps_flutter/google_maps_flutter.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">&#x27;Flutter Google Maps Demo&#x27;</span>,</span><br><span class="line">      home: MapSample(),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MapSample</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  State&lt;MapSample&gt; createState() =&gt; MapSampleState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MapSampleState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MapSample</span>&gt; </span>&#123;</span><br><span class="line">  Completer&lt;GoogleMapController&gt; _controller = Completer();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> CameraPosition _kGooglePlex = CameraPosition(</span><br><span class="line">    target: LatLng(<span class="number">37.42796133580664</span>, <span class="number">-122.085749655962</span>),</span><br><span class="line">    zoom: <span class="number">14.4746</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> CameraPosition _kLake = CameraPosition(</span><br><span class="line">      bearing: <span class="number">192.8334901395799</span>,</span><br><span class="line">      target: LatLng(<span class="number">37.43296265331129</span>, <span class="number">-122.08832357078792</span>),</span><br><span class="line">      tilt: <span class="number">59.440717697143555</span>,</span><br><span class="line">      zoom: <span class="number">19.151926040649414</span>);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Scaffold(</span><br><span class="line">      body: GoogleMap(</span><br><span class="line">        mapType: MapType.hybrid,</span><br><span class="line">        initialCameraPosition: _kGooglePlex,</span><br><span class="line">        onMapCreated: (GoogleMapController controller) &#123;</span><br><span class="line">          _controller.complete(controller);</span><br><span class="line">        &#125;,</span><br><span class="line">      ),</span><br><span class="line">      floatingActionButton: FloatingActionButton.extended(</span><br><span class="line">        onPressed: _goToTheLake,</span><br><span class="line">        label: Text(<span class="string">&#x27;To the lake!&#x27;</span>),</span><br><span class="line">        icon: Icon(Icons.directions_boat),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Future&lt;<span class="keyword">void</span>&gt; _goToTheLake() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> GoogleMapController controller = <span class="keyword">await</span> _controller.future;</span><br><span class="line">    controller.animateCamera(CameraUpdate.newCameraPosition(_kLake));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>main.dart</code>を上記コードに置き換えてアプリケーションを起動すると画像のような状態になります。</p><img src="/images/20211224a/image.png" alt="Google Mapサンプルアプリ" width="628" height="719" loading="lazy"><p>実際のアプリケーションではGoogleMapウィジェットを全画面に表示するだけのものを作ることにはならないと思います。<br>サンプルの様々な部分を参考に何らかの機能を追加したり、他のウィジェットと組み合わせたりと拡張していきましょう。</p><p>例えば他の情報を表示する余白を作るためにContainerウィジェットでGoogleMapウィジェットをラッピングするようなことができます。<br><img src="/images/20211224a/image_2.png" alt="ウィジェットを用いてラッピングしたマップ" width="1200" height="1278" loading="lazy"></p><p>README記載のサンプルで表示される地図の場所はGoogle本社オフィスのようです、近くにゴルフ場やコンピュータ歴史博物館があるんですね、楽しそうです。</p><h1 id="地図のプロパティを変更する"><a href="#地図のプロパティを変更する" class="headerlink" title="地図のプロパティを変更する"></a>地図のプロパティを変更する</h1><p>GoogleMapウィジェットのプロパティを設定する事で地図の描画スタイルや機能の有無など様々な変更ができます。<br><a href="https://pub.dev/documentation/google_maps_flutter/latest/google_maps_flutter/GoogleMap-class.html">ドキュメント</a>を参考に変更してみましょう。</p><p>例えば<code>mapType</code>プロパティをnormalに変更することで、地図の描画が航空写真から地図らしい描画に切り替わります。</p><figure class="highlight dart"><figcaption><span>dart main.dart</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GoogleMap(</span><br><span class="line">  mapType: MapType.normal,</span><br><span class="line">  <span class="comment">// 以下省略</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><img src="/images/20211224a/image_3.png" alt="地図画像" width="1200" height="909" loading="lazy"><h1 id="地図にマーカーを表示する"><a href="#地図にマーカーを表示する" class="headerlink" title="地図にマーカーを表示する"></a>地図にマーカーを表示する</h1><p>独自のアプリケーションを作り込むからには、任意の地点を地図に表示したい要望が出てくるでしょう。GoogleMapウィジェットの<a href="https://pub.dev/documentation/google_maps_flutter/latest/google_maps_flutter/GoogleMap/markers.html">markersプロパティ</a>に<code>Set&lt;Marker&gt;</code>の適切なデータを追加することでマーカーが表示されます。</p><p><a href="https://pub.dev/documentation/google_maps_flutter_platform_interface/latest/google_maps_flutter_platform_interface/Marker-class.html">Markerクラス</a>は位置情報、アイコンなどのプロパティの他、オンクリックイベントのコールバック関数などを設定することができます。マーカーの位置情報である<a href="https://pub.dev/documentation/google_maps_flutter_platform_interface/latest/google_maps_flutter_platform_interface/LatLng-class.html">LatLngクラス</a>は緯度経度の情報です。</p><p>infoWindowでマーカーの名称や情報を追加できます。</p><figure class="highlight dart"><figcaption><span>main.dart</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set</span>&lt;Marker&gt; _markers = &#123;</span><br><span class="line">  Marker(</span><br><span class="line">    markerId: MarkerId(<span class="string">&quot;marker1&quot;</span>),</span><br><span class="line">    position: LatLng(<span class="number">37.4224411</span>,<span class="number">-122.0884808</span>),</span><br><span class="line">    infoWindow: InfoWindow(title: <span class="string">&quot;フューチャー株式会社&quot;</span>),</span><br><span class="line">  )</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">GoogleMap(</span><br><span class="line">  markers: _markers,</span><br><span class="line">  <span class="comment">// 以下省略</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><img src="/images/20211224a/image_4.png" alt="地図上にマーカー" width="1200" height="616" loading="lazy"><h1 id="地図に線を引く"><a href="#地図に線を引く" class="headerlink" title="地図に線を引く"></a>地図に線を引く</h1><p>GoogleMapウィジェットは<a href="https://pub.dev/documentation/google_maps_flutter/latest/google_maps_flutter/GoogleMap/polylines.html">polylinesプロパティ</a>で２点間のルート情報を表示することもできます。</p><figure class="highlight dart"><figcaption><span>main.dart</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set</span>&lt;Marker&gt; _markers = &#123;</span><br><span class="line">  Marker(</span><br><span class="line">    markerId: MarkerId(<span class="string">&quot;marker1&quot;</span>),</span><br><span class="line">    position: LatLng(<span class="number">37.42246006639176</span>, <span class="number">-122.08409675340478</span>),</span><br><span class="line">    infoWindow: InfoWindow(title: <span class="string">&quot;Google本社&quot;</span>),</span><br><span class="line">  ),</span><br><span class="line">  Marker(</span><br><span class="line">    markerId: MarkerId(<span class="string">&quot;marker2&quot;</span>),</span><br><span class="line">    position: LatLng(<span class="number">37.42747752203552</span>, <span class="number">-122.08057852883495</span>),</span><br><span class="line">    infoWindow: InfoWindow(title: <span class="string">&quot;ショアライン・アンフィシアター&quot;</span>),</span><br><span class="line">  ),</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">Set</span>&lt;Polyline&gt; _lines = &#123;</span><br><span class="line">  Polyline(</span><br><span class="line">    polylineId: PolylineId(<span class="string">&quot;line1&quot;</span>),</span><br><span class="line">    points: [</span><br><span class="line">      LatLng(<span class="number">37.42246006639176</span>, <span class="number">-122.08409675340478</span>),</span><br><span class="line">      LatLng(<span class="number">37.42747752203552</span>, <span class="number">-122.08057852883495</span>),</span><br><span class="line">    ],</span><br><span class="line">    color: Colors.blue,</span><br><span class="line">  ),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">GoogleMap(</span><br><span class="line">  markers: _markers,</span><br><span class="line">  polylines: _lines,</span><br><span class="line">  <span class="comment">// 以下省略</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><code>Set&lt;Polyline&gt;</code>のデータを用意することで青い線を引くことができました。</p><img src="/images/20211224a/image_5.png" alt="2点間で線を引く" width="1200" height="770" loading="lazy"><p>しかしこれではスタートとゴールの間に山があろうと谷があろうと乗り越え直進するという無茶なルートしか表示できません。</p><h2 id="Directions-APIを活用する"><a href="#Directions-APIを活用する" class="headerlink" title="Directions APIを活用する"></a>Directions APIを活用する</h2><p>これまで紹介したGoogle MapのAPIは地図の描画に専念して用意されたAPIです。経路探索や距離の計算は別のAPIとして公開されています。</p><p><a href="https://developers.google.com/maps/documentation/directions/overview?hl=ja">Directions API</a>を利用することで、任意の２点間の現実的で最適な経路を取得することができます。  <code>Directions API</code>も<code>Javascript API</code>のようにGCPの管理画面で機能を有効化する必要があります。</p><p><code>Directions API</code>を実行するDartパッケージとして<a href="https://pub.dev/packages/flutter_polyline_points">flutter_polyline_points</a>が存在しますが、執筆時点ではレスポンスのパース処理に不具合があったため、愚直に<code>Directions API</code>を実行し、レスポンスのパースは<a href="https://pub.dev/packages/google_polyline_algorithm">google_polyline_algorithm</a>で行いました。</p><figure class="highlight dart"><figcaption><span>main.dart</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:google_polyline_algorithm/google_polyline_algorithm.dart&#x27;</span>;</span><br><span class="line">Future&lt;<span class="built_in">List</span>&lt;LatLng&gt;&gt; getPolylineResult(</span><br><span class="line">  LatLng origin,</span><br><span class="line">  LatLng destination,</span><br><span class="line">  <span class="built_in">List</span>&lt;LatLng&gt; wayPoints) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> params = &#123;</span><br><span class="line">    <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;<span class="subst">$&#123;origin.latitude&#125;</span>,<span class="subst">$&#123;origin.longitude&#125;</span>&quot;</span>,</span><br><span class="line">    <span class="string">&quot;destination&quot;</span>: <span class="string">&quot;<span class="subst">$&#123;destination.latitude&#125;</span>,<span class="subst">$&#123;destination.longitude&#125;</span>&quot;</span>,</span><br><span class="line">    <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;driving&quot;</span>,</span><br><span class="line">    <span class="string">&quot;avoidHighways&quot;</span>: <span class="string">&quot;false&quot;</span>,</span><br><span class="line">    <span class="string">&quot;avoidFerries&quot;</span>: <span class="string">&quot;true&quot;</span>,</span><br><span class="line">    <span class="string">&quot;avoidTolls&quot;</span>: <span class="string">&quot;false&quot;</span>,</span><br><span class="line">    <span class="string">&quot;key&quot;</span>: <span class="string">&quot;MyApiKey&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">if</span> (wayPoints.isNotEmpty) &#123;</span><br><span class="line">    <span class="built_in">List</span> wayPointsArray = [];</span><br><span class="line">    wayPoints.forEach((point) &#123;</span><br><span class="line">      <span class="built_in">String</span> encoded = encodePolyline([[point.latitude.toDouble(), point.longitude.toDouble()]]);</span><br><span class="line">      wayPointsArray.add(<span class="string">&quot;enc:<span class="subst">$&#123;encoded&#125;</span>:&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">String</span> wayPointsString = wayPointsArray.join(<span class="string">&#x27;|&#x27;</span>);</span><br><span class="line">    params.addAll(&#123;<span class="string">&quot;waypoints&quot;</span>: wayPointsString&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">Uri</span> uri = <span class="built_in">Uri</span>.https(<span class="string">&quot;maps.googleapis.com&quot;</span>, <span class="string">&quot;maps/api/directions/json&quot;</span>, params);</span><br><span class="line">  <span class="keyword">var</span> response = <span class="keyword">await</span> http.<span class="keyword">get</span>(uri);</span><br><span class="line">  <span class="built_in">List</span>&lt;LatLng&gt; polylineCoordinates = [];</span><br><span class="line">  <span class="keyword">if</span> (response.statusCode != <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> [];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> parsedJson = json.decode(response.body);</span><br><span class="line">  <span class="keyword">if</span> (parsedJson[<span class="string">&quot;status&quot;</span>]?.toLowerCase() != <span class="string">&quot;ok&quot;</span> || parsedJson[<span class="string">&quot;routes&quot;</span>] == <span class="keyword">null</span> || parsedJson[<span class="string">&quot;routes&quot;</span>].isEmpty) &#123;</span><br><span class="line">    <span class="keyword">return</span> [];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">List</span>&lt;<span class="built_in">List</span>&lt;<span class="built_in">num</span>&gt;&gt; points = decodePolyline(parsedJson[<span class="string">&quot;routes&quot;</span>][<span class="number">0</span>][<span class="string">&quot;overview_polyline&quot;</span>][<span class="string">&quot;points&quot;</span>]);</span><br><span class="line">  points.forEach((point) &#123;</span><br><span class="line">    polylineCoordinates.add(LatLng(point[<span class="number">0</span>].toDouble(), point[<span class="number">1</span>].toDouble()));</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> polylineCoordinates;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>パッケージを導入すると使えるようになる<code>decodePolyline()</code>はレスポンスにあるエンコードされた経路情報をデコードして緯度経度の配列にする関数です。</p><p>曲がり角の情報だけでなく、線を道に沿って表示するにはどこを繋ぐとよいのか、という詳細な緯度経度情報の配列が取得できます。<a href="https://developers.google.com/maps/documentation/utilities/polylinealgorithm">エンコードされた緯度軽度の圧縮アルゴリズム</a>はドキュメントとして公開されているため、仕様に則ってデコードするだけですが、中々難しいことをしています。</p><p><code>Drection API</code>の実行結果を地図に反映させると画像のようになります。完璧なルートが出力されました、当たり前のように使ってるGoogleマップって改めて考えると凄いなと感じますね。</p><img src="/images/20211224a/image_6.png" alt="image.png" width="1200" height="1337" loading="lazy"><p>なおFlutter on the Webとして動かす場合、<code>maps.googleapis.com</code>へのGETリクエストはCORS設定の都合で失敗してしまいます。ウェブサイトとして完成させるには同一ドメインで<code>maps.googleapis.com</code>へのリクエストを代行してくれるプロキシ的なバックエンドを作る必要があります。単にローカルでは一旦ブラウザで動かしたい、という場合は<code>chromium</code>をインストールして、オプション付きで起動すると動作します。</p><p>下記のようなシェルスクリプトを用意します。</p><figure class="highlight sh"><figcaption><span>google-chrome-unsafe.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/chromium --disable-web-security --user-data-dir=<span class="string">&quot;A-TEMP-LOCATION&quot;</span> $*</span><br></pre></td></tr></table></figure><p>環境変数<code>CHROME_EXECUTABLE</code>でFlutterが起動するブラウザの起動設定をカスタマイズできます。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CHROME_EXECUTABLE=`<span class="built_in">pwd</span>`/google-chrome-unsafe.sh flutter run</span><br></pre></td></tr></table></figure><p>Flutter on the Webは、対象プラットフォームがモバイルアプリだけだった頃に作られたライブラリがCORS対策の問題などで上手く動かない、という可能性があるかもしれません。</p><h1 id="アプリケーションとして整備する"><a href="#アプリケーションとして整備する" class="headerlink" title="アプリケーションとして整備する"></a>アプリケーションとして整備する</h1><p>最低限やれることはわかってきました。ウィジェットとしてリファクタリングする、データの取得と画面描画をリファクタリングする、オンクリックイベントの実装などアプリケーションとして作り込んでいきます。サンプルアプリケーションを見るとGoogleMapウィジェットはExpandウィジェットなどと組み合わせて利用されています。今回はColumnウィジェットの一要素としてGoogleMapウィジェットを読み込んでみるスタイルにしてみます。Columnウィジェットに積み込む他のウィジェットは適当にflutterロゴを出してみます。</p><img src="/images/20211224a/image_7.png" alt="image.png" width="1200" height="730" loading="lazy"><p>オンクリックイベントの実験と、infoWindowより自由度の高いUIを実現したい、という観点で、マーカーをタップするとサイドバーが表示されるような作り込みもしてみました。</p><img src="/images/20211224a/image_8.png" alt="image.png" width="1200" height="728" loading="lazy"><p>サンプルを試していた時にはマーカーやルートの位置情報をソースコードに愚直に書きましたが、実際にアプリケーションとして作り込むにあたっては、ウィジェットのレイアウトとビジネスロジックはなるべく切り分けたいですね。</p><p>表示したい情報の取得は一般的にサーバーサイドへアクセスする処理を非同期な関数で実装する事になることを想定しています。律儀にデータの取得完了を待ってから<a href="https://api.flutter.dev/flutter/widgets/FutureBuilder-class.html">FutureBuilderウィジェット</a>を利用して描画する手法も試してみましたが、地図に描画するデータの更新ではマーカーやルートを取得して差し替えた際に地図そのものの再描画は発生せず綺麗に動くため、素直に<code>setState</code>を利用した方が快適に動きました。</p><p>上記の作り込みをまとめると下記のようになります。</p><p>今回は大掛かりなファイル分割は行わず、<code>main.dart</code>と<code>service.dart</code>の2ファイルに分けて、GoogleMap用のトークンを書き換えたら動くような形にしました。</p><figure class="highlight dart"><figcaption><span>main.dart</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:async&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:google_maps_flutter/google_maps_flutter.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./service.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">&#x27;Flutter Google Maps Demo&#x27;</span>,</span><br><span class="line">      home: MapSample(),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MapSample</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  State&lt;MapSample&gt; createState() =&gt; MapSampleState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MapSampleState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MapSample</span>&gt; </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> _scaffoldKey = GlobalKey&lt;ScaffoldState&gt;();</span><br><span class="line">  Completer&lt;GoogleMapController&gt; _controller = Completer();</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> CameraPosition _kGooglePlex = CameraPosition(</span><br><span class="line">    target: LatLng(<span class="number">37.42796133580684</span>, <span class="number">-122.085749655962</span>),</span><br><span class="line">    zoom: <span class="number">14.4746</span>,</span><br><span class="line">  );</span><br><span class="line">  <span class="built_in">Set</span>&lt;Polyline&gt; _lines = &#123;&#125;;</span><br><span class="line">  <span class="built_in">Set</span>&lt;Marker&gt; _markers = &#123;&#125;;</span><br><span class="line">  <span class="built_in">String</span> _drawer_name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="built_in">String</span> _drawer_info = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="built_in">String</span> _drawer_lat = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="built_in">String</span> _drawer_lng = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    createPolylines();</span><br><span class="line">    createMarkers();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Column(</span><br><span class="line">      children: [</span><br><span class="line">        FlutterLogo(),</span><br><span class="line">        MapContainer(),</span><br><span class="line">        FlutterLogo(),</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  MapContainer() &#123;</span><br><span class="line">    <span class="keyword">return</span> Expanded(</span><br><span class="line">      child: Container(</span><br><span class="line">        width: <span class="number">1000</span>,</span><br><span class="line">        height: <span class="number">900</span>,</span><br><span class="line">        child: Scaffold(</span><br><span class="line">          key: _scaffoldKey,</span><br><span class="line">          resizeToAvoidBottomInset: <span class="keyword">false</span>,</span><br><span class="line">          drawer: MapDrawer(),</span><br><span class="line">          body: GoogleMap(</span><br><span class="line">            mapType: MapType.normal,</span><br><span class="line">            initialCameraPosition: _kGooglePlex,</span><br><span class="line">            markers: _markers,</span><br><span class="line">            polylines: _lines,</span><br><span class="line">            onMapCreated: (GoogleMapController controller) &#123;</span><br><span class="line">              _controller.complete(controller);</span><br><span class="line">            &#125;,</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      )</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  MapDrawer() &#123;</span><br><span class="line">    <span class="keyword">return</span> Drawer(</span><br><span class="line">      child: ListView(</span><br><span class="line">        padding: EdgeInsets.zero,</span><br><span class="line">        children: [</span><br><span class="line">          ListTile(</span><br><span class="line">            title: Text(<span class="string">&quot;name: <span class="subst">$&#123;_drawer_name&#125;</span>&quot;</span>),</span><br><span class="line">          ),</span><br><span class="line">          ListTile(</span><br><span class="line">            title: Text(<span class="string">&quot;info: <span class="subst">$&#123;_drawer_info&#125;</span>&quot;</span>),</span><br><span class="line">          ),</span><br><span class="line">          ListTile(</span><br><span class="line">            title: Text(<span class="string">&quot;latitude: <span class="subst">$&#123;_drawer_lat&#125;</span>&quot;</span>),</span><br><span class="line">          ),</span><br><span class="line">          ListTile(</span><br><span class="line">            title: Text(<span class="string">&quot;longitude: <span class="subst">$&#123;_drawer_lng&#125;</span>&quot;</span>),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  marker_tapped(Place place)&#123;</span><br><span class="line">    setState(() &#123;</span><br><span class="line">      _drawer_name = place.name;</span><br><span class="line">      _drawer_info = place.info;</span><br><span class="line">      _drawer_lat= place.latlng.latitude.toString();</span><br><span class="line">      _drawer_lng= place.latlng.longitude.toString();</span><br><span class="line">    &#125;);</span><br><span class="line">    _scaffoldKey.currentState?.openDrawer();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> createMarkers() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="built_in">Set</span>&lt;Marker&gt; markers = <span class="keyword">await</span> getMarkers(marker_tapped);</span><br><span class="line">    setState(() &#123;</span><br><span class="line">      _markers = markers;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> createPolylines() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="built_in">Set</span>&lt;Polyline&gt; lines = <span class="keyword">await</span> getLines();</span><br><span class="line">    setState(() &#123;</span><br><span class="line">      _lines = lines;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight dart"><figcaption><span>service.dart</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:convert&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:http/http.dart&#x27;</span> <span class="keyword">as</span> http;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:google_maps_flutter/google_maps_flutter.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:google_polyline_algorithm/google_polyline_algorithm.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">String</span> apiKey = <span class="string">&quot;MyApiKey&quot;</span>;</span><br><span class="line"></span><br><span class="line">Future&lt;<span class="built_in">Set</span>&lt;Marker&gt;&gt; getMarkers(<span class="keyword">void</span> <span class="built_in">Function</span>(Place) callback) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="built_in">Set</span>&lt;Place&gt; places = <span class="keyword">await</span> getPlaces();</span><br><span class="line">  <span class="built_in">Set</span>&lt;Marker&gt; markers = &#123;&#125;;</span><br><span class="line">  places.toList().asMap().forEach((k, v) &#123;</span><br><span class="line">    markers.add(Marker(</span><br><span class="line">      markerId: MarkerId(k.toString()),</span><br><span class="line">      position: v.latlng,</span><br><span class="line">      onTap: () =&gt; callback(v),</span><br><span class="line">    ));</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> markers;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DBから取得する想定</span></span><br><span class="line">Future&lt;<span class="built_in">Set</span>&lt;Place&gt;&gt; getPlaces() <span class="keyword">async</span> &#123;</span><br><span class="line">  LatLng latLng1 = LatLng(<span class="number">37.42747752203552</span>, <span class="number">-122.08057852883495</span>);</span><br><span class="line">  LatLng latLng2 = LatLng(<span class="number">37.42246006639176</span>, <span class="number">-122.08409675340478</span>);</span><br><span class="line">  LatLng latLng3 = LatLng(<span class="number">37.41746006639176</span>, <span class="number">-122.08409675340478</span>);</span><br><span class="line">  LatLng latLng4 = LatLng(<span class="number">37.42546006639176</span>, <span class="number">-122.09809675340478</span>);</span><br><span class="line">  <span class="built_in">Set</span>&lt;Place&gt; places = &#123;&#125;;</span><br><span class="line">  [latLng1, latLng2, latLng3, latLng4].asMap().forEach((<span class="built_in">int</span> i, LatLng v) &#123;</span><br><span class="line">    places.add(</span><br><span class="line">      Place(</span><br><span class="line">        name: <span class="string">&quot;place<span class="subst">$&#123;i&#125;</span>&quot;</span>,</span><br><span class="line">        info: <span class="string">&quot;it is place <span class="subst">$&#123;i&#125;</span>&quot;</span>,</span><br><span class="line">        latlng: v,</span><br><span class="line">      )</span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> places;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Future&lt;<span class="built_in">Set</span>&lt;Polyline&gt;&gt; getLines() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="built_in">Set</span>&lt;MapRoute&gt; routes = <span class="keyword">await</span> getRoutes();</span><br><span class="line">  <span class="built_in">Set</span>&lt;Polyline&gt; lines = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; routes.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> route = routes.elementAt(i);</span><br><span class="line">    <span class="built_in">List</span>&lt;LatLng&gt; polylineCoordinates = [];</span><br><span class="line">    polylineCoordinates.add(route.origin);</span><br><span class="line">    <span class="built_in">List</span>&lt;LatLng&gt; result = <span class="keyword">await</span> getPolylineResult(</span><br><span class="line">      route.origin,</span><br><span class="line">      route.destination,</span><br><span class="line">      route.wayPoints</span><br><span class="line">    );</span><br><span class="line">    polylineCoordinates.addAll(result);</span><br><span class="line">    polylineCoordinates.add(route.destination);</span><br><span class="line">    lines.add(</span><br><span class="line">      Polyline(</span><br><span class="line">        polylineId: PolylineId(i.toString()),</span><br><span class="line">        jointType: JointType.round,</span><br><span class="line">        points: polylineCoordinates,</span><br><span class="line">        color: Colors.blue,</span><br><span class="line">      )</span><br><span class="line">    );</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> lines;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DBから取得する想定</span></span><br><span class="line">Future&lt;<span class="built_in">Set</span>&lt;MapRoute&gt;&gt; getRoutes() <span class="keyword">async</span> &#123;</span><br><span class="line">  LatLng latLng1 = LatLng(<span class="number">37.42747752203552</span>, <span class="number">-122.08057852883495</span>);</span><br><span class="line">  LatLng latLng2 = LatLng(<span class="number">37.42246006639176</span>, <span class="number">-122.08409675340478</span>);</span><br><span class="line">  LatLng latLng3 = LatLng(<span class="number">37.41746006639176</span>, <span class="number">-122.08409675340478</span>);</span><br><span class="line">  LatLng latLng4 = LatLng(<span class="number">37.42546006639176</span>, <span class="number">-122.09809675340478</span>);</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    MapRoute(</span><br><span class="line">      origin: latLng1,</span><br><span class="line">      destination: latLng2,</span><br><span class="line">    ),</span><br><span class="line">    MapRoute(</span><br><span class="line">      origin: latLng1,</span><br><span class="line">      destination: latLng2,</span><br><span class="line">      wayPoints: [</span><br><span class="line">        latLng3,</span><br><span class="line">        latLng4,</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Future&lt;<span class="built_in">List</span>&lt;LatLng&gt;&gt; getPolylineResult(</span><br><span class="line">  LatLng origin,</span><br><span class="line">  LatLng destination,</span><br><span class="line">  <span class="built_in">List</span>&lt;LatLng&gt; wayPoints) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> params = &#123;</span><br><span class="line">    <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;<span class="subst">$&#123;origin.latitude&#125;</span>,<span class="subst">$&#123;origin.longitude&#125;</span>&quot;</span>,</span><br><span class="line">    <span class="string">&quot;destination&quot;</span>: <span class="string">&quot;<span class="subst">$&#123;destination.latitude&#125;</span>,<span class="subst">$&#123;destination.longitude&#125;</span>&quot;</span>,</span><br><span class="line">    <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;driving&quot;</span>,</span><br><span class="line">    <span class="string">&quot;avoidHighways&quot;</span>: <span class="string">&quot;false&quot;</span>,</span><br><span class="line">    <span class="string">&quot;avoidFerries&quot;</span>: <span class="string">&quot;true&quot;</span>,</span><br><span class="line">    <span class="string">&quot;avoidTolls&quot;</span>: <span class="string">&quot;false&quot;</span>,</span><br><span class="line">    <span class="string">&quot;key&quot;</span>: apiKey</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">if</span> (wayPoints.isNotEmpty) &#123;</span><br><span class="line">    <span class="built_in">List</span> wayPointsArray = [];</span><br><span class="line">    wayPoints.forEach((point) &#123;</span><br><span class="line">      <span class="built_in">String</span> encoded = encodePolyline([[point.latitude.toDouble(), point.longitude.toDouble()]]);</span><br><span class="line">      wayPointsArray.add(<span class="string">&quot;enc:<span class="subst">$&#123;encoded&#125;</span>:&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">String</span> wayPointsString = wayPointsArray.join(<span class="string">&#x27;|&#x27;</span>);</span><br><span class="line">    params.addAll(&#123;<span class="string">&quot;waypoints&quot;</span>: wayPointsString&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">Uri</span> uri = <span class="built_in">Uri</span>.https(<span class="string">&quot;maps.googleapis.com&quot;</span>, <span class="string">&quot;maps/api/directions/json&quot;</span>, params);</span><br><span class="line">  <span class="keyword">var</span> response = <span class="keyword">await</span> http.<span class="keyword">get</span>(uri);</span><br><span class="line">  <span class="built_in">List</span>&lt;LatLng&gt; polylineCoordinates = [];</span><br><span class="line">  <span class="keyword">if</span> (response.statusCode != <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> [];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> parsedJson = json.decode(response.body);</span><br><span class="line">  <span class="keyword">if</span> (parsedJson[<span class="string">&quot;status&quot;</span>]?.toLowerCase() != <span class="string">&quot;ok&quot;</span> || parsedJson[<span class="string">&quot;routes&quot;</span>] == <span class="keyword">null</span> || parsedJson[<span class="string">&quot;routes&quot;</span>].isEmpty) &#123;</span><br><span class="line">    <span class="keyword">return</span> [];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">List</span>&lt;<span class="built_in">List</span>&lt;<span class="built_in">num</span>&gt;&gt; points = decodePolyline(parsedJson[<span class="string">&quot;routes&quot;</span>][<span class="number">0</span>][<span class="string">&quot;overview_polyline&quot;</span>][<span class="string">&quot;points&quot;</span>]);</span><br><span class="line">  points.forEach((point) &#123;</span><br><span class="line">    polylineCoordinates.add(LatLng(point[<span class="number">0</span>].toDouble(), point[<span class="number">1</span>].toDouble()));</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> polylineCoordinates;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Place</span> </span>&#123;</span><br><span class="line">  LatLng latlng;</span><br><span class="line">  <span class="built_in">String</span> name;</span><br><span class="line">  <span class="built_in">String</span> info;</span><br><span class="line">  Place(&#123;<span class="keyword">this</span>.name = <span class="string">&quot;&quot;</span>, <span class="keyword">this</span>.info = <span class="string">&quot;&quot;</span>, <span class="keyword">this</span>.latlng = <span class="keyword">const</span> LatLng(<span class="number">0</span>, <span class="number">0</span>)&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MapRoute</span> </span>&#123;</span><br><span class="line">  LatLng origin;</span><br><span class="line">  LatLng destination;</span><br><span class="line">  <span class="built_in">List</span>&lt;LatLng&gt; wayPoints;</span><br><span class="line">  MapRoute(&#123;<span class="keyword">this</span>.origin = <span class="keyword">const</span> LatLng(<span class="number">0</span>, <span class="number">0</span>), <span class="keyword">this</span>.destination = <span class="keyword">const</span> LatLng(<span class="number">0</span>,<span class="number">0</span>), <span class="keyword">this</span>.wayPoints = <span class="keyword">const</span> []&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h1><ul><li>Flutterにはチーム公式のGoogleMapライブラリが存在する</li><li>ルートの計算を行うにはDirections APIを活用する</li><li>Flutter on the WebはCORS対策の必要性がある</li><li>ウィジェットの組み合わせなどは公式サンプルが参考になる</li></ul><p>特にウィジェットの組み合わせに頭を悩ませる時間が最初のうちはあると思います、OSSパッケージやサンプルコードなど様々な事例を参考にすると良いと思います。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Infrastructure/">Infrastructure</category>
      
      
      <category domain="https://future-architect.github.io/tags/Flutter/">Flutter</category>
      
      <category domain="https://future-architect.github.io/tags/Dart/">Dart</category>
      
      <category domain="https://future-architect.github.io/tags/GoogleMapsAPI/">GoogleMapsAPI</category>
      
      
      <comments>https://future-architect.github.io/articles/20211224a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>TFLintを使ってみる（GCP×Terraform）</title>
      <link>https://future-architect.github.io/articles/20211223a/</link>
      <guid>https://future-architect.github.io/articles/20211223a/</guid>
      <pubDate>Wed, 22 Dec 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;img src=&quot;/images/20211223a/top.png&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;431&quot;&gt;

&lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/20211223a/top.png" alt="" width="800" height="431"><h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p><code>terraform validate</code>や<code>terraform plan</code>では検知できないエラーを見つけるために、TFLintを利用してみました。TFLintを用いれば、例えばインスタンスタイプの誤りや命名規約違反を検知できます。</p><p>本記事では、インストールから利用方法までを記載しています。</p><h1 id="TFLintとは？"><a href="#TFLintとは？" class="headerlink" title="TFLintとは？"></a>TFLintとは？</h1><p>いわゆるTerraformのためのLinter。JavaScriptでいうと、ESLintのようなものです。構文やパラメータがルールに違反していないかをチェックしてくれるツールです。</p><h1 id="環境やバージョン"><a href="#環境やバージョン" class="headerlink" title="環境やバージョン"></a>環境やバージョン</h1><p>今回利用した環境です。</p><ul><li>Windows10</li><li><a href="https://github.com/terraform-linters/tflint">tflint v0.34.0</a></li><li><a href="https://github.com/terraform-linters/tflint-ruleset-google">tflint-ruleset-google v0.15.0</a></li><li><a href="https://www.terraform.io/">terraform v1.1.0</a><ul><li>※Terraformがなくてもtflintは動作するので、Terraformは必須ではない</li></ul></li><li>Google Cloud</li></ul><h1 id="tflintをインストール"><a href="#tflintをインストール" class="headerlink" title="tflintをインストール"></a>tflintをインストール</h1><ol><li><a href="https://github.com/terraform-linters/tflint/releases">tflint/releases</a>から<code>tflint_windows_amd64.zip</code>をダウンロード</li><li><code>tflint_windows_amd64.zip</code>を解凍</li><li><code>tflint.exe</code>をパスが通ってるところに配置</li><li>以下を実行し、バージョン情報が出たら成功</li></ol><figure class="highlight bash"><figcaption><span>PowerShell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ tflint --version</span><br><span class="line"></span><br><span class="line">TFLint version 0.34.0</span><br></pre></td></tr></table></figure><p>※他OSでのインストール手順は以下を参照ください。</p><ul><li><a href="https://github.com/terraform-linters/tflint#installation">tflint installation</a></li></ul><h1 id="tflint-hclの作成"><a href="#tflint-hclの作成" class="headerlink" title=".tflint.hclの作成"></a>.tflint.hclの作成</h1><p><code>.tflint.hcl</code> とは、Pluginをインストールするための設定ファイルです。</p><p>今回は、GCPの RuleSet Pluginをインストールする例を記載します。</p><ul><li><code>.tflint.hcl</code>はホームディレクトリか、カレントディレクトリに配置する必要がある<ul><li>今回は、ホームディレクトリに配置とする</li></ul></li></ul><figure class="highlight js"><figcaption><span>.tflint.hcl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plugin <span class="string">&quot;google&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">  version = <span class="string">&quot;0.15.0&quot;</span></span><br><span class="line">  source  = <span class="string">&quot;github.com/terraform-linters/tflint-ruleset-google&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>※参考</p><ul><li><a href="https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/config.md">Configuring TFLint</a></li><li><a href="https://github.com/terraform-linters/tflint-ruleset-google#installation">tflint-ruleset-google installation</a></li></ul><h1 id="tflint-–initの実施"><a href="#tflint-–initの実施" class="headerlink" title="tflint –initの実施"></a>tflint –initの実施</h1><p><code>.tflint.hcl</code> を記載したあとに、Pluginをインストールするために、以下のコマンドを実行します。初回のみ実施で問題ないです。</p><figure class="highlight bash"><figcaption><span>PowerShell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tflint --init</span><br></pre></td></tr></table></figure><h1 id="tflintの動作確認をしてみる"><a href="#tflintの動作確認をしてみる" class="headerlink" title="tflintの動作確認をしてみる"></a>tflintの動作確認をしてみる</h1><ol><li><code>google_compute_instance</code>の<code>machine_type</code>に存在しないインスタンスタイプを記載してみます。</li></ol><figure class="highlight js"><figcaption><span>example.tf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">resource <span class="string">&quot;google_compute_instance&quot;</span> <span class="string">&quot;gce_test&quot;</span> &#123;</span><br><span class="line">  project      = <span class="string">&quot;testest&quot;</span></span><br><span class="line">  name         = <span class="string">&quot;testtest-gce001&quot;</span></span><br><span class="line">  zone         = <span class="string">&quot;asia-northeast1-a&quot;</span></span><br><span class="line">  # ここで存在しないインスタンスタイプを指定</span><br><span class="line">  machine_type = <span class="string">&quot;n2-standard-200&quot;</span></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>tflintを実行してみる。そうするとエラーがでます</li></ol><figure class="highlight bash"><figcaption><span>PowerShell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ tflint</span><br><span class="line"></span><br><span class="line">1 issue(s) found:</span><br><span class="line"></span><br><span class="line">Error: <span class="string">&quot;n2-standard-200&quot;</span> is an invalid as machine <span class="built_in">type</span> (google_compute_instance_invalid_machine_type)</span><br><span class="line"></span><br><span class="line">  on main.tf line 6:</span><br><span class="line">   6:   machine_type = <span class="string">&quot;n2-standard-200&quot;</span></span><br></pre></td></tr></table></figure><h1 id="応用：moduleも対象とする"><a href="#応用：moduleも対象とする" class="headerlink" title="応用：moduleも対象とする"></a>応用：moduleも対象とする</h1><p>Terraformにはmoduleと呼ばれるカスタムリソースを作る機能があります。詳しくは<a href="/articles/20211029a/">Terraformerとしてコードを書いて思うこと</a>を参照ください。</p><p>これをTFLintでチェックするためには、<a href="https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/module-inspection.md">Module Inspection</a>に記載がある通り、<code>.tflint.hcl</code>に<code>module = true</code>を追記するだけです。</p><figure class="highlight sh"><figcaption><span>.tflint.hcl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># add</span></span><br><span class="line">config &#123;</span><br><span class="line">  module = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">plugin <span class="string">&quot;google&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">  version = <span class="string">&quot;0.15.0&quot;</span></span><br><span class="line">  <span class="built_in">source</span>  = <span class="string">&quot;github.com/terraform-linters/tflint-ruleset-google&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="応用：ルールを有効化する"><a href="#応用：ルールを有効化する" class="headerlink" title="応用：ルールを有効化する"></a>応用：ルールを有効化する</h1><p>TFLintに多くのチェックルールが予め用意されています。どんなルールがあって、どれがデフォルトで有効になっているかは以下に記載があるので確認すると良いでしょう。</p><ul><li><a href="https://github.com/terraform-linters/tflint/blob/master/docs/rules/README.md">TFLint Rules</a></li><li><a href="https://github.com/terraform-linters/tflint-ruleset-google/blob/master/docs/rules/README.md">TFLint Rules Google</a></li></ul><p>今回は例として、「terraform_unused_declarations」を有効化してみます。内容としては、「使っていないlocalsを検知できる」というルールです。</p><p>チェックするために、 先程の <code>.tflint.hcl</code> に <code>terraform_unused_declarations</code>を追記します。</p><figure class="highlight sh"><figcaption><span>.tflint.hcl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">config &#123;</span><br><span class="line">  module = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">plugin <span class="string">&quot;google&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">  version = <span class="string">&quot;0.15.0&quot;</span></span><br><span class="line">  <span class="built_in">source</span>  = <span class="string">&quot;github.com/terraform-linters/tflint-ruleset-google&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># add</span></span><br><span class="line">rule terraform_unused_declarations &#123;</span><br><span class="line">   enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使っていないlocalsを宣言したtfファイルを追加します。</p><figure class="highlight js"><figcaption><span>example-valiable.tf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">locals &#123;</span><br><span class="line">  unused = <span class="string">&quot;test&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>これに対して、TFLint実行します。ルール違反を検知したことがわかります。どのファイルの何行目に違反があったか表示してくれていますね。</p><figure class="highlight bash"><figcaption><span>PowerShell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ tflint</span><br><span class="line"></span><br><span class="line">1 issue(s) found:</span><br><span class="line"></span><br><span class="line">Warning: local.unused is declared but not used (terraform_unused_declarations)</span><br><span class="line"></span><br><span class="line">  on example-valiable.tf line 2:</span><br><span class="line"> 168:   unused = <span class="string">&quot;test&quot;</span></span><br><span class="line"></span><br><span class="line">Reference: https://github.com/terraform-linters/tflint/blob/v0.34.0/docs/rules/terraform_unused_declarations.md</span><br></pre></td></tr></table></figure><h1 id="利用上の注意点"><a href="#利用上の注意点" class="headerlink" title="利用上の注意点"></a>利用上の注意点</h1><p>TFLintを使っていくなかで、注意しなければと思ったものをあげていきます。</p><h2 id="1-Local-Valuesは評価されない"><a href="#1-Local-Valuesは評価されない" class="headerlink" title="1. Local Valuesは評価されない"></a>1. Local Valuesは評価されない</h2><p><a href="https://github.com/terraform-linters/tflint/issues/571">TFLint skips expressions that reference static local values #571</a>にも記載があります。以下のように不正なインスタンスタイプをlocalsで定義してもエラーにならないです。</p><figure class="highlight js"><figcaption><span>example.tf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">locals &#123;</span><br><span class="line">  machine_type = <span class="string">&quot;n2-standard-200&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">&quot;google_compute_instance&quot;</span> <span class="string">&quot;gce_test&quot;</span> &#123;</span><br><span class="line">  project      = <span class="string">&quot;testest&quot;</span></span><br><span class="line">  name         = <span class="string">&quot;testtest-gce001&quot;</span></span><br><span class="line">  zone         = <span class="string">&quot;asia-northeast1-a&quot;</span></span><br><span class="line">  machine_type = local.machine_type</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>tflintの実行</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tflint</span><br><span class="line"><span class="comment"># ルール違反を検知できない</span></span><br></pre></td></tr></table></figure><h2 id="2-利用しているTerraformのバージョンとTFLintを揃える必要がある"><a href="#2-利用しているTerraformのバージョンとTFLintを揃える必要がある" class="headerlink" title="2. 利用しているTerraformのバージョンとTFLintを揃える必要がある"></a>2. 利用しているTerraformのバージョンとTFLintを揃える必要がある</h2><p><a href="https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/compatibility.md">Compatibility with Terraform</a>のドキュメントに記載がある通り、TFLintはTerraformを内蔵しています。そのため、利用しているTerraformのバージョンに合わせて、該当バージョンのTFLintを利用する必要がある</p><p>直近のバージョン対応表をあげます。</p><div class="scroll"><table><thead><tr><th align="center">Terraform</th><th align="center">TFLint</th></tr></thead><tbody><tr><td align="center">v1.1.0</td><td align="center">v0.34.0</td></tr><tr><td align="center">v1.0.0</td><td align="center">v0.30.0~v0.33.2</td></tr><tr><td align="center">v0.15.0</td><td align="center">v0.27.0~v0.29.1</td></tr><tr><td align="center">v0.14.9</td><td align="center">v0.26.0</td></tr><tr><td align="center">v0.14.7</td><td align="center">v0.25.0</td></tr></tbody></table></div><p>※参考</p><ul><li><a href="https://dev.classmethod.jp/articles/install-tflint-with-fixed-version/">Version固定でTFLintをインストールする</a></li></ul><h2 id="3-Deep-Checkingを利用する場合の注意事項"><a href="#3-Deep-Checkingを利用する場合の注意事項" class="headerlink" title="3. Deep Checkingを利用する場合の注意事項"></a>3. Deep Checkingを利用する場合の注意事項</h2><p><a href="https://github.com/terraform-linters/tflint-ruleset-google/blob/master/docs/deep_checking.md">Deep Checking</a>は、GCPのAPIを利用してより厳密なチェックを行うことができるオプションです。</p><p>以下のように<code>deep_check = true</code>を追加することで、Deep Checkingが有効になります。ただし、<code>serviceusage.googleapis.com</code>が有効になっている必要があります。つまり、PJ作成時(APIが有効になっていない状態)にtflintを実行するとエラーになってしまうのでご注意ください。</p><figure class="highlight sh"><figcaption><span>.tflint.hcl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plugin <span class="string">&quot;google&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">  version = <span class="string">&quot;0.15.0&quot;</span></span><br><span class="line">  <span class="built_in">source</span>  = <span class="string">&quot;github.com/terraform-linters/tflint-ruleset-google&quot;</span></span><br><span class="line">  <span class="comment"># add</span></span><br><span class="line">  deep_check = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>※Projectは、providerのprojectを参照している</p><figure class="highlight sh"><figcaption><span>example.tf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">provider <span class="string">&quot;google&quot;</span> &#123;</span><br><span class="line">  project = <span class="string">&quot;testtest&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="tflint-hcl-のサンプルを用意したので、TFLintを動かしてみよう"><a href="#tflint-hcl-のサンプルを用意したので、TFLintを動かしてみよう" class="headerlink" title=".tflint.hcl のサンプルを用意したので、TFLintを動かしてみよう"></a>.tflint.hcl のサンプルを用意したので、TFLintを動かしてみよう</h1><p>全ルールをenableにした<code>.tflint.hcl</code> をサンプルとして用意しました。全ルールとは以下に記載のあるルールです。</p><ul><li><a href="https://github.com/terraform-linters/tflint/blob/master/docs/rules/README.md">TFLint Rules</a></li><li><a href="https://github.com/terraform-linters/tflint-ruleset-google/blob/master/docs/rules/README.md">TFLint Rules Google</a><ul><li>※Deep Checkingの<code>google_disabled_api</code>は除いています</li></ul></li></ul><figure class="highlight js"><figcaption><span>.tflint.hcl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">config &#123;</span><br><span class="line">  <span class="built_in">module</span> = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">plugin <span class="string">&quot;google&quot;</span> &#123;</span><br><span class="line">  enabled    = <span class="literal">true</span></span><br><span class="line">  version    = <span class="string">&quot;0.15.0&quot;</span></span><br><span class="line">  source     = <span class="string">&quot;github.com/terraform-linters/tflint-ruleset-google&quot;</span></span><br><span class="line">  deep_check = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_comment_syntax&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_deprecated_index&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_deprecated_interpolation&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_documented_outputs&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_documented_variables&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_module_pinned_source&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_module_version&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_naming_convention&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_required_providers&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_required_version&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_standard_module_structure&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_typed_variables&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_unused_declarations&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_unused_required_providers&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;terraform_workspace_remote&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;google_composer_environment_invalid_machine_type&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;google_compute_instance_invalid_machine_type&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;google_compute_instance_template_invalid_machine_type&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;google_compute_reservation_invalid_machine_type&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;google_container_cluster_invalid_machine_type&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;google_container_node_pool_invalid_machine_type&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;google_dataflow_job_invalid_machine_type&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;google_project_iam_audit_config_invalid_member&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;google_project_iam_binding_invalid_member&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;google_project_iam_member_invalid_member&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule <span class="string">&quot;google_project_iam_policy_invalid_member&quot;</span> &#123;</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>実運用上は利用しないルールを、個別にdisableにし、検知結果に対して運用が回るように調整していくことが重要かなと思います。</p><h1 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h1><p>TFLintを使うことで、<code>terraform validate</code>や<code>terraform plan</code>で検知できないエラーを見つけることができました。</p><p>RuleSetに限りがあるので全エラーを検知できるとまでいきませんが、TFLintを導入することで<code>terraform apply</code>で失敗するケースが減っていくと考えています。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Infrastructure/">Infrastructure</category>
      
      
      <category domain="https://future-architect.github.io/tags/GCP/">GCP</category>
      
      <category domain="https://future-architect.github.io/tags/Terraform/">Terraform</category>
      
      <category domain="https://future-architect.github.io/tags/TFLint/">TFLint</category>
      
      
      <comments>https://future-architect.github.io/articles/20211223a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Flutterの使いかた、環境構築から実装、ビルドまで</title>
      <link>https://future-architect.github.io/articles/20211221a/</link>
      <guid>https://future-architect.github.io/articles/20211221a/</guid>
      <pubDate>Mon, 20 Dec 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;TIGの伊藤真彦です。&lt;/p&gt;
&lt;p&gt;フロントエンドアプリケーションの開発においてVue、Reactと触ってきましたがFlutterの開発も始めました。モバイルアプリ、WEBアプリ、更にはデスクトップアプリへの高いポータビリティが期待できる、Adobe</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>TIGの伊藤真彦です。</p><p>フロントエンドアプリケーションの開発においてVue、Reactと触ってきましたがFlutterの開発も始めました。モバイルアプリ、WEBアプリ、更にはデスクトップアプリへの高いポータビリティが期待できる、Adobe XDでのデザインを高速にアプリケーションに反映できる、といった期待値が高いことが選定の理由です。</p><p>フューチャーでは<a href="/articles/20210510a/">Dart/Flutter連載</a>で様々なネタを取り上げましたが、汎用的なハウツー記事が意外と少なかったため書いてみました。</p><h1 id="Flutterとは"><a href="#Flutterとは" class="headerlink" title="Flutterとは"></a>Flutterとは</h1><p>FlutterはDart言語で実装されたアプリケーションフレームワークです。</p><p>元々はAndroid、iOS向けのモバイルアプリケーションを実装するためのSDKでしたが、<a href="https://flutter.dev/multi-platform/web">Flutter on the web</a>、<a href="https://flutter.dev/multi-platform/desktop">Flutter on Desktop</a>の公開により、Flutterで作っておけばどのようなプラットフォームであってもアプリケーションをリリースできる、という環境が整備されました。</p><p>執筆時点の2021年末ではFlutter on Desktopはまだリリースから日が浅いですが、モバイルでもPCでも使える共通コンポーネントを作りたい、というニーズを強力にサポートしてくれる事が期待できます。</p><h1 id="Flutterのインストール"><a href="#Flutterのインストール" class="headerlink" title="Flutterのインストール"></a>Flutterのインストール</h1><p>Flutterは<a href="https://flutter.dev/?gclid=Cj0KCQiAnuGNBhCPARIsACbnLzrdf197SlPULqzczv4M2p5mNGCENYpEki6GWdiN1kdeKzzJ_KishTcaAuDLEALw_wcB&gclsrc=aw.ds">公式サイト</a>からSDKをインストールすることで<code>flutter</code>コマンドが利用できるようになります。<code>flutter</code>コマンドはアプリケーションの初期構築、起動、依存モジュールの管理を行うことができます、<code>npm</code>コマンド+任意のフレームワークのCLIコマンドのような存在ですね。</p><p><a href="https://docs.flutter.dev/get-started/install">インストールページ</a>から各OS向けのSDKがダウンロードできます。2021年現在ではリッチなインストーラではなく、ダウンロードしたファイル一式を解凍後、任意の場所に配置し、自力でパスを通す必要があります。</p><p>下記のようなコマンドを<code>.bash_profile</code>等のファイルに記載してください。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=&quot;$PATH:[flutterフォルダが格納されているディレクトリ]/flutter/bin&quot;</span><br></pre></td></tr></table></figure><p>ファイルの中身は単一のバイナリではなく、サンプルコードやREADMEなど一式揃っており一瞬驚きますが、それら全てが必要です。</p><p>パスを通すと<code>flutter</code>コマンドが利用できるようになります。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ flutter --version</span><br><span class="line">Flutter 2.5.3 • channel stable • https://github.com/flutter/flutter.git</span><br><span class="line">Framework • revision 18116933e7 (9 weeks ago) • 2021-10-15 10:46:35 -0700</span><br><span class="line">Engine • revision d3ea636dc5</span><br><span class="line">Tools • Dart 2.14.4</span><br></pre></td></tr></table></figure><h1 id="doctorコマンドの利用"><a href="#doctorコマンドの利用" class="headerlink" title="doctorコマンドの利用"></a>doctorコマンドの利用</h1><p>Flutterにはdoctorコマンドというものが存在します。これは各プラットフォームにおける環境構築が終わっているかを確認できるコマンドです。</p><p>Flutterでモバイルアプリケーションを開発する場合、iOSではXcode、AndroidではAndroid Studioを利用してアプリケーションをビルド、デバッグすることになります。これら必要な開発ツールが揃っているかを確認し、何が必要かを教えてくれるのが<code>doctor</code>コマンドです。</p><p>flutterのインストールが終わったら、<code>doctor</code>コマンドを実行し、開発したいプラットフォーム向けの準備が終わっているかを確認しましょう。私はAndroid, iOS向けアプリケーションの開発経験が既にあったため、Android StudioのConfigを少し変更するだけで下記のように全ての準備が終わりました。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ flutter doctor</span><br><span class="line">Doctor summary (to see all details, run flutter doctor -v):</span><br><span class="line">[✓] Flutter (Channel stable, 2.5.3, on Mac OS X 10.15.7 19H15 darwin-x64, locale ja-JP)</span><br><span class="line">[✓] Android toolchain - develop for Android devices (Android SDK version 30.0.3)</span><br><span class="line">[✓] Xcode - develop for iOS and macOS</span><br><span class="line">[✓] Chrome - develop for the web</span><br><span class="line">[✓] Android Studio (version 4.2)</span><br><span class="line">[✓] VS Code (version 1.62.3)</span><br><span class="line">[✓] Proxy Configuration</span><br><span class="line">[✓] Connected device (1 available)</span><br></pre></td></tr></table></figure><h1 id="アプリケーションを新規作成する"><a href="#アプリケーションを新規作成する" class="headerlink" title="アプリケーションを新規作成する"></a>アプリケーションを新規作成する</h1><p>環境構築が終わったら、アプリケーションを作成します。</p><p>どのような開発経験の方でも手早く試せるため、Flutter on the Webでの開発前提で説明します。Flutterは<code>flutter create</code>コマンドで、アプリケーションの雛形を生成することができます。<br>Flutterのプロジェクト名は<code>-</code>を含めることができません。</p><p>Androidアプリケーションとして公開する際の<code>applicationId</code>の命名規約に抵触することから<code>-</code>が利用できないようです。多くのflutter向けOSSパッケージは<code>_</code>区切りのスネークケースなので、それに倣うのが良いでしょう。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter create hello_world</span><br></pre></td></tr></table></figure><p>コマンドを実行すると様々なファイルが自動生成され、下記のような案内が表示されます。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">All done!</span><br><span class="line">In order to run your application, type:</span><br><span class="line"></span><br><span class="line">  $ cd hello_world</span><br><span class="line">  $ flutter run</span><br><span class="line"></span><br><span class="line">Your application code is in hello_world/lib/main.dart.</span><br></pre></td></tr></table></figure><p>指示通りにコマンドを実行するとサンプルアプリケーションが起動します。<br>Flutter on the Webが存在するおかげで、Xcode、Android Studioが無い状態でもとりあえず動かすことは可能です。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd hello_world</span><br><span class="line">$ flutter run</span><br></pre></td></tr></table></figure><p>よくある公式ロゴ入りのHello Worldページではなく、ボタンを押すとカウンタの数が増えるというインタラクティブなデモアプリが起動するのが特徴的です。</p><img src="/images/20211221a/image.png" alt="サンプルアプリ画像" width="400" height="444" loading="lazy"><p>VueやReactに慣れていると<code>localhost:3000</code>や<code>localhost:8080</code>で起動しないのが違和感を覚えますが、Flutter on the Webの場合空いている適当なポートで起動します。</p><p>ポート番号を指定することも可能です。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter run --web-port 8080</span><br></pre></td></tr></table></figure><p>モバイル、デスクトップの開発環境が整備されている場合、<code>-d</code>オプションで起動するプラットフォームを選択できます。<code>all</code>で実行可能な全てのプラットフォーム向けに同時起動できます、楽しいですね。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter run -d all</span><br></pre></td></tr></table></figure><h1 id="アプリケーションを開発するための知識"><a href="#アプリケーションを開発するための知識" class="headerlink" title="アプリケーションを開発するための知識"></a>アプリケーションを開発するための知識</h1><p>アプリケーションを起動することができたら、デモアプリケーションを編集し、任意のアプリケーションを開発していきます。</p><p><code>lib/main.dart</code>を編集することでアプリケーションを開発できます。</p><p>生成されたアプリケーションの<code>main.dart</code>を見てみます。</p><figure class="highlight dart"><figcaption><span>main.dart</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  runApp(<span class="keyword">const</span> MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> MyApp(&#123;Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// This widget is the root of your application.</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">&#x27;Flutter Demo&#x27;</span>,</span><br><span class="line">      theme: ThemeData(</span><br><span class="line">        <span class="comment">// This is the theme of your application.</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// Try running your application with &quot;flutter run&quot;. You&#x27;ll see the</span></span><br><span class="line">        <span class="comment">// application has a blue toolbar. Then, without quitting the app, try</span></span><br><span class="line">        <span class="comment">// changing the primarySwatch below to Colors.green and then invoke</span></span><br><span class="line">        <span class="comment">// &quot;hot reload&quot; (press &quot;r&quot; in the console where you ran &quot;flutter run&quot;,</span></span><br><span class="line">        <span class="comment">// or simply save your changes to &quot;hot reload&quot; in a Flutter IDE).</span></span><br><span class="line">        <span class="comment">// Notice that the counter didn&#x27;t reset back to zero; the application</span></span><br><span class="line">        <span class="comment">// is not restarted.</span></span><br><span class="line">        primarySwatch: Colors.blue,</span><br><span class="line">      ),</span><br><span class="line">      home: <span class="keyword">const</span> MyHomePage(title: <span class="string">&#x27;Flutter Demo Home Page&#x27;</span>),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHomePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> MyHomePage(&#123;Key? key, <span class="keyword">required</span> <span class="keyword">this</span>.title&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// This widget is the home page of your application. It is stateful, meaning</span></span><br><span class="line">  <span class="comment">// that it has a State object (defined below) that contains fields that affect</span></span><br><span class="line">  <span class="comment">// how it looks.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// This class is the configuration for the state. It holds the values (in this</span></span><br><span class="line">  <span class="comment">// case the title) provided by the parent (in this case the App widget) and</span></span><br><span class="line">  <span class="comment">// used by the build method of the State. Fields in a Widget subclass are</span></span><br><span class="line">  <span class="comment">// always marked &quot;final&quot;.</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> title;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  State&lt;MyHomePage&gt; createState() =&gt; _MyHomePageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyHomePageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MyHomePage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> _counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> _incrementCounter() &#123;</span><br><span class="line">    setState(() &#123;</span><br><span class="line">      <span class="comment">// This call to setState tells the Flutter framework that something has</span></span><br><span class="line">      <span class="comment">// changed in this State, which causes it to rerun the build method below</span></span><br><span class="line">      <span class="comment">// so that the display can reflect the updated values. If we changed</span></span><br><span class="line">      <span class="comment">// _counter without calling setState(), then the build method would not be</span></span><br><span class="line">      <span class="comment">// called again, and so nothing would appear to happen.</span></span><br><span class="line">      _counter++;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="comment">// This method is rerun every time setState is called, for instance as done</span></span><br><span class="line">    <span class="comment">// by the _incrementCounter method above.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// The Flutter framework has been optimized to make rerunning build methods</span></span><br><span class="line">    <span class="comment">// fast, so that you can just rebuild anything that needs updating rather</span></span><br><span class="line">    <span class="comment">// than having to individually change instances of widgets.</span></span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        <span class="comment">// Here we take the value from the MyHomePage object that was created by</span></span><br><span class="line">        <span class="comment">// the App.build method, and use it to set our appbar title.</span></span><br><span class="line">        title: Text(widget.title),</span><br><span class="line">      ),</span><br><span class="line">      body: Center(</span><br><span class="line">        <span class="comment">// Center is a layout widget. It takes a single child and positions it</span></span><br><span class="line">        <span class="comment">// in the middle of the parent.</span></span><br><span class="line">        child: Column(</span><br><span class="line">          <span class="comment">// Column is also a layout widget. It takes a list of children and</span></span><br><span class="line">          <span class="comment">// arranges them vertically. By default, it sizes itself to fit its</span></span><br><span class="line">          <span class="comment">// children horizontally, and tries to be as tall as its parent.</span></span><br><span class="line">          <span class="comment">//</span></span><br><span class="line">          <span class="comment">// Invoke &quot;debug painting&quot; (press &quot;p&quot; in the console, choose the</span></span><br><span class="line">          <span class="comment">// &quot;Toggle Debug Paint&quot; action from the Flutter Inspector in Android</span></span><br><span class="line">          <span class="comment">// Studio, or the &quot;Toggle Debug Paint&quot; command in Visual Studio Code)</span></span><br><span class="line">          <span class="comment">// to see the wireframe for each widget.</span></span><br><span class="line">          <span class="comment">//</span></span><br><span class="line">          <span class="comment">// Column has various properties to control how it sizes itself and</span></span><br><span class="line">          <span class="comment">// how it positions its children. Here we use mainAxisAlignment to</span></span><br><span class="line">          <span class="comment">// center the children vertically; the main axis here is the vertical</span></span><br><span class="line">          <span class="comment">// axis because Columns are vertical (the cross axis would be</span></span><br><span class="line">          <span class="comment">// horizontal).</span></span><br><span class="line">          mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            <span class="keyword">const</span> Text(</span><br><span class="line">              <span class="string">&#x27;You have pushed the button this many times:&#x27;</span>,</span><br><span class="line">            ),</span><br><span class="line">            Text(</span><br><span class="line">              <span class="string">&#x27;<span class="subst">$_counter</span>&#x27;</span>,</span><br><span class="line">              style: Theme.of(context).textTheme.headline4,</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">      floatingActionButton: FloatingActionButton(</span><br><span class="line">        onPressed: _incrementCounter,</span><br><span class="line">        tooltip: <span class="string">&#x27;Increment&#x27;</span>,</span><br><span class="line">        child: <span class="keyword">const</span> Icon(Icons.add),</span><br><span class="line">      ), <span class="comment">// This trailing comma makes auto-formatting nicer for build methods.</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Flutterアプリケーションは最初に説明した通りDartで実装されたアプリケーションであり、更にはそれがFlutterアプリとして抽象化されているため、慣れるまでは少し時間がかかるかもしれません。</p><p>まずは雰囲気で最初に表示された画面のコンポーネントと、画面の状態を管理するステート、ボタンを操作した際にカウンタをインクリメントする関数が書いてあることを感じてみるくらいの所からスタートすることになるかなと思います。</p><p>ここからDartの文法、Flutterのお作法を学んでいきましょう。</p><h2 id="Widgetについて"><a href="#Widgetについて" class="headerlink" title="Widgetについて"></a>Widgetについて</h2><p>Flutterアプリケーションは画面のコンポーネントをWidgetという単位で開発します。</p><p>モバイルアプリが出自であるため、Vue、ReactなどHTMLを意識したコンポーネントの書き方に慣れたWEBフロントエンジニア出身の人よりはSwiftのようなモバイルアプリ開発に慣れている方の方が親しみを覚えやすい書き方をする事になります。</p><p><a href="https://docs.flutter.dev/development/ui/widgets">Flutter公式ドキュメント</a>からどのようなWidgetが存在しているのかを一通り眺めておくとやりたい事と出来る事のイメージが掴みやすいです。<a href="https://docs.flutter.dev/development/ui/widgets/basics">Basics</a>、<a href="https://docs.flutter.dev/development/ui/widgets/layout">Layout</a>、<a href="https://docs.flutter.dev/development/ui/widgets/text">Text</a>あたりから攻めてみて、サーバーサイドから取得した情報を取得したい、といった要望に応えるために<a href="https://docs.flutter.dev/development/ui/widgets/async">Async Widgets</a>あたりに早期に触れるような流れが自然でしょうか。</p><p><a href="https://future-architect.github.io/articles/20210513b/">Flutterレイアウト入門</a>、<a href="https://future-architect.github.io/articles/20210519a/">Flutter ウィジェットテスト入門</a>も合わせてお読みください。</p><h2 id="Stateについて"><a href="#Stateについて" class="headerlink" title="Stateについて"></a>Stateについて</h2><p>他のフレームワークでのフロントエンドアプリケーションの開発で馴染みがある人がいるかもしれませんが、Stateは日本語にすると「状態」を意味します。WidgetのStateとは文字通りWidgetが持っている状態の変化を管理するための概念です。ユーザーの操作によって変更が起こりうる要素、外部APIから取得したデータなど、動的に変化する情報をStateとして扱い、管理します。</p><p>デモアプリではユーザーがボタンを押した時に画面中央のカウントが更新される部分が該当します。<code>int _counter = 0;</code>で宣言した変数<code>_counter</code>にカウント情報を保存し、状態を更新し、画面を再描画するために、<code>setState()</code>関数の内部で変数の値を更新する関数、<code>_incrementCounter()</code>が実装されています。</p><p>Reactなど近年のフロントエンド フレームワークでは、画面の状態を管理することで、状態が更新された場合コンポーネント単位での再描画を行う、更新のないコンポーネントは再描画しない、という必要最小限の画面更新を行う仕組みでアプリケーションのパフォーマンスが高くなるように設計されています。Flutterもその仕組みを採用しており、状態管理を行っているということですね。FlutterではStateを持たない<code>StatelessWidget</code>、State管理の仕組みを備えた<code>StatefulWidget</code>の２種類のWidgetが存在します。</p><p>状態管理については武田さんのアドベントカレンダー記事に詳しいです。</p><ul><li><a href="https://qiita.com/datake914/items/f91acf30a640447c57c8">【2021年版】Flutterの状態管理パターン総まとめ - Qiita</a></li></ul><h2 id="パッケージ管理について"><a href="#パッケージ管理について" class="headerlink" title="パッケージ管理について"></a>パッケージ管理について</h2><p>デモアプリから発展して高度なアプリケーションを開発するにあたり、何らかのライブラリを導入する事になるでしょう。</p><p>FlutterではFlutterに向けて作られたものは勿論、Dart向けのライブラリをインポートできます。Flutterアプリでは依存モジュールを<code>pubspec.yaml</code>というファイルで管理しています。Node.jsでいうところの<code>package.json</code>、Goでいうところの<code>go.mod</code>のようなファイルです。ライブラリを追加、削除するには<code>flutter pub</code>コマンドを利用します。</p><p>例えばFlutterでは拡大、縮小可能な画像を表示する<a href="https://pub.dev/packages/photo_view">photo_viewパッケージ</a>があります。インポートするだけで画像をカッコよく表示するWidgetが使えるようになります。</p><p><code>flutter pub add</code>コマンドでパッケージをインストールします。Dartパッケージのサイトでは簡単なコマンドであっても<a href="https://pub.dev/packages/photo_view/install">インストールの手法</a>、<a href="https://pub.dev/packages/photo_view/example">実装サンプル</a>が整備されています。</p><p>サンプルだけでなく、<a href="https://pub.dev/documentation/photo_view/latest/">APIリファレンス</a>も見れば使い方は概ね分かると思います。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ flutter pub add photo_view</span><br></pre></td></tr></table></figure><p>パッケージをインストールし、import行を追加することで、パッケージの機能やWidgetが使えるようになります。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import &#x27;package:photo_view/photo_view.dart&#x27;;</span><br></pre></td></tr></table></figure><p><code>photo_view</code>をimportするとWidgetとして<code>PhotoView()</code>を利用できるようになります。</p><figure class="highlight dart"><figcaption><span>main.dart</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">@override</span></span><br><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">  <span class="keyword">return</span> PhotoView(imageProvider: AssetImage(<span class="string">&quot;assets/large-image.jpg&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>実際にはレイアウトを調整するため他のWidgetと組み合わせて使うことになると思いますが、Flutterではこのような形でサードパーティのモジュールを簡単に導入することができます。</p><p>導入したパッケージを削除する場合は<code>remove</code>コマンドが利用できます。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dart pub remove photo_view</span><br></pre></td></tr></table></figure><p>他の人が作成したFlutterアプリケーションをgit cloneするなどの形で開発する場合は、<code>flutter pub get</code>コマンドで依存モジュールをダウンロードできます。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter pub get</span><br></pre></td></tr></table></figure><h1 id="アプリケーションのビルド"><a href="#アプリケーションのビルド" class="headerlink" title="アプリケーションのビルド"></a>アプリケーションのビルド</h1><p>アプリケーションが完成したら、対象のプラットフォーム向けにビルドします。</p><p>ビルドにおいてもスマートフォンアプリとしてビルドする場合はXcode, Android Studioでの環境構築が必要です。ここでもFlutter on the Webでの例を記載します。</p><p>アプリケーションのビルドは<code>flutter build</code>コマンドで行います。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter build web</span><br></pre></td></tr></table></figure><p>対象プラットフォームを指定してビルドコマンドを実行すると、ビルドが開始されます。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ flutter build web</span><br><span class="line"></span><br><span class="line">💪 Building with sound null safety 💪</span><br><span class="line"></span><br><span class="line">Compiling lib/main.dart for the Web...</span><br></pre></td></tr></table></figure><p>コマンド実行が成功すると<code>build</code>フォルダに成果物がビルドされます。</p><img src="/images/20211221a/image_2.png" alt="image.png" width="1120" height="382" loading="lazy"><p>webフォルダの中身には<code>index.html</code>をはじめ各種ファイルが生成されています。</p><img src="/images/20211221a/image_3.png" alt="image.png" width="1106" height="548" loading="lazy"><p>これら一式を<a href="https://firebase.google.com/?hl=ja">Firebase</a>や<a href="https://docs.github.com/ja/pages/getting-started-with-github-pages/about-github-pages">GitHub Pages</a>静的サイトとしてホスティングできるサービスにそのまま配置するような使い方でFlutterアプリをデプロイできます。</p><p>ビルドされた<code>index.html</code>をそのままダブルクリックしてブラウザで開いても正常に動作しません。これは<code>main.dart.js</code>がサーバーでホストされている前提で動こうとするためです。</p><p>実際にデプロイしてみても良いですが、環境を用意するのが面倒な場合は、<a href="/articles/20210512a/">Goのサーバーの管理画面をFlutter Webで作ってみるための調査</a>の「Goのアプリケーションに組み込む」のように<code>localhost</code>でホスティングするような手法で試すこともできます。</p><h1 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h1><p>Flutterの環境構築から開発手法、ビルドまでの流れを紹介しました。</p><p>高度なアプリケーション開発のtipsやAndroid、 iOS向け、更には各OSのデスクトップアプリでの環境構築、ビルド、リリース手法など深堀りする余地はたくさんありますが、ひとまず流れとしては以上になります。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Programming/">Programming</category>
      
      
      <category domain="https://future-architect.github.io/tags/%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89/">環境構築</category>
      
      <category domain="https://future-architect.github.io/tags/Flutter/">Flutter</category>
      
      <category domain="https://future-architect.github.io/tags/Dart/">Dart</category>
      
      <category domain="https://future-architect.github.io/tags/flutter-web/">flutter_web</category>
      
      
      <comments>https://future-architect.github.io/articles/20211221a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JavaのDockerイメージ何選ぶ？</title>
      <link>https://future-architect.github.io/articles/20211220a/</link>
      <guid>https://future-architect.github.io/articles/20211220a/</guid>
      <pubDate>Sun, 19 Dec 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;img src=&quot;/images/20211220a/top.png&quot; alt=&quot;&quot; width=&quot;1000&quot; height=&quot;514&quot;&gt;

&lt;p&gt;&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/20211220a/top.png" alt="" width="1000" height="514"><p><a href="https://qiita.com/advent-calendar/2021/java">Javaアドベントカレンダー</a>にエントリーした記事になります。</p><p>Javaのイメージを作る上で、どのDockerイメージをベースに選べばいいのか、というのを軽く調べ始めたら、選択肢がたくさんでてきたので、ちょっと突っ込んで調べてみました。</p><p>以前、<a href="/articles/20200513/">仕事でPythonコンテナをデプロイする人向けのDockerfile (1): オールマイティ編</a>で書いたOS名とかは今回は紹介しませんので、busterとかalpineとかwindowsservercoreってなによ？というお話はそちらの記事を参照してください。一点アップデートがあるのは、Debian 11がリリースされて、イメージとしてbullseyeというのが追加された点ですね。あとはfocal=Ubuntu 20.04LTSというのを覚えてもらえれば。</p><h1 id="JDK周りのニュース"><a href="#JDK周りのニュース" class="headerlink" title="JDK周りのニュース"></a>JDK周りのニュース</h1><p>Oracle JDKが無償配布をやめて、無償利用としてはOpenJDKを、という案内を出したのち、Java 17のときにまた無償配布を再開した、というのが大きなニュースですね。</p><p><a href="https://www.publickey1.jp/blog/21/oracle_jdkjava_17.html">https://www.publickey1.jp/blog/21/oracle_jdkjava_17.html</a></p><p>その間、いくつかのOpenJDKのディストリビューションが発表されました。AmazonとMicrosoftですね。</p><p>OpenJDK回りのトピックといえば、<a href="https://www.infoq.com/jp/news/2020/06/adoptopenjdk-eclipse-adoptium/">AdoptOpenJDKがEclipseに移管</a>となったというのがあります。AdoptOpenJDKはDocker公式イメージがありましたが、現在ではdeprecatedになっています。</p><p>OpenJDKでパッチも上流のプロジェクトで管理されているのでいまのところ大きな違いはなさそうです。独自にサポート期間を延ばしたりという違いがあったりします。</p><h1 id="DockerのJDKディストリビューション"><a href="#DockerのJDKディストリビューション" class="headerlink" title="DockerのJDKディストリビューション"></a>DockerのJDKディストリビューション</h1><p>今、きちんとメンテナンスされていそうな公式イメージ系は次の5つかと思います</p><ul><li><a href="https://hub.docker.com/_/eclipse-temurin">https://hub.docker.com/_/eclipse-temurin</a></li><li><a href="https://hub.docker.com/_/openjdk">https://hub.docker.com/_/openjdk</a></li><li><a href="https://hub.docker.com/_/maven">https://hub.docker.com/_/maven</a></li><li><a href="https://hub.docker.com/_/amazoncorretto">https://hub.docker.com/_/amazoncorretto</a></li><li><a href="https://hub.docker.com/_/ibmjava">https://hub.docker.com/_/ibmjava</a></li></ul><p>あとはGCR側にある注目すべきものとしてはdistrolessのJavaもあります。</p><ul><li>gcr.io/distroless/java11-debian11</li><li>gcr.io/distroless/java17-debian11</li></ul><p>Docker officialではなくて、verfied publisherのJDKだと、本家OracleやMicrosoftのもありました。</p><ul><li><a href="https://hub.docker.com/_/oracle-jdk">https://hub.docker.com/_/oracle-jdk</a></li><li><a href="https://hub.docker.com/_/microsoft-java-jdk">https://hub.docker.com/_/microsoft-java-jdk</a></li></ul><p>GraalVMはGitHubのコンテナレジストリにありました。</p><ul><li><a href="https://github.com/graalvm/container/pkgs/container/graalvm-ce/versions">https://github.com/graalvm/container/pkgs/container/graalvm-ce/versions</a></li></ul><h2 id="Eclipse-Temurin"><a href="#Eclipse-Temurin" class="headerlink" title="Eclipse Temurin"></a>Eclipse Temurin</h2><p>Adoptiumがプロジェクト名で、Temurinがソフトウェア名ですかね？ RedHat, IBM, Microsoftが母体となって作ったAdoptOpenJDKがEclipseに移管されたものがこれです。もともとはEclipse OpenJ9という別バージョンのJVMがあったりと細かくバリエーションがあったのは、少し整理されて減っているように思います。</p><p>Javaのバージョンとしては8, 11, 16, 17を提供しており、8と11のみJREも提供されています。</p><p>OS名をつけないデフォルトがWindowsServerCoreでサイズが圧縮されて6GBという富豪な感じです。ベースのOSはWindows系が充実していてNanoServerとかもあります。LinuxはUbuntuとAlpineでDebianはなし。</p><h2 id="OpenJDK"><a href="#OpenJDK" class="headerlink" title="OpenJDK"></a>OpenJDK</h2><p>Dockerコミュニティがメンテナンスしているイメージです。<code>https://hub.docker.com/_/java</code>というURLでアクセスしてもここにリダイレクトされます。12以降はOracleがビルドしたOpenJDKをバンドルと説明には書かれています。</p><p>Javaのバージョンとしては8から19(途中9とかLTSでないのはいくつか欠番)と一番充実しています。JREは8と11にのみ提供されています。</p><p>ベースのOSはDebian系で、OracleLinux7/8、WindowsServerCore、Alpineもあります。</p><h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><p>個人がメンテナーなオフィシャルイメージです。Mavenが主ですが、バンドルするJDKがOpenJDK/Amazon Corretto、　Eclipse　Temurin、IBM Javaと多様です。</p><p>ベースのOSはDebian系で、Alpineもあります。</p><h2 id="Amazon-Corretto"><a href="#Amazon-Corretto" class="headerlink" title="Amazon Corretto"></a>Amazon Corretto</h2><p>Amazonが独自にサポート期間を延長してサポートしていることで話題になったのがAmazon Correttoです。</p><p>JavaのバージョンはLTSの8, 11, 17です。8だけJREも提供されています。</p><p>OSはベースはAmazon Linuxで、Alpineも提供されています。</p><h2 id="IBM-Java"><a href="#IBM-Java" class="headerlink" title="IBM Java"></a>IBM Java</h2><p>昔からJavaでは名を馳せていたIBMです。OpenJ9はIBMの成果ですが、ここではなくてAdoptOpenJDK側での提供となっています（そちらはDeprecatedですが)。</p><p>Javaのバージョンは8, 9, 11で、なぜか9が入っています。それぞれJDKとJREを提供しているほか、Small Footprint JRE（SFJ）というさらにコンパクトなJREが提供されているのが特徴です。</p><p>ベースのOSとしてはUbuntuとAlpineです。</p><h2 id="Distroless"><a href="#Distroless" class="headerlink" title="Distroless"></a>Distroless</h2><p>シェルがなくて中に入れないのでセキュアというのでお馴染みのDistrolessです。</p><p>提供バージョンは8と11のみで、JREのみです。対応OSはDebian11のみというシンプル構成です。</p><p>なお、:debugタグをつけるとBusyBoxによるシェルのログインできるようになりますが、JDKもインストールされるようになります。他のDistrolessだとBusyBoxの容量の違いしかないのに、なぜか容量が2倍違うという。</p><h2 id="OracleJDK"><a href="#OracleJDK" class="headerlink" title="OracleJDK"></a>OracleJDK</h2><p>ページを見るとタグ情報がなく、名前と連絡先を入れるContact Formに入力しないと詳しく知れない謎イメージです。説明を見ると、JDK 11の有料時代のものっぽいのですが、17になった後の更新は行われていない？詳しく見ていないです。</p><h2 id="Microsoft-OpenJDK"><a href="#Microsoft-OpenJDK" class="headerlink" title="Microsoft OpenJDK"></a>Microsoft OpenJDK</h2><p>Azul Zulu for Azureという、早口言葉？というのが正式名称のMicrosoftのOpenJDKビルドです。イメージ自体はA独自のコンテナレジストリに登録されています。”Microsoft Azure, Azure Functions (anywhere), Azure Stack, or Microsoft SQL Server”で使う前提とのことです。</p><p>Javaバージョンが広く、7から17までサポートしており、それぞれでJDK, JRE, Headless JRE, Maven, Tomcat付きなど幅広いです。17のJREは他では見当たらないので貴重ですね。</p><p>OSもWindowsServerCore、NanoServerは当然のこと、Linuxサポートが手厚く、Ubuntu 18.04, 20.04, Debian 8/9/10, CentOS、Alpineもサポートしています。DebianはSlimがいないのが残念。</p><h2 id="GraalVM"><a href="#GraalVM" class="headerlink" title="GraalVM"></a>GraalVM</h2><p>PolyglotなJVMかつネイティブ化をサポートしたGraalVMです。</p><p>こちらは8, 11, 17のバージョンが提供されております。また、ネイティブ化のためのツールであるnative imageのパッケージ（イメージ）も提供されています。</p><p>OSとしてはOracle Linux7/8です。</p><h1 id="どのイメージを使うか？"><a href="#どのイメージを使うか？" class="headerlink" title="どのイメージを使うか？"></a>どのイメージを使うか？</h1><p>結構書き出してみたら特徴が色々だったので、ニーズが明確であれば選びやすいんじゃないか、と思いました。</p><p>今回、CPUアーキテクチャは紹介しませんでしたが、特殊なアーキテクチャやOSを使いたい、ということであればそれで絞られるでしょう。例えば、AWSで動かすからAmazon Linuxがいい、とかがあれば、Corretto一択になります。そんな感じで絞れると思います。</p><p>それ以外だと、今時はマルチステージビルドが当たり前の選択になると思います。Javaの場合はJDKがビルドイメージで、実行イメージはJREになると思うので、そのペアが提供されているかどうかでかなり絞れます。というか、Javaのバージョンまで結構限定されちゃいますね。DistrolessとMicrosoft以外は8, 11のLTS以外は基本的にJREはないので・・・それ以外でマルチステージビルドをしたいのであればMicrosoftのJDK一択ですね。</p><p>Distrolessを使いたい場合も最終イメージは一意に決まります。ビルドイメージはOpenJDKですね。MicrosoftはDebian 11がないので。</p><p>GraalVMの場合はネイティブイメージになるのでその後はランタイムなしのイメージでも動くのかどうか、ちょっと実験したいところです。あるいはdebian-slim系とかDistrolessで行けるかどうか。</p><p>それ以外の場合はなんでも良さそうですが、<a href="/articles/20200513/#Python%E3%81%AE%E3%83%99%E3%83%BC%E3%82%B9%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E9%81%B8%E3%81%B3">PythonではAlpineを使うとパフォーマンスが大幅に落ちる</a>ということを紹介したのですが、<a href="https://medium.com/rocket-travel/alpine-vs-debian-images-for-java-jvm-builds-b8f8e1cc58a8">Alpineでメモリ回りが遅いのはJavaも同様</a>とのことなので、Alpineは外しても良いと思います。</p><p>個人的には2021年末現在だとこんな感じかな、と思っています。OSバージョンを指定しないとうっかりメジャーバージョンアップは影響が大きいので、bullseyeは省略しない方向で。OpenJDKのbullseyeな11/17あたりのJDKでビルドして、デプロイもシェルが必要ならOpenJDKのbullseye-slimのJRE、シェルがなければDistrolessあたりの組み合わせが無難でいいんじゃないかな、と思いました。面白みはないですが。17のJREというと、提供はMicrosoftしかないのですが、Azure用みたいに書いてあるので、その前提で。</p><div class="scroll"><table><thead><tr><th align="left">構成</th><th align="left">ビルド用イメージ</th><th align="left">実行用イメージ</th></tr></thead><tbody><tr><td align="left">11</td><td align="left">oopenjdk:11-jdk-slim-bullseye</td><td align="left">openjdk:11-jre-slim-bullseye</td></tr><tr><td align="left">11 distroless</td><td align="left">openjdk:11-jdk-slim-bullseye</td><td align="left">gcr.io/distroless/java11-debian11</td></tr><tr><td align="left">17 (Azure用)</td><td align="left">mcr.microsoft.com/java/jdk:17-zulu-debian10</td><td align="left">mcr.microsoft.com/java/jre-headless:17-zulu-debian10</td></tr><tr><td align="left">17 distroless</td><td align="left">oopenjdk:17-jdk-slim-bullseye</td><td align="left">gcr.io/distroless/java11-debian17</td></tr></tbody></table></div><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="/articles/20200513/">仕事でPythonコンテナをデプロイする人向けのDockerfile (1): オールマイティ編</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Programming/">Programming</category>
      
      
      <category domain="https://future-architect.github.io/tags/Java/">Java</category>
      
      <category domain="https://future-architect.github.io/tags/Docker/">Docker</category>
      
      <category domain="https://future-architect.github.io/tags/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%83%93%E3%83%AB%E3%83%89/">コンテナビルド</category>
      
      
      <comments>https://future-architect.github.io/articles/20211220a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Software Design 2022年1月号に短期連載「Cypressで作る&quot;消耗しない&quot;E2Eテスト環境」を寄稿しました</title>
      <link>https://future-architect.github.io/articles/20211218a/</link>
      <guid>https://future-architect.github.io/articles/20211218a/</guid>
      <pubDate>Fri, 17 Dec 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h1&gt;&lt;p&gt;こんにちは。CSIG所属、踊るエンジニア木戸です。&lt;br&gt;12/18発売の、&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>こんにちは。CSIG所属、踊るエンジニア木戸です。<br>12/18発売の、<a href="https://gihyo.jp/magazine/SD/archive/2022/202201">Software Design 2022年1月号</a>に短期連載「Cypressで作る”消耗しない”E2Eテスト環境」を寄稿しました！</p><img src="/images/20211218a/image.png" alt="" width="500" height="713" loading="lazy"><p>連載は1月号から3月号に渡って計3回掲載予定であり、1月号は木戸、2月号はCSIG枇榔さん、3月号はTIG渋川さんが、テストツールCypressについて詳しく紹介します。1月号発売に伴って、簡単に宣伝させていただきます。</p><h1 id="コンテンツ"><a href="#コンテンツ" class="headerlink" title="コンテンツ"></a>コンテンツ</h1><p>連載では、E2Eテストのフレームワークである「<a href="https://www.cypress.io/">Cypress</a>」の基本的な使い方やその特徴、さらにはよりアドバンスドな使い方までを紹介します。</p><p>E2Eテストとは、「End To Endテスト」の略であり、ユーザが利用するのと同じようにシステム全体をテストします。</p><p>抜け漏れなくテストする必要があるため、かかる労力は膨大です。また、テスト者の未成熟などによりテストが正しく行われない可能性もあります。自動化することでコスト削減＆品質向上を狙おう、ということで、E2Eテストを快適にしてくれる「Cypress」の出番です。</p><p><a href="/tags/Cypress/">Future Tech Blogでも何度か取り上げて</a>おり、注目を集めているツールですので、連載が皆様のお役に立てること間違いなしです！</p><p>連載第1回目である1月号では次のようなコンテンツを含んでいます。</p><ul><li>E2Eテストとは何か</li><li>テスト自動化のメリット・デメリット</li><li>E2Eテストを自動化するツールの比較</li><li>Cypressの説明・使い方<ul><li>テスト構築編</li><li>テスト記述編</li><li>テスト実行編</li><li>デバック編</li></ul></li></ul><p>記事を読んだ読者が、「Cypressを使って簡単なE2Eテストの自動化ができる状態である」ことを目標に丁寧に解説していますので、ぜひご購読ください！</p><p>また、連載第2回目では「メンテナンス性の高いテストコードを書くコツや並列での実行といったCypressをより活用する方法」について、連載第3回目では「よりE2Eテストの”ストレスを減らす”基本機能」について、解説・紹介する予定ですので、こちらもこうご期待ください！</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Programming/">Programming</category>
      
      
      <category domain="https://future-architect.github.io/tags/%E5%87%BA%E7%89%88/">出版</category>
      
      <category domain="https://future-architect.github.io/tags/SoftwareDesign/">SoftwareDesign</category>
      
      <category domain="https://future-architect.github.io/tags/Cypress/">Cypress</category>
      
      
      <comments>https://future-architect.github.io/articles/20211218a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>画面の解像度の要件定義の話</title>
      <link>https://future-architect.github.io/articles/20211207a/</link>
      <guid>https://future-architect.github.io/articles/20211207a/</guid>
      <pubDate>Mon, 06 Dec 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;最近、企業内システムのウェブサービス開発や、B2B2B案件とかでウェブの画面を作るケース、Flutterでスマートフォンアプリを開発するときに、画面の要件をどうしましょう、という話が出てくることが多く、毎回似たような説明をしている気がするので、時間節約のためにまとめておきま</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>最近、企業内システムのウェブサービス開発や、B2B2B案件とかでウェブの画面を作るケース、Flutterでスマートフォンアプリを開発するときに、画面の要件をどうしましょう、という話が出てくることが多く、毎回似たような説明をしている気がするので、時間節約のためにまとめておきます。</p><p>単にパソコンやモニターのカタログスペックを持ってくるだけじゃだめだということがお分かりいただければ大丈夫です。</p><h1 id="解像度の論理と物理"><a href="#解像度の論理と物理" class="headerlink" title="解像度の論理と物理"></a>解像度の論理と物理</h1><p>AppleがRetinaを世に出すまでは、基本的にコンピュータが想定するdpi値はほぼ同じでした。dpiというのはインチあたりのドット数で、10ポイントのフォント、といった文字の表示の時の基準になる単位です。同じポイントのテキストであれば、ピクセルサイズの絵として画面に表示されていました。</p><p>iPhoneは2010年のiPhone 4から2倍解像度になってRetinaと名付けられたディスプレイが搭載されました。MacBook Proも2012年から搭載されていました。人間の目には今の解像度は荒すぎるので、人間の目が知覚できるよりも細かいドットにすると、最高の表示になるぞ、という理屈でした。Windowsも対抗して最近は解像度が上がってきています。Windows 10/11になってこのあたりもだいぶこなれてきたように思います。</p><p>解像度が上がりましたが、表示される情報量がそのまま増えたわけではありません。ここで出てきたのがスケーリングという考えです。200%であれば、縦横2倍の解像度で表示されます。テキストとしては2倍の大きさでレンダリングされます。絵にすると次のような感じです。点の数は縦横2倍になっているが、内部で2倍の大きさにして表示するので、見た目の大きさは変わらないぞ、と。</p><img src="/images/20211207a/a.png" alt="a.png" width="434" height="214" loading="lazy"><p>ソフトウェアとしては、スケーリングの比率で割り算した少ない方のピクセル数でレイアウトをしていきます。OSや絵を作るライブラリはこのピクセル数の描画指示に対して、表示用の高いピクセル数の絵を作って表示します。低い方の解像度がこのエントリーで論理解像度と呼んでいるもので、CSS解像度とも呼ばれます。ウェブの世界やFlutterとかでも、だいたいこの解像度を基準にしてレイアウトを行います。</p><h1 id="デフォルトはどうなっているのか？"><a href="#デフォルトはどうなっているのか？" class="headerlink" title="デフォルトはどうなっているのか？"></a>デフォルトはどうなっているのか？</h1><p>デスクトップは条件が変わりすぎるので、ノートパソコン前提で考えてみます。近年はかなり低スペックなメモリ4GB最低価格PCでない限りは、エントリークラスでもFullHDな機種が増えてきました。Dellサイトを見ても、執筆時点では法人向けで見ても344機種中23機種で6.6%ぐらいしかFullHD未満の解像度の機種がありません。個人向けだと301機種中6機種で2%ですね。</p><p>とはいえ、論理解像度がどうなっているかを見てみないことには油断はできません。手元の各種ノートパソコンのデフォルト設定はこんな感じですね。まあ僕はまず最初に等倍にしてしまいますがね（老眼でないアピール）。MacBook Pro13/15はデフォルトは同じなの面白いですね。</p><div class="scroll"><table><thead><tr><th align="left">機種</th><th align="center">物理解像度</th><th align="center">デフォルトスケール</th><th align="center">推奨論理解像度</th></tr></thead><tbody><tr><td align="left">MacBook Pro 13(2020), MacBook Air(2020 Early)</td><td align="center">2560x1600</td><td align="center">177%</td><td align="center">1440x900</td></tr><tr><td align="left">MacBook Pro 15(2014)</td><td align="center">2880x1800</td><td align="center">200%</td><td align="center">1440x900</td></tr><tr><td align="left">ASUS Zephyrus G14(2020)</td><td align="center">2560x1440</td><td align="center">200%</td><td align="center">1280x720</td></tr><tr><td align="left">HP Chromebook x360 14</td><td align="center">1920x1080</td><td align="center">125%</td><td align="center">1536x864</td></tr><tr><td align="left">HP Elitebook 830</td><td align="center">1920x1080</td><td align="center">150%</td><td align="center">1280x720</td></tr><tr><td align="left">外部モニタ(4K, 24インチ)</td><td align="center">3840x2160</td><td align="center">200%</td><td align="center">1920x1080</td></tr><tr><td align="left">テレビ(4K, 55インチ)</td><td align="center">3840x2160</td><td align="center">200%</td><td align="center">1920x1080</td></tr></tbody></table></div><p>論理解像度は設定のディスプレイの中にいます。下の例はElitebookですが、しっかりと「推奨」って書いてありますね。どうやら、プラグアンドプレイで取得したディスプレイの画面サイズと解像度から計算されているようです。</p><img src="/images/20211207a/image.png" alt="image.png" width="696" height="340" loading="lazy"><p>macはスケーリングの割合は出てこないのですが、ディスプレイの設定で擬似解像度として表示されていますので計算可能です。</p><img src="/images/20211207a/スクリーンショット_2021-12-03_19.11.32.png" alt="スクリーンショット_2021-12-03_19.11.32.png" width="1200" height="880" loading="lazy"><p>だいたいOSが違っても、実解像度が変わっても論理解像度はそれほど差がないことが分かります（テレビ以外）。スケーリングの話は、アップル以外のカタログスペックには載ってないのですが、画面を作る時の基準はこれぐらいにしておくと無難であることが分かります。視力の都合で大きくする方は、まあ自己責任というか、その分大きなモニターを導入してくださいね、という話にできるかと思います。テレビは遠くから見るということで荒めになっているのですかね。</p><p>お客さんと話をするときは最低スペックは論理解像度で1280x720、スケーリングは推奨値、という情報も添えて話ができればいいかと思います。もちろん、デスクトップや外付けディスプレイで、論理解像度がFullHDという環境もあると思います。その場合はもちろん、それに合わせます。論理解像度で話ができなければ、現時点でノートパソコンの市販のPCがほぼFullHDなので、物理解像度でFullHDで話をしてしまってもいいかと思います（ただし、スケーリングは推奨値ということはry）。</p><p>開発する側としては、ターゲットをきちんと論理解像度で押さえておき、開発時の検証を行う必要があります。</p><h1 id="OSの最低解像度"><a href="#OSの最低解像度" class="headerlink" title="OSの最低解像度"></a>OSの最低解像度</h1><p>参考までに、OSの最低解像度も調べておきました。</p><p><a href="https://www.microsoft.com/ja-jp/windows/windows-10-specifications">Windows 10</a>は800x600となっています。スケーリング情報はないですが、最低限なのでスケーリング100%かと思います。とはいえ、この解像度だとタスクバーの分を引くとかなり狭いです。Windows 11は横は決まってませんが、<a href="https://www.microsoft.com/en-us/windows/windows-11-specifications">縦は720p</a>です。まあ1280x720を想定すればいいかと思います。安いのはたいてい16:9でしょうし。</p><p>macはRetina対応してないMacBook Air 11(Mid 2012)が<a href="https://endoflife.date/macos">現在サポートされているmacOS 10.15</a>がサポートする中で最低解像度の機種ですので、最低でも1366×768ですかね。問題はなさそうですね。現行機種では13インチMacBook Pro/Airで1440x900です。</p><h1 id="スマートフォンの話"><a href="#スマートフォンの話" class="headerlink" title="スマートフォンの話"></a>スマートフォンの話</h1><h2 id="解像度"><a href="#解像度" class="headerlink" title="解像度"></a>解像度</h2><p>スマートフォンはかなり昔からスケーリング解像度を使っていました。iPhoneの初期は320x480で、iPhone最初期のAndroidとかも480x854で実質320x569でスケーリング150%な機種が多かった記憶があります。</p><p>解像度はそれからFull HDになったり、数倍の解像度になっていますが、4インチ強で320x480ぐらいという論理解像度のサイズ感は変わっていません。5-6インチに大きくなったのでその分大きくなった感じです。</p><div class="scroll"><table><thead><tr><th align="left">機種</th><th align="center">論理解像度</th></tr></thead><tbody><tr><td align="left">iPod touch 7th</td><td align="center">320x568</td></tr><tr><td align="left">iPhone SE 2nd</td><td align="center">375x667</td></tr><tr><td align="left">iPhone 13 mini</td><td align="center">375x812</td></tr><tr><td align="left">iPhone 13 (Pro)</td><td align="center">390x844</td></tr><tr><td align="left">iPhone 13 (Pro) Max</td><td align="center">428x926</td></tr><tr><td align="left">Pixel 4a/5</td><td align="center">393x851</td></tr><tr><td align="left">Pixel 4 XL</td><td align="center">412x869</td></tr><tr><td align="left">AQUOS sense 3 basic</td><td align="center">360x720</td></tr></tbody></table></div><p>AQUOS sense 3 basicは国産＆お手頃で業務機としてよく使われてそう＆チームで検証機で持っていたので計測値を入れています。</p><p>企業のシステムの場合は社用端末がある程度絞られるので、それらの端末を元に絞るのは可能でしょう。B2CやB2Bの場合には端末が絞れなくなりますので、ある程度想定が必要となります。</p><p>とりあえず最大のサイズはiPhone 13 Maxを想定しておけば良い、ということで問題はないでしょう。下限はスマートフォンであれば横はAQUOSの360、縦はiPhone SE 2ndの667にしておけば多くの場合は問題ないでしょう。ユニクロの定員さんとかファミレスとかでiPod touchを使っているのを見かけたことがありますが、iPod touchが要件として入ったら、これに合わせて下限を下げる、とかでいいかと思います。iPod touch、アップデートして欲しいですが・・・</p><p>ただし、ちょっと前のAndroidは、3ボタンナビゲーション（戻る、ホームなど）が常に最下部に表示されており、少し縦が削られるケースがありますので、要注意です。とはいっても、Android 10以降はもうなくなったと思うので今後の新規開発では考えなくてもいいかもしれません。</p><p><a href="http://k-tai.sharp.co.jp/appli/useful/navigationbar.html">http://k-tai.sharp.co.jp/appli/useful/navigationbar.html</a></p><p>参考までに、だいたいのCSSのメディアクエリーはスマートフォンは320-480の幅という想定になっていますね。</p><h2 id="回転"><a href="#回転" class="headerlink" title="回転"></a>回転</h2><p>スマートフォンには端末の傾きによって縦と横がローテーションする機能があります。Flutterでは<a href="https://stackoverflow.com/questions/50322054/flutter-how-to-set-and-lock-screen-orientation-on-demand">回転させないようにロック</a>できますし、ネイティブアプリなら要件として縦画面か横画面か決めておけば問題ないでしょう。</p><p>ブラウザの場合は回転を通知するAPIはありますが、向きを固定することはできません。開発コストを押させるなら、縦持ちのみサポートする（横は画面が崩れても対応しない）という要件は入れておく必要があるでしょう。</p><h1 id="大は小を兼ねない"><a href="#大は小を兼ねない" class="headerlink" title="大は小を兼ねない"></a>大は小を兼ねない</h1><p>当然のことですが、1280x720向けに画面デザインをしてしまうと、よっぽどのことがなければ1920x1080で表示しても問題はなく表示をできますが、メニューが一部に寄ってしまって空白が大きくなったりバランスが悪くなります。</p><p>かといって、大きいサイズに合わせて最適化しようとすると、小さい解像度で使いにくくなったりしますので、必ず決まった解像度で議論をした方がブレがでなくていいかと思います。</p><p>リアクティブなデザインを作る（≒いろんな解像度の仕様検討やテストを増やす）のも手間暇かかる話なので、バランスをとる必要があるでしょう。</p><p>特定の解像度をターゲットにするにしても、より大きい解像度でも検証して問題がおきないか、ぐらいの検証はしてもいいでしょう。</p><h1 id="フォントサイズ"><a href="#フォントサイズ" class="headerlink" title="フォントサイズ"></a>フォントサイズ</h1><p>以前のデスクトップOS設定だと、Windowsでもなんでも細かくフォントのポイント数などが変更できたと思いますが、現在ではスケーリングを主に使わせたいように見えます。個別のフォント設定はありません。macOSもスケーリングとブラウザのズーム機能を<a href="https://support.apple.com/ja-jp/guide/mac-help/mchld786f2cd/mac">案内</a>しています。なので、スケーリングのことをきちんと考慮しておけば大丈夫でしょう。</p><p>Windowsもデスクトップのフォントサイズのみをアピアランスの一環として変更する機能はありませんが、アクセシビリティ機能の中に文字サイズだけを大きくするオプションがあります。こちらを使われてしまうとレイアウトのバランスが崩れてしまいますので、特記事項がなければ標準サイズ（拡大なし）が良いと思われます。</p><p>スマートフォンにはiOSもAndroidもフォントサイズがあります。こちらもとりあえずデフォルトサイズで、という合意をとっておくと良いでしょう。</p><p>年配の方が多いなどで文字サイズを大きくしたい、という要件がある場合は、OS設定の自由度を許可すると検証項目が増えるのでアプリケーション側で単一の大きい文字で、とした方が開発工数は減ると思いますが、</p><h1 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h1><ul><li>物理解像度があてにならない時代</li><li>パソコン向けのウェブであればスケーリングは推奨でという条件を入れる<ul><li>デスクトップ向けとか外部ディスプレイ前提とか条件があるのであれば、その事情に合わせる</li><li>そうでなくても、論理解像度1280x720ぐらいを目安に実装すれば、ノートパソコンでもなんでも問題ないと思う</li><li>Windowsの最低サポート物理解像度が800x600だからといってそれを採用しない(常用されるHD, FullHDとの違いが大きくてかなりきつい）</li><li>Windowsにはアクセシビリティ機能でフォントサイズがあるが、意志がなければ標準サイズ、という要件を入れておく。</li></ul></li><li>スマートフォンも今どきは安い端末もFullHD+になってきているが、論理的な解像度はまた別<ul><li>利用するデバイスが特定できるなら、それに合わせて要件を決める</li><li>特に指定がなければ360x667〜428x926あたりで仕様化すれば良さそう。</li><li>フォントサイズ、画面の回転の要件もきちんと合意しておく</li></ul></li><li>大は小を兼ねないので、1366x768以上、みたいな書き方はせずに、想定解像度は1つに定めて、そこに最適化するといった決定をした方がデザインやテストのコストは下がるが、もちろん、それ以上の解像度のときに操作不能になったり情報が隠れたりしないように最低限の動作保証はする、という感じにするのがおすすめ</li></ul><h1 id="参考-レンダリング解像度"><a href="#参考-レンダリング解像度" class="headerlink" title="(参考)レンダリング解像度"></a>(参考)レンダリング解像度</h1><p>ゲームの場合はピクセルごとに複雑な計算をします。ピクセルごとに距離や当たっている光エネルギーを計算して物理ベースレンダリング、とかが今時ですので、ピクセルあたりの計算量が増えます。ゲームの場合は、パフォーマンスのために内部解像度（レンダリング解像度）を下げて、最後にスケーリングで表示解像度を物理ディスプレイ解像度に合わせます。これも単にスケールするのではなくて、最近は各社<a href="https://www.4gamer.net/games/022/G002210/20211115083/">AIを使ったスケーリング</a>が盛んで、超解像度技術によってスケールするので、内部解像度が低いからといって最初から解像度の低いモニタを使うのよりも画面がきれいになります。</p><p>なお、レンダリング解像度が別に設定されているのは少し前のiPhoneもそうですね。これはおそらく、iPhone 6 Plusあたりは414x736を3倍の1242x2208でレンダリングしてから画面に合わせて縮小して1080x1920のディスプレイに表示しています。</p><ul><li>物理的な解像度は人間の目との関係で決める（Retina: 網膜というぐらいですし）</li><li>ただ、物理的な解像度がソフトウェア的には中途半端なので計算しにくい</li><li>ソフトウェア的に都合が良い解像度でレンダリングしてからスケーリングして表示しちゃえ</li></ul><p>ということかな、と思います。Appleの中の人ではないので想像ですが。ゲームと違って、内部解像度が高めになっています。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Programming/">Programming</category>
      
      
      <category domain="https://future-architect.github.io/tags/%E8%A6%81%E4%BB%B6%E5%AE%9A%E7%BE%A9/">要件定義</category>
      
      <category domain="https://future-architect.github.io/tags/%E7%94%BB%E9%9D%A2/">画面</category>
      
      
      <comments>https://future-architect.github.io/articles/20211207a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Redmine_single_mailプラグインを開発しました！</title>
      <link>https://future-architect.github.io/articles/20211203a/</link>
      <guid>https://future-architect.github.io/articles/20211203a/</guid>
      <pubDate>Thu, 02 Dec 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;目次&quot;&gt;&lt;a href=&quot;#目次&quot; class=&quot;headerlink&quot; title=&quot;目次&quot;&gt;&lt;/a&gt;目次&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li><a href="#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB">はじめに</a></li><li><a href="#%E4%B8%BB%E3%81%AA%E4%BB%95%E6%A7%98">主な仕様</a></li><li><a href="#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%A8%E8%A8%AD%E5%AE%9A">インストールと設定</a></li><li><a href="#%E5%AE%9F%E8%A3%85%E3%81%AE%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88">実装のポイント</a></li><li><a href="#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB">おわりに</a></li></ul><h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>こんにちは、TIGコアテクノロジーユニットの高橋・小松です。</p><p>最近はRedmine3系から4系へのバージョンアップ検証を進めています。<br>その中でRedmine4系からメール送信仕様が変わっていることが判明しました。</p><div class="scroll"><table><thead><tr><th>バージョン</th><th>メール送信仕様</th></tr></thead><tbody><tr><td>Redmine3系</td><td>チケット作成/更新時に<strong>全ての関係者を宛先にした単一メールを送信</strong></td></tr><tr><td>Redmine4系</td><td>チケット作成/更新時に<strong>全ての関係者「ごと」にそれぞれメールを送信</strong></td></tr></tbody></table></div><p>4系の仕様はセキュリティに配慮してのことかと考えられますが弊社環境では以下のような問題が懸念されます。</p><ul><li>特定アカウントのメールアドレスにメーリングリストを設定することでメール数を減らしている場合、メーリングリストと個人宛のメールを2重に受け取ることになってしまう</li><li>メールが今までよりも多く送信されることになりメールサーバへの負荷が増大する</li><li><a href="https://support.google.com/a/topic/28609?hl=ja&ref_topic=9202">Gmailの送受信上限</a>に達しやすくなる</li></ul><p>そこで3系と同等のメール送信方式となるような<a href="https://github.com/future-architect/redmine_single_mail">Redmine_single_mailプラグイン</a>を開発しましたので紹介させていただきます。</p><p><a href="https://github.com/future-architect/redmine_single_mail">https://github.com/future-architect/redmine_single_mail</a></p><p>なお、以下のチケットでも話し合いが行われており参考にさせていただきました。<br><a href="https://redmine.tokyo/issues/1083">https://redmine.tokyo/issues/1083</a></p><h2 id="主な仕様"><a href="#主な仕様" class="headerlink" title="主な仕様"></a>主な仕様</h2><p>メールサーバへの負荷が懸念されることからユーザごとの設定ではなくRedmine全体で宛先をまとめて設定した単一メールが送信されるようにしました。</p><p>チケットの作成/更新時は3系同様ウォッチャーにもccでメールを送信するようにしています。</p><h2 id="インストールと設定"><a href="#インストールと設定" class="headerlink" title="インストールと設定"></a>インストールと設定</h2><p>インストール方法については特殊な部分はありませんのでプラグインのReadmeを参照ください。</p><p>プラグインのインストール後に設定画面で以下のようにチェックを入れることで設定できます。</p><img src="/images/20211203a/インストール設定画面.png" alt="インストール設定画面.png" width="633" height="288" loading="lazy"><h2 id="実装のポイント"><a href="#実装のポイント" class="headerlink" title="実装のポイント"></a>実装のポイント</h2><p>Redmine4系のメール通知送信処理では、クラスメソッドdeliver_XXX(機能)_YYY(操作)とインスタンスメソッドXXX(機能)_YYY(操作)のセットでメール通知を行っています。</p><p>例えば、チケット作成のメール通知処理は、クラスメソッドdeliver_issue_addとインスタンスメソッドissue_addで構成されています。</p><p>クラスメソッドdeliver_issue_addは、メール通知対象ユーザの分だけループする役割を担当しています。そしてインスタンスメソッドissue_addは、実際のメール作成とメール送信の役割を担当しています。</p><figure class="highlight php"><figcaption><span>Redmineソースからの抜粋</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Notifies users about a new issue.</span></span><br><span class="line">def <span class="built_in">self</span>.deliver_issue_add(issue)</span><br><span class="line">    users = issue.notified_users | issue.notified_watchers</span><br><span class="line">    users.each <span class="keyword">do</span> |user|</span><br><span class="line">        issue_add(user, issue).deliver_later</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"><span class="comment"># Builds a mail for notifying user about a new issue</span></span><br><span class="line">def issue_add(user, issue)</span><br><span class="line">    redmine_headers <span class="string">&#x27;Project&#x27;</span> =&gt; issue.project.identifier,</span><br><span class="line">                    <span class="string">&#x27;Issue-Tracker&#x27;</span> =&gt; issue.tracker.name,</span><br><span class="line">                    <span class="string">&#x27;Issue-Id&#x27;</span> =&gt; issue.id,</span><br><span class="line">                    <span class="string">&#x27;Issue-Author&#x27;</span> =&gt; issue.author.login</span><br><span class="line">    redmine_headers <span class="string">&#x27;Issue-Assignee&#x27;</span> =&gt; issue.assigned_to.login <span class="keyword">if</span> issue.assigned_to</span><br><span class="line">    message_id issue</span><br><span class="line">    references issue</span><br><span class="line">    @author = issue.author</span><br><span class="line">    @issue = issue</span><br><span class="line">    @user = user</span><br><span class="line">    @issue_url = url_for(:controller =&gt; <span class="string">&#x27;issues&#x27;</span>, :action =&gt; <span class="string">&#x27;show&#x27;</span>, :id =&gt; issue)</span><br><span class="line">    subject = <span class="string">&quot;[#&#123;issue.project.name&#125; - #&#123;issue.tracker.name&#125; ##&#123;issue.id&#125;]&quot;</span></span><br><span class="line">    subject += <span class="string">&quot; (#&#123;issue.status.name&#125;)&quot;</span> <span class="keyword">if</span> Setting.show_status_changes_in_mail_subject?</span><br><span class="line">    subject += <span class="string">&quot; #&#123;issue.subject&#125;&quot;</span></span><br><span class="line">    mail :to =&gt; user,</span><br><span class="line">    :subject =&gt; subject</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>一方Redmine_single_mailプラグインでは、クラスメソッドdeliver_issue_addで通知対象ユーザをループせずに、直接メール送信メソッドissue_addに処理させます。<br>そしてインスタンスメソッドissue_addで、toの関連ユーザとccのウォッチャーユーザをそれぞれ設定し、単一メールで送信を行います。</p><figure class="highlight php"><figcaption><span>Redmine_single_mailプラグインソースの抜粋</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Notifies users about a new issue.</span></span><br><span class="line">def deliver_issue_add(issue)</span><br><span class="line">    <span class="keyword">if</span> !!Setting.plugin_redmine_single_mail[:single_mail]</span><br><span class="line">        issue_add(User.current, issue).deliver_later</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        super(issue)</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"><span class="comment"># Builds a mail for notifying user about a new issue</span></span><br><span class="line">def issue_add(user, issue)</span><br><span class="line">    msg = super(user, issue)</span><br><span class="line">    <span class="keyword">if</span> !!Setting.plugin_redmine_single_mail[:single_mail]</span><br><span class="line">        to_users = issue.notified_users</span><br><span class="line">        cc_users = issue.notified_watchers - issue.notified_users</span><br><span class="line">        mail :to =&gt; to_users, :cc =&gt; cc_users, :subject =&gt; msg.subject</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        msg</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>例えばチケットの更新、ニュースの追加、Wikiページの追加等の操作も上記であげたチケット作成と同様の実装で対応できます。</p><h2 id="おわりに"><a href="#おわりに" class="headerlink" title="おわりに"></a>おわりに</h2><p>Redmineのバージョンアップによるメール送信仕様変更は日本の企業ユースでは中々許容しにくいものに感じました。</p><p>もし似たようなお悩みを抱えている方がいらっしゃいましたら<a href="https://github.com/future-architect/redmine_single_mail">Github</a>からダウンロード可能ですのでぜひお試しください。Pull Requestもお待ちしております。</p><p>今回開発したプラグインがどなたかのお役に立てば幸いです。</p><hr><p><strong>TIGコアテクノロジーユニット</strong></p><p>TIGコアテクノロジーユニットでは、現在チームメンバーを募集しています。私たちと一緒にテクノロジーで設計、開発、テストの高品質・高生産性を実現する仕組みづくりをしませんか？</p><p>興味がある方はお気軽に技術ブログTwitterや会社採用HPへ、連絡をお待ちしております。<br><a href="https://www.future.co.jp/recruit/">https://www.future.co.jp/recruit/</a></p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Infrastructure/">Infrastructure</category>
      
      
      <category domain="https://future-architect.github.io/tags/Redmine/">Redmine</category>
      
      <category domain="https://future-architect.github.io/tags/OSS/">OSS</category>
      
      <category domain="https://future-architect.github.io/tags/%E3%82%B3%E3%82%A2%E3%83%86%E3%82%AF/">コアテク</category>
      
      
      <comments>https://future-architect.github.io/articles/20211203a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>AB Open社と提携してRISC-V PCを開発しました</title>
      <link>https://future-architect.github.io/articles/20211202a/</link>
      <guid>https://future-architect.github.io/articles/20211202a/</guid>
      <pubDate>Wed, 01 Dec 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;&lt;p&gt;この度、フューチャーはAB</description>
          
        
      
      
      
      <content:encoded><![CDATA[<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>この度、フューチャーはAB Open社と協力し、無料のオープンソースであるRISC-Vアーキテクチャを活用した独自PCを開発しましたのでご報告します。</p><p>ITコンサルティング企業のフューチャーがなぜRISC-VベースのPC開発に携わっているのか疑問をお持ちの方も多いかと思いますので、経緯にも触れます。</p><h2 id="RISC-Vとは"><a href="#RISC-Vとは" class="headerlink" title="RISC-Vとは"></a>RISC-Vとは</h2><p>RISC-VはCPU命令セットアーキテクチャ（Instruction Set Architecture: ISA）の一種で、日本語では「リスクファイブ」と呼ぶこと多いです。Intelのx86/x64系やArm系と異なるのは、使用料がかからないOSSライセンスで提供されていることでしょう。近年RISC-V準拠CPUコアや開発環境などが活発に開発され広がりを見せており、今後普及が進むと予想されているアーキテクチャの一つです。</p><ul><li>参考: <a href="https://ja.wikipedia.org/wiki/RISC-V">RISC-V - Wikipedia</a></li></ul><h2 id="開発した-RISC-V-パーソナルコンピュータについて"><a href="#開発した-RISC-V-パーソナルコンピュータについて" class="headerlink" title="開発した RISC-V パーソナルコンピュータについて"></a>開発した RISC-V パーソナルコンピュータについて</h2><img src="/images/20211202a/future_rvpc_promo_1.jpg" alt="future_rvpc_promo_1.jpg" width="1200" height="802" loading="lazy"><img src="/images/20211202a/future_rvpc_promo_4.jpg" alt="future_rvpc_promo_4.jpg" width="1200" height="802" loading="lazy"><img src="/images/20211202a/future_rvpc_promo_3.jpg" alt="future_rvpc_promo_3.jpg" width="1200" height="802" loading="lazy"><p>開発したPCは、RISC-VのパイオニアであるSiFive社のHiFive Unmatchedを使用しています。CPUはSiFive U740 SoC、メモリは16GBという構成です。最初の写真を見てわかるように、フロントパネルを持っていることが大きな特徴で、ど真ん中に「フューチャー」のロゴが印字されていています！</p><ul><li><a href="https://www.sifive.com/boards/hifive-unmatched">HiFive Unmatched</a></li><li>SiFive U740 SoC（64bit 4コア+1コア）</li><li>DDR4 16GB</li><li>NVIDIA GeForceGT710</li><li>NVMe 1TB</li><li>GNU/Linuxベース</li><li>Wi-Fi接続機能</li><li>カスタム設計されたOLEDディスプレイ</li></ul><p>フロントパネルには、Pythonアプリケーションを介しての表示が可能です。CPUとメモリの使用状況、コンポーネントの温度などを含むシステム統計が一目でわかるので、PCの状態を常に監視できます。</p><img src="/images/20211202a/future_rvpc_promo_5.jpg" alt="future_rvpc_promo_5.jpg" width="1200" height="802" loading="lazy"><p>このOLEDディスプレイのハードウェア設計とPythonを含むコードはGitHubでも公開しています。</p><ul><li><a href="https://github.com/abopen/hifive-unmatched-front-panel">https://github.com/abopen/hifive-unmatched-front-panel</a></li></ul><p>今回の共同開発で、RISC-Vアーキテクチャをゲームからハイエンドな組み込みシステムまで多様なユースケースへの導入の道筋を作るキッカケにできたと考えています。</p><h2 id="AB-Open社さんとの出会い"><a href="#AB-Open社さんとの出会い" class="headerlink" title="AB Open社さんとの出会い"></a>AB Open社さんとの出会い</h2><p><a href="https://abopen.com/">AB Open</a>さんは英国ハリファックスを拠点とする、オープンハードウェアおよび技術コミュニティのコンサルティングを得意とする企業です。</p><p>出会いのキッカケですが、完全なRISC-V PCを世界で最初に組み立てた企業の1つとして有名だったAB Open社に、以前からRISC-Vに高い関心をもっていた当社副社長CSOの石橋さんが声をかけたことから始まり、意気投合してプロジェクトが始まりました。それぞれのモノづくりへの強い思いとこだわりを示しながら開発が進められたそうです。</p><p>AB Open社のマネージングディレクターであるAndrew Backさんは「RISC-Vアーキテクチャへの関心は日々高まっているため、このプロジェクトはRISC-Vのポテンシャルを示すのに役に立つと思います。最新テクノロジーを採用するフューチャーと一緒にできたことを光栄に思います」と話しており、良い協力関係が築けたかなと感じています。</p><h2 id="なぜ開発にしようと考えたか"><a href="#なぜ開発にしようと考えたか" class="headerlink" title="なぜ開発にしようと考えたか"></a>なぜ開発にしようと考えたか</h2><p>フューチャーには、「ないものはつくる」というカルチャーがあります。ソフトウェアだけではなく、必要ならばハードウェアも開発するという踏み込んだITコンサルティングを、1989年の創業から一貫して行ってきました。</p><p>今回RISC-Vに着目したのは、数多くのアプリケーション領域において、RISC-Vアーキテクチャによりイノベーションのスピードが加速されるのではないかと考えたからです。こうした領域でも業界をリードすべく、最初のステップとして高い性能を持ったフロントパネル付きのPCを開発しました。プロダクトのコンセプト・仕様面は当社が中心となって設計しました。コロナ禍、部品の収集にはとても苦労しましたが、こうして形になり、非常に嬉しく思っています。</p><h2 id="さいごに"><a href="#さいごに" class="headerlink" title="さいごに"></a>さいごに</h2><p>フューチャーは、AIやロボット工学などの最新技術の知識と実行能力を強みにイノベーションを促進し、クライアントに新しい価値を創造することで社会に貢献することを目指しています。引き続きABOpen社と協力しRISC-Vを活用していこうと考えており、最終ゴールは、RISC-Vの国産マイクロプロセッサを目指しています！</p><p>また、RISC-Vサミットが2021年の12/6~12/8にサンフランシスコで開催されます。盛り上げていきましょう！<br><a href="https://events.linuxfoundation.org/riscv-summit/">https://events.linuxfoundation.org/riscv-summit/</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://abopen.com/news/future-corporation-partners-with-ab-open-for-unique-risc-v-pc-project/">https://abopen.com/news/future-corporation-partners-with-ab-open-for-unique-risc-v-pc-project/</a></p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/IoT/">IoT</category>
      
      
      <category domain="https://future-architect.github.io/tags/RISC-V/">RISC-V</category>
      
      <category domain="https://future-architect.github.io/tags/ISA/">ISA</category>
      
      <category domain="https://future-architect.github.io/tags/HW/">HW</category>
      
      
      <comments>https://future-architect.github.io/articles/20211202a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>巡回セールスマン問題(TSP)の基本的な解き方(ILS)</title>
      <link>https://future-architect.github.io/articles/20211201a/</link>
      <guid>https://future-architect.github.io/articles/20211201a/</guid>
      <pubDate>Tue, 30 Nov 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;img src=&quot;/images/20211201a/top.png&quot; alt=&quot;&quot; width=&quot;640&quot;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/20211201a/top.png" alt="" width="640" height="480"><p>SAIGアルバイトの後藤です。業務では、アルゴリズムの知識を用いた既存処理の高速化やスケジュールの自動作成による業務の効率化を行っています。</p><p>配送計画問題など、最適化問題に属する社会課題は、部分問題に巡回セールスマン問題(TSP: Travelling Salesman Problem)を含むことが少なくありません。したがってTSPの基本的なアプローチを知っていることは重要です。TSPは組合せ最適化の代表的な問題として古くから様々なアプローチが試みられており、本記事は専門家の方にとっては既知の内容だと思いますが改めて紹介します。この記事では、2/3-optの焼きなまし法(SA: Simulated Annealing)より良い解法として2/3-optの反復局所探索法(ILS: Iterated Local Search)を紹介します(競技プログラマへ: TSPは焼きなましより山登り + Kickが良いという話をします)。</p><p>TSPにおいて特に良いとされているILSには次の2つがあります[1]。</p><ul><li>Lin-Kernighan heuristic ILS</li><li>2/3-opt ILS</li></ul><p>本記事では、この内の2/3-opt ILSについて紹介します。</p><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li><a href="##%E5%B0%8E%E5%85%A5">導入</a><ul><li><a href="#%E5%B7%A1%E5%9B%9E%E3%82%BB%E3%83%BC%E3%83%AB%E3%82%B9%E3%83%9E%E3%83%B3%E5%95%8F%E9%A1%8C-TSP-Travelling-Salesman-Problem">巡回セールスマン問題(TSP: Travelling Salesman Problem)</a>)</li><li><a href="#TSP%E3%81%AE%E7%A8%AE%E9%A1%9E">TSPの種類</a></li><li><a href="#%E7%8F%BE%E5%AE%9F%E3%81%AE%E5%95%8F%E9%A1%8C">現実の問題</a></li><li><a href="#%E7%95%B0%E3%81%AA%E3%82%8B%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0%E3%81%AE%E7%B5%90%E6%9E%9C%E3%82%92%E6%AF%94%E8%BC%83">異なるアルゴリズムの結果を比較</a></li></ul></li><li><a href="#%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0">アルゴリズム</a><ul><li><a href="#2-3-opt">2/3-opt</a></li><li><a href="#%E5%B1%80%E6%89%80%E6%8E%A2%E7%B4%A2%E6%B3%95-LS-Local-Search">局所探索法(LS: Local Search)</a>)</li><li><a href="#%E5%8F%8D%E5%BE%A9%E5%B1%80%E6%89%80%E6%8E%A2%E7%B4%A2%E6%B3%95-ILS-Iterated-Local-Search">反復局所探索法(ILS: Iterated Local Search)</a>)</li><li><a href="#Double-Bridge">Double-Bridge</a></li><li><a href="#%E7%84%BC%E3%81%8D%E3%81%AA%E3%81%BE%E3%81%97%E6%B3%95-SA-Simulated-Annealing">焼きなまし法(SA: Simulated Annealing)</a>)</li><li><a href="#2-opt-ILS">2-opt ILS</a></li><li><a href="#2-opt%E3%81%AE%E5%AE%9F%E8%A3%85%E4%B8%8A%E3%81%AE%E5%B7%A5%E5%A4%AB">2-optの実装上の工夫</a></li><li><a href="#%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE%E5%B7%A5%E5%A4%AB">その他の工夫</a></li></ul></li><li><a href="#%E5%AE%9F%E9%A8%93%E6%96%B9%E6%B3%95">実験方法</a><ul><li><a href="#%E6%AF%94%E8%BC%83%E6%96%B9%E6%B3%95">比較方法</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E3%83%86%E3%82%B9%E3%83%88%E3%82%B1%E3%83%BC%E3%82%B9">使用したテストケース</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E8%A8%80%E8%AA%9E">使用した言語</a></li></ul></li><li><a href="#%E5%AE%9F%E9%A8%93%E7%B5%90%E6%9E%9C">実験結果</a></li><li><a href="#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB">さいごに</a></li></ul><h2 id="導入"><a href="#導入" class="headerlink" title="導入"></a>導入</h2><h3 id="巡回セールスマン問題-TSP-Travelling-Salesman-Problem"><a href="#巡回セールスマン問題-TSP-Travelling-Salesman-Problem" class="headerlink" title="巡回セールスマン問題(TSP: Travelling Salesman Problem)"></a>巡回セールスマン問題(TSP: Travelling Salesman Problem)</h3><p>TSPは次のような問題です。</p><blockquote><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="2.009ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 888 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></svg></mjx-container>個の頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="10.318ex" height="1.984ex" role="img" focusable="false" viewBox="0 -683 4560.7 877"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(944.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(1444.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(1889.3,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(3228,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3672.7,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></svg></mjx-container> がある。頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="16.938ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7486.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(789.7,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mtext" transform="translate(1201.7,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(1451.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1840.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2618.4,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(3674.2,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(4019.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4463.9,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(5153.7,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(6209.4,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(7097.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 間には辺 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.533ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2445.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(466,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(855,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1200,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1644.7,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(2056.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> が張られており、距離 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="3.717ex" height="2.211ex" role="img" focusable="false" viewBox="0 -683 1642.9 977.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></svg></mjx-container> が定められている。<br>このとき、巡回路(長さ <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="2.009ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 888 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></svg></mjx-container> の順列 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="1.138ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 503 636"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g></g></svg></mjx-container> を用いて <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="43.247ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 19115.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(466,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(855,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1794.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2239.2,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(3178.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3567.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4012.4,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(4478.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4867.4,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(5807,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(6251.7,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(7191.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7580.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(8024.9,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(9363.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(9808.2,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(10274.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(10663.2,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="TeXAtom" transform="translate(536,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1666,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12780.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(13225.5,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(536,-150) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="mo" transform="translate(14439.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(14828.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(15273.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(15739.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(16128.1,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(536,-150) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="mo" transform="translate(17342,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(17786.6,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(18726.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></svg></mjx-container> と表せるような辺集合)のうち、距離の総和が最も短いものを求めよ。</p></blockquote><p>巡回路は、頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> から出発して、他のすべての頂点をただ一度だけ通り頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> に戻ってくる経路と解釈することができます。図に表すと、次のようになります。</p><img src="/images/20211201a/TSP_example2.png" alt="図1: $N = 5$の場合" width="520" height="329" loading="lazy"><p>丸が各頂点です。矢印が巡回路を表しています。<br>頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> に戻ってこないようなバリエーションも存在しますが、同様のアプローチが有効です。</p><p>最も距離の短い解(巡回路)を<strong>愚直</strong>に求めようとすると組合せ爆発が起こり、頂点数が多くなると現実的な時間内で解を見つけることができません。そこで、なるべく総距離の短い解(近似解)を一定時間内に見つけることを考えます。このようなアルゴリズムをヒューリスティックアルゴリズムと言います。短時間でより良い解が見つかるアルゴリズムが良いヒューリスティックアルゴリズムと言えます。この記事では、TSPのヒューリスティックアルゴリズムとしてよく紹介されるアプローチを実際に用いて、検証・比較を行います。</p><h3 id="TSPの種類"><a href="#TSPの種類" class="headerlink" title="TSPの種類"></a>TSPの種類</h3><p>TSPは距離の制約によりいくつかの種類があります。基本的な制約は次の3つです。</p><ul><li>Metric: 三角不等式 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="34.924ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 15436.5 1044.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1920.6,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="msub" transform="translate(2976.4,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4918.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(5918.8,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(799,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mtext" transform="translate(7686.1,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(7936.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(8325.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(9102.9,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(10158.6,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(10503.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(10948.3,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(11198.3,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(11610.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(12055,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(12305,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(13103.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(14159.5,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(15047.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> が成り立つ。</li><li>Symmetric: 頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.781ex" height="1.52ex" role="img" focusable="false" viewBox="0 -661 345 672"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> から <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex" xmlns="http://www.w3.org/2000/svg" width="0.932ex" height="1.957ex" role="img" focusable="false" viewBox="0 -661 412 865"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></svg></mjx-container> への距離と、頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex" xmlns="http://www.w3.org/2000/svg" width="0.932ex" height="1.957ex" role="img" focusable="false" viewBox="0 -661 412 865"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></svg></mjx-container> から <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.781ex" height="1.52ex" role="img" focusable="false" viewBox="0 -661 345 672"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> への距離が等しい。すなわち、<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="25.235ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 11154 1044.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1920.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2976.4,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(690,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mtext" transform="translate(4619.3,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(4869.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(5258.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6036,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(7091.8,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(7436.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(7881.5,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(8131.5,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(8821.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(9877,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(10765,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> が成り立つ。</li><li>Euclidean: 頂点間の距離が2次元ユークリッド空間上の距離になっている。すなわち、<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.678ex" xmlns="http://www.w3.org/2000/svg" width="45.598ex" height="2.851ex" role="img" focusable="false" viewBox="0 -960.3 20154.2 1260"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1920.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msqrt" transform="translate(2976.4,0)"><g transform="translate(1020,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1510.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(2510.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="msup" transform="translate(3456.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(4504.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(5504.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5893.7,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(523,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(6932.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(7933.1,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(523,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="msup" transform="translate(8797.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(0,50.3)"><path data-c="221A" d="M263 249Q264 249 315 130T417 -108T470 -228L725 302Q981 837 982 839Q989 850 1001 850Q1008 850 1013 844T1020 832V826L741 243Q645 43 540 -176Q479 -303 469 -324T453 -348Q449 -350 436 -350L424 -349L315 -96Q206 156 205 156L171 130Q138 104 137 104L111 130L263 249Z"></path></g><rect width="9623" height="60" x="1020" y="840.3"></rect></g><g data-mml-node="mtext" transform="translate(13619.4,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(13869.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(14258.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(15036.2,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(16092,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(16437,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(16881.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(17131.6,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(17821.4,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(18877.2,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(19765.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>が成り立つ。ただし、<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="2.034ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 899 599.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container> は頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.781ex" height="1.52ex" role="img" focusable="false" viewBox="0 -661 345 672"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> の <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container> 座標、<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex" xmlns="http://www.w3.org/2000/svg" width="1.848ex" height="1.464ex" role="img" focusable="false" viewBox="0 -442 817 647"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(523,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container> は頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.781ex" height="1.52ex" role="img" focusable="false" viewBox="0 -661 345 672"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> の <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex" xmlns="http://www.w3.org/2000/svg" width="1.109ex" height="1.464ex" role="img" focusable="false" viewBox="0 -442 490 647"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 座標を表す。</li></ul><p>EuclideanならMetricかつSymmetricです。また、Symmetricでない場合をAsymmetricと言います。<br>この記事ではSymmetricが成り立つTSP、すなわちSymmetric TSPのみを考えます。なお、Asymmetric TSPは適切な変形によりSymmetric TSPに帰着することができます[2]。</p><h3 id="現実の問題"><a href="#現実の問題" class="headerlink" title="現実の問題"></a>現実の問題</h3><p>TSPは現実では、次のような問題として現れます。</p><ul><li>郵便物配達のルート最適化</li><li>作業スケジューリングの最適化</li></ul><p>図1が郵便物配達時のルートを表しているとすると、頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> が郵便局などの配達拠点、頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="7.543ex" height="1.971ex" role="img" focusable="false" viewBox="0 -677 3334 871"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(944.7,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(1444.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1889.3,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(2389.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2834,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g></g></g></svg></mjx-container> が配達先に該当します。頂点間の距離は移動にかかる時間などでも良く、その場合はなるべくすべての配達先を訪れてなるべく早く帰ってくるルートを探す問題になります。</p><p>作業スケジューリングの最適化は一見するとTSPには関係なさそうですが、次のような場合TSPと見なせます。</p><blockquote><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="2.009ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 888 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></svg></mjx-container> 個の作業 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="10.318ex" height="1.984ex" role="img" focusable="false" viewBox="0 -683 4560.7 877"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(944.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(1444.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(1889.3,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(3228,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3672.7,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></svg></mjx-container> がある。作業 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.781ex" height="1.52ex" role="img" focusable="false" viewBox="0 -661 345 672"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> を行った後に作業 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex" xmlns="http://www.w3.org/2000/svg" width="0.932ex" height="1.957ex" role="img" focusable="false" viewBox="0 -661 412 865"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></svg></mjx-container> を行うと、作業 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex" xmlns="http://www.w3.org/2000/svg" width="0.932ex" height="1.957ex" role="img" focusable="false" viewBox="0 -661 412 865"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></svg></mjx-container> の準備には, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="3.717ex" height="2.211ex" role="img" focusable="false" viewBox="0 -683 1642.9 977.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></svg></mjx-container> 分かかる。また、何も作業を行っていない初めの状態を作業 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.557ex" role="img" focusable="false" viewBox="0 -666 500 688"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container> とし、同じく <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="10.087ex" height="2.195ex" role="img" focusable="false" viewBox="0 -683 4458.4 970.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(778,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(1028,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1881.9,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(2326.5,0)"><path data-c="A0" d=""></path></g><g data-mml-node="msub" transform="translate(2576.5,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(623,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(873,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g></g></svg></mjx-container> が定まっている。<br>このとき、作業 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.557ex" role="img" focusable="false" viewBox="0 -666 500 688"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container> から始めて、すべての作業をただ一度だけ行い作業 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.557ex" role="img" focusable="false" viewBox="0 -666 500 688"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container> に戻ってくる順番のうち、最も準備時間が短いものを求めよ。</p></blockquote><p>イメージとしては、作業 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.557ex" role="img" focusable="false" viewBox="0 -666 500 688"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container> は作業前の片付いた状態で、その状態から作業 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.781ex" height="1.52ex" role="img" focusable="false" viewBox="0 -661 345 672"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> の準備にかかる時間が <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="4.258ex" height="2.195ex" role="img" focusable="false" viewBox="0 -683 1881.9 970.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(778,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(1028,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container> 分です。そこからすべての作業を終えて、また作業前の状態に片付けるための最適な順番を求めるのが、上記のスケジューリング問題になります。</p><h3 id="異なるアルゴリズムの結果を比較"><a href="#異なるアルゴリズムの結果を比較" class="headerlink" title="異なるアルゴリズムの結果を比較"></a>異なるアルゴリズムの結果を比較</h3><p>異なる3つのアルゴリズムで127頂点のTSPを解いたときの巡回路をビジュアライズしました。</p><img src="/images/20211201a/TSP_methods.png" alt="図2: 結果の比較" width="1793" height="506" loading="lazy"><p>左からNearest Neighbor(貪欲法)、2-opt SA、2-opt ILS(今回紹介する手法)です。それぞれの巡回路の総距離は135737, 1186034, 118282となっています。2-opt ILSの巡回路は最適解で、最も総距離が短い巡回路です。<br>Nearest Neighborは、頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> (またはランダムな頂点)からまだ訪れていない頂点のうち最も近いものから訪れることを繰り返す単純な手法ですが、最後の方に余った頂点に訪れなければいけないため、明らかに効率が悪くなっている経路があります。<br>2-opt SAと2-opt ILSの違いは分かりにくいですが、よく見ると中央付近のルートが異なります。</p><h2 id="アルゴリズム"><a href="#アルゴリズム" class="headerlink" title="アルゴリズム"></a>アルゴリズム</h2><h3 id="2-3-opt"><a href="#2-3-opt" class="headerlink" title="2/3-opt"></a>2/3-opt</h3><p>2-opt(3-opt)はある巡回路から2つ(3つ)の辺を削除して2つ(3つ)の辺を繋ぎ直すことを改善ができなくなるまで繰り返すアルゴリズムです。<br>2-optは次の図のようなイメージです。図では頂点番号を省略しています。</p><img src="/images/20211201a/2-opt_directed.png" alt="2-optのイメージ" width="1069" height="369" loading="lazy"><p>左の順回路から赤い2つの辺を削除して、その後に青い辺で辺が削除された頂点を繋ぎ直しています。これにより、巡回路が効率的になっています。このような変更をどの辺の組に対して行っても改善ができなくなるまで行うのが2-optです。改善できないような組に対しては変更を行いません。3-optの場合は、3つの辺を削除し3つの辺を繋ぎ直す組み合わせをすべて試し、最も距離が短くなるような繋ぎ方に繋ぎ直します。</p><p>一般に、<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.027ex" xmlns="http://www.w3.org/2000/svg" width="1.319ex" height="1.597ex" role="img" focusable="false" viewBox="0 -694 583 706"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g></g></g></svg></mjx-container> 個の辺を削除し <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.027ex" xmlns="http://www.w3.org/2000/svg" width="1.319ex" height="1.597ex" role="img" focusable="false" viewBox="0 -694 583 706"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g></g></g></svg></mjx-container> 個の辺を繋ぎ直して改善することを改善ができなくなるまで繰り返すアルゴリズムを<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.027ex" xmlns="http://www.w3.org/2000/svg" width="1.319ex" height="1.597ex" role="img" focusable="false" viewBox="0 -694 583 706"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g></g></g></svg></mjx-container>-optと言います。</p><h3 id="局所探索法-LS-Local-Search"><a href="#局所探索法-LS-Local-Search" class="headerlink" title="局所探索法(LS: Local Search)"></a>局所探索法(LS: Local Search)</h3><p>ILSを紹介するにあたり、まずLSを紹介します。</p><p>現在の解 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container> から、ある操作を行って得られる解の集合 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.346ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1921 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(571,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(960,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1532,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> を <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container> の近傍と言います。LSは、この近傍の中から <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container> よりも良い解、すなわち <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="30.95ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 13680 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(394,0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(838,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(1338,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1730,0)"></path></g></g><g data-mml-node="mo" transform="translate(2174,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(2563,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(605,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(3412.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4079.2,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5135,0)"><g data-mml-node="mi"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(394,0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(838,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(1338,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1730,0)"></path></g></g><g data-mml-node="mo" transform="translate(7309,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7698,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(8270,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mtext" transform="translate(8659,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(8909,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9298,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(605,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(10425.2,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(11370,0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(11941,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12330,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(12902,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13291,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> となるような <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.922ex" height="1.742ex" role="img" focusable="false" viewBox="0 -759 849.5 770"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(605,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g></g></svg></mjx-container> に遷移し続けて、遷移ができなくなるまで繰り返す手法です。2-optもLSの一種であり、近傍 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.346ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1921 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(571,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(960,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1532,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> は巡回路 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container> から2本の辺を繋ぎ直して得られる巡回路の集合です。<br>これ以上改善が行えないような解 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container>、すなわち <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="30.95ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 13680 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(394,0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(838,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(1338,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1730,0)"></path></g></g><g data-mml-node="mo" transform="translate(2174,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(2563,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(605,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(3412.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4079.2,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5135,0)"><g data-mml-node="mi"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(394,0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(838,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(1338,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1730,0)"></path></g></g><g data-mml-node="mo" transform="translate(7309,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7698,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(8270,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mtext" transform="translate(8659,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(8909,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9298,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(605,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(10425.2,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(11370,0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(11941,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12330,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(12902,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13291,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> となるような <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.922ex" height="1.742ex" role="img" focusable="false" viewBox="0 -759 849.5 770"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(605,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g></g></svg></mjx-container> が存在しないような <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container> を局所解と呼びます。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">local_search</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        updated = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> x2 <span class="keyword">in</span> sigma(x):  // xの近傍をすべて見る</span><br><span class="line">            <span class="keyword">if</span> score(x2) &lt; score(x):</span><br><span class="line">                x = x2</span><br><span class="line">                updated = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> updated:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure><h3 id="反復局所探索法-ILS-Iterated-Local-Search"><a href="#反復局所探索法-ILS-Iterated-Local-Search" class="headerlink" title="反復局所探索法(ILS: Iterated Local Search)"></a>反復局所探索法(ILS: Iterated Local Search)</h3><p>LSでは局所解に達したときに必ずそれが最適解であるという保証は通常ありません。そこで、LSで局所最適解に到達した場合にKickまたはPerturbationと呼ばれる遷移[3]により局所解を脱出し、再びLSを適用することにより別の局所解へと遷移することを期待する手法がILSです。そのためKickはLSでまた同じ局所解へと到達しにくい遷移である必要があります。しかし一方で、できるだけ変更の小さな遷移が良いとされています。現在の比較的良い解を壊しすぎてしまうと、ランダムに解を作成してLSを適用するのと変わらなくなってしまうためです。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iterated_local_search</span>(<span class="params">x</span>):</span></span><br><span class="line">    x_global = x</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_iterated):</span><br><span class="line">        x = x_global</span><br><span class="line">        x = kick(x)</span><br><span class="line">        x = local_search(x)</span><br><span class="line">        <span class="keyword">if</span> score(x) &lt; score(x_global):</span><br><span class="line">            x_global = x</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> x_global</span><br></pre></td></tr></table></figure><h4 id="Double-Bridge"><a href="#Double-Bridge" class="headerlink" title="Double-Bridge"></a>Double-Bridge</h4><p>TSPで近傍を2/3-optにする場合、KickはDouble-Bridgeという遷移が良いとされています[3]。<br>Double-Bridgeでは、次のように赤い辺を4つ削除し、青い辺で繋ぎ直します。</p><img src="/images/20211201a/double-bridge.png" alt="double-bridge" width="1210" height="545" loading="lazy"><p>一見、2-optを2回適用することで同じ遷移ができるような気がしますが、途中で巡回路を2つに分離してしまうため、2回では不可能です。また、辺を変える本数も4本と2/3-optにない遷移の中で最低の本数であるため、元の解からの変更は最小限です。そのため、2/3-optのKickとしてDouble-Bridgeは適しているとされています。(本来Double-Bridgeはこの記事では紹介しないLin-Kernighan heuristicの近傍に含まれないような最小の変化から来ています)[3]。</p><h3 id="焼きなまし法-SA-Simulated-Annealing"><a href="#焼きなまし法-SA-Simulated-Annealing" class="headerlink" title="焼きなまし法(SA: Simulated Annealing)"></a>焼きなまし法(SA: Simulated Annealing)</h3><p>SAは確率的に近傍から解 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="9.034ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 3993 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(605,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(1127.2,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(2072,0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(2643,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3032,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(3604,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> を選びます。<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="19.591ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 8659 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(394,0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(838,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(1338,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1730,0)"></path></g></g><g data-mml-node="mo" transform="translate(2174,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(2563,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(605,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(3412.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4079.2,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5135,0)"><g data-mml-node="mi"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(394,0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(838,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(1338,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1730,0)"></path></g></g><g data-mml-node="mo" transform="translate(7309,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7698,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(8270,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> である場合は <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.922ex" height="1.742ex" role="img" focusable="false" viewBox="0 -759 849.5 770"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(605,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g></g></svg></mjx-container> に遷移し、<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="19.591ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 8659 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(394,0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(838,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(1338,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1730,0)"></path></g></g><g data-mml-node="mo" transform="translate(2174,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(2563,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(605,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(3412.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4079.2,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5135,0)"><g data-mml-node="mi"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(394,0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(838,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(1338,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1730,0)"></path></g></g><g data-mml-node="mo" transform="translate(7309,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7698,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(8270,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>の場合はスコアの悪化具合と実行時間やループ回数に応じて確率的に遷移します。スコアが悪化するほど遷移する確率は低く、実行時間が長い/ループ回数が多いほど遷移する確率は低くなります。<br>記事にある2/3-opt SAは、近傍を2/3-optの近傍にしたものです。2-opt(3-opt)で削除する辺を2つ(3つ)ランダムで選び辺を繋ぎ直して遷移をします。</p><p>温度などSAの詳しいことについてはこの記事では説明しません。</p><p>SAの擬似コードです。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">simulated_annealing</span>(<span class="params">x</span>):</span></span><br><span class="line">    temp = start_temp  // 初期温度の設定</span><br><span class="line">    <span class="keyword">while</span> elapsed() &lt; time_limit:  // 一定の時間ループを回す</span><br><span class="line">        x2 = choose_from_sigma(x)  // 近傍からランダムで遷移先を選ぶ</span><br><span class="line">        diff = score(x2) - score(x)</span><br><span class="line">        <span class="keyword">if</span> diff &lt; <span class="number">0</span> <span class="keyword">or</span> prob(diff, temp):</span><br><span class="line">            x = x2</span><br><span class="line">        temp = update_temp(elapsed(), time_limit)  // 温度の更新</span><br></pre></td></tr></table></figure><h3 id="2-opt-ILS"><a href="#2-opt-ILS" class="headerlink" title="2-opt ILS"></a>2-opt ILS</h3><p>今回紹介する手法は、2-opt ILSです。LS部分を2-optにして、KickをDouble-Bridgeにします。<br>今回の手法ではランダムに選んだ4本の辺を使ってDouble-Bridgeを行います。この時、選ぶ4辺に制約や遷移後の解の総距離による遷移の制限はありません。完全にランダムで1度だけDouble-Bridgeを行ってから2-optによるLSを行うことを繰り返します。</p><p>擬似コードは次の通りです。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iterated_local_search</span>(<span class="params">x</span>):</span></span><br><span class="line">    x_global = x</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_iterated):</span><br><span class="line">        x = x_global</span><br><span class="line">        x = double_bridge(x)</span><br><span class="line">        x = two_opt(x)</span><br><span class="line">        <span class="keyword">if</span> score(x) &lt; score(x_global):</span><br><span class="line">            x_global = x</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> x_global</span><br></pre></td></tr></table></figure><h3 id="2-optの実装上の工夫"><a href="#2-optの実装上の工夫" class="headerlink" title="2-optの実装上の工夫"></a>2-optの実装上の工夫</h3><p>頂点が <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="2.009ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 888 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></svg></mjx-container> 個の場合、削除できる辺が <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="2.009ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 888 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></svg></mjx-container> 個ありそこから2つ選ぶので、2-optの近傍は全部で <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="7.126ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 3149.6 1392.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(2165,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2943,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(3443,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(1398,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="2909.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container> 個あります(同一視の仕方にもよります)。しかし、スコアが改善できる解 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="9.034ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 3993 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(605,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(1127.2,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(2072,0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(2643,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3032,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(3604,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> があるかどうかを調べるのに、実はすべての近傍を見る必要はありません。この工夫により、2-opt ILSの性能は飛躍的に良くなります。</p><p>今、巡回路中に <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="7.99ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3531.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(466,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(855,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1776.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2221.2,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(3142.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> および <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="7.99ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3531.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(466,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(855,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(1776.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2221.2,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(3142.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> があるとします(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.837ex" height="1.359ex" role="img" focusable="false" viewBox="0 -443 812 600.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container> は相異なります)。</p><img src="/images/20211201a/improve.png" alt="改善結果" width="1161" height="365" loading="lazy"><p>このとき、2-optで2つの辺 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="17.553ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7758.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(466,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(855,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1776.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2221.2,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(3142.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3531.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(3976.4,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(4226.4,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(4692.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5081.4,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(6003,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(6447.7,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(7369.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> を繋ぎ変えてスコアが良くなるには、次の条件を満たしている必要があります。<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="30.366ex" height="2.195ex" role="img" focusable="false" viewBox="0 -683 13421.8 970.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(2633.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(3633.3,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(6321.9,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="msub" transform="translate(7377.7,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(10010.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(11011,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></g></g></svg></mjx-container></p><p>この条件は次の条件を2つとも満たしている場合、成り立ちません。<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="13.926ex" height="2.195ex" role="img" focusable="false" viewBox="0 -683 6155.3 970.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(2688.6,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="msub" transform="translate(3744.4,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="13.926ex" height="2.195ex" role="img" focusable="false" viewBox="0 -683 6155.3 970.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(2688.6,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="msub" transform="translate(3744.4,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></g></g></svg></mjx-container></p><p>各不等式の和を取ると <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="30.366ex" height="2.195ex" role="img" focusable="false" viewBox="0 -683 13421.8 970.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(2633.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(3633.3,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(6321.9,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="msub" transform="translate(7377.7,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(10010.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(11011,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></g></g></svg></mjx-container> になるからです。</p><p>したがって、2-optで2つの辺 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="17.553ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7758.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(466,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(855,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1776.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2221.2,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(3142.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3531.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(3976.4,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(4226.4,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(4692.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5081.4,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(6003,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(6447.7,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(7369.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> を繋ぎ変えてスコアが良くなるには、次の条件のどちらかを満たしている必要があります(十分でない)。(<strong>条件1</strong>)<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="13.926ex" height="2.195ex" role="img" focusable="false" viewBox="0 -683 6155.3 970.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(2688.6,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="msub" transform="translate(3744.4,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="13.926ex" height="2.195ex" role="img" focusable="false" viewBox="0 -683 6155.3 970.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(2688.6,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="msub" transform="translate(3744.4,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(921.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1199.6,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></g></g></svg></mjx-container></p><p>以上から、2つの条件のどちらかを満たしている辺をすべて調べ上げれば、現在の巡回路から2-optで改善できるかどうかが分かります。<br>具体的には次の通りです。</p><p>今、辺 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="8.384ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3705.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(466,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(855,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1863.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2308.2,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(3316.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> を削除する1つ目の辺とします。この時、削除する2つ目の辺の候補として次の条件のうちどちらかを満たす <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="8.384ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3705.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(466,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(855,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(1863.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2308.2,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(3316.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> を調べれば十分です。</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="14.483ex" height="2.195ex" role="img" focusable="false" viewBox="0 -683 6401.3 970.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1008.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1286.6,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(2811.7,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="msub" transform="translate(3867.4,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1008.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1286.6,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="23.233ex" height="2.195ex" role="img" focusable="false" viewBox="0 -683 10268.8 970.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1008.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1286.6,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(2811.7,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="msub" transform="translate(3867.4,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(1008.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1286.6,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(6679.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(7734.9,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(1008.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1286.6,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></g></g></svg></mjx-container></p><p>1つ目の式は <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="17.283ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7639.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1310.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1755.2,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(2676.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3343.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(4399.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4788.3,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(5796.9,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(6241.5,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(7250.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> になる場合、2つ目の式は <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="17.283ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7639.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(1310.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1755.2,0)"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mn" transform="translate(518,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(2676.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3343.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(4399.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4788.3,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(5796.9,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(6241.5,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(7250.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> になる場合です。2つ目の式ではSymmetricであることを使いました。<br>つまり、<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 1008.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container> よりも <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 1008.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container> から近い頂点が <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.375ex" role="img" focusable="false" viewBox="0 -442 1008.6 607.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container> の候補に、<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 1008.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container> よりも <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 1008.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container> から近い頂点が <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 1008.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></svg></mjx-container> の候補になります。<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.375ex" role="img" focusable="false" viewBox="0 -442 1008.6 607.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container> か <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 1008.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></svg></mjx-container> のどちらかが決まればもう一方も決まることに注意してください。</p><p>これを巡回路中の全ての辺に対して行えば、条件1を満たす全ての辺の組を探索できます。</p><p>上の条件を満たす頂点を効率的に探すには、あらかじめ各頂点から近い順に他の頂点のリストを持っておけばよいです。これは、構築時に <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="12.26ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 5419.1 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1152,0)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mn" transform="translate(975.3,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(2697.5,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(3975.5,0)"><path data-c="2061" d=""></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4142.1,0)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="mo" transform="translate(5030.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> で処理することが可能です。</p><p>同様の工夫を3-optに対して行うことも可能です。</p><p>[4]のHow to Make 2-Opt and 3-Opt Run Quicklyに条件1のうち片方だけ見れば良いと書いていたので、片方だけ見る実装も実験に加えました。しかし、条件を片方だけ見れば良いというのは嘘で、例えば1つ目の条件だけを見ていると次のようなケースを見逃します(もし間違いであればご指摘お願いします)。</p><img src="/images/20211201a/counter-example.png" alt="反例" width="499" height="330" loading="lazy"><h3 id="その他の工夫"><a href="#その他の工夫" class="headerlink" title="その他の工夫"></a>その他の工夫</h3><p>その他にも、頂点 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.097ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 485 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></svg></mjx-container> から最も近い <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.179ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 521 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></svg></mjx-container> 点のみを探索する、辺を削除した頂点の近くの頂点のみを探索するなどの高速化方法がありますが[4]、今回は実装していません。</p><h2 id="実験方法"><a href="#実験方法" class="headerlink" title="実験方法"></a>実験方法</h2><h3 id="比較方法"><a href="#比較方法" class="headerlink" title="比較方法"></a>比較方法</h3><p>比較するアルゴリズムは次の通りです。実行時間と発見した解の総距離を比較します。</p><ul><li>Nearest Neighbor</li><li>2-opt LS (実装上の工夫なし)</li><li>3-opt LS (実装上の工夫なし)</li><li>2-opt SA</li><li>3-opt SA</li><li>2-opt ILS (実装上の工夫なし)</li><li>3-opt ILS (実装上の工夫なし)</li><li>Improved 2-opt ILS (実装上の工夫あり)</li><li>Improved 2-opt ILS one-side (実装上の工夫あり) (条件1のうち片方の条件のみを見る)</li></ul><p>LSは局所解に達するまで実行し局所解に達したときの時間を実行時間としています。<br>SA/ILSは10秒間実行した時の解を出力します。Kick + LSの実行が終わったタイミングで時間制限を過ぎていた場合、そこまでに発見した解を出力とします。したがって、実行時間が10秒を過ぎる場合があります。</p><h3 id="使用したテストケース"><a href="#使用したテストケース" class="headerlink" title="使用したテストケース"></a>使用したテストケース</h3><p><a href="http://comopt.ifi.uni-heidelberg.de/software/TSPLIB95/index.html">TSPLIB</a>の<a href="http://comopt.ifi.uni-heidelberg.de/software/TSPLIB95/tsp/">Symmetric TSPインスタンス</a>の中から、EDGE_WEIGHT_TYPEがEUC_2DかEXPLICITであり頂点数が5000以下のものをすべて選び実験を行いました。EDGE_WEIGHT_TYPEはグラフの辺の重みの指定の仕方です。EUC_2Dは各頂点の位置が2次元ユークリッド空間上の点として与えられ、頂点間の距離はユークリッド距離を整数に丸めたものです。EXPLICITは頂点間の距離が明示的に与えられます。EDGE_WEIGHT_TYPEは他にもありますが、今回の実験ではこの2つのみを使用しました。理由は、インスタンスを読み込むプログラムを作る時間的コストと使用できるインスタンスの個数の兼ね合いです。頂点数の制約は実行時間から来ています。特に、3-optは破滅的な時間がかかります。</p><h3 id="使用した言語"><a href="#使用した言語" class="headerlink" title="使用した言語"></a>使用した言語</h3><p>Javaを使って実験を行いました。</p><h3 id="備考"><a href="#備考" class="headerlink" title="備考"></a>備考</h3><p>巡回路は、頂点番号の動的配列として表現しました。この場合、2-optや3-optでは区間反転操作を行う必要が出てきますが、線形時間かけて愚直に行っています。<br>SAの温度管理には、頂点間の距離の平均を <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="1.873ex" height="2.262ex" role="img" focusable="false" viewBox="0 -1000 828 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(0,615)"><svg width="828" height="237" x="0" y="148" viewBox="207 148 828 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(2.484,1)"></path></svg></g></g></g></g></svg></mjx-container> とおき、初期温度を <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="1.873ex" height="2.262ex" role="img" focusable="false" viewBox="0 -1000 828 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(0,615)"><svg width="828" height="237" x="0" y="148" viewBox="207 148 828 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(2.484,1)"></path></svg></g></g></g></g></svg></mjx-container>、最終温度を <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.816ex" xmlns="http://www.w3.org/2000/svg" width="4.195ex" height="3.307ex" role="img" focusable="false" viewBox="0 -1101.1 1854.2 1461.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mover" transform="translate(634.4,394) scale(0.707)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(0,615)"><svg width="828" height="237" x="0" y="148" viewBox="207 148 828 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(2.484,1)"></path></svg></g></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1500,0)"></path></g><rect width="1614.2" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container> とする指数スケジューリングを用いています。</p><h2 id="実験結果"><a href="#実験結果" class="headerlink" title="実験結果"></a>実験結果</h2><p>最も良いスコアを太字にしています。最もスコアが良い手法が複数ある場合は、その中で計算時間が最も少ない手法のスコアと計算時間を太字にしています。また、optimumはそのインスタンスの最適解であり、見つかった解が最適解である場合はoptimumの列を太字にしています。<br>また、3-optなど実行が10秒以内に終わらなかったものは太字にする処理の対象外としています。機械的に実行時間が11000msより大きい場合は対象外としています。</p><div class="scroll"><table><thead><tr><th align="right"></th><th align="left">instance</th><th align="right">optimum</th><th align="right">Nearest Neighbor score</th><th align="right">2-opt score</th><th align="right">2-opt SA score</th><th align="right">2-opt ILS score</th><th align="right">3-opt score</th><th align="right">3-opt SA score</th><th align="right">3-opt ILS score</th><th align="right">Improved 2-opt ILS score</th><th align="right">Improved 2-opt ILS score one-side</th><th align="right">Nearest Neighbor time [ms]</th><th align="right">2-opt time [ms]</th><th align="right">2-opt SA time [ms]</th><th align="right">2-opt ILS time[ms]</th><th align="right">3-opt time [ms]</th><th align="right">3-opt SA time [ms]</th><th align="right">3-opt ILS time [ms]</th><th align="right">Imporved 2-opt ILS time [ms]</th><th align="right">Imporved 2-opt ILS time one-side [ms]</th></tr></thead><tbody><tr><td align="right">0</td><td align="left">a280</td><td align="right"><strong>2579</strong></td><td align="right">3157</td><td align="right">2724</td><td align="right">2603</td><td align="right">2579</td><td align="right">2680</td><td align="right">2695</td><td align="right">2626</td><td align="right">2579</td><td align="right"><strong>2579</strong></td><td align="right">6</td><td align="right">25</td><td align="right">10000</td><td align="right">5364</td><td align="right">1785</td><td align="right">10002</td><td align="right">10531</td><td align="right">278</td><td align="right"><strong>156</strong></td></tr><tr><td align="right">1</td><td align="left">bayg29</td><td align="right"><strong>1610</strong></td><td align="right">2005</td><td align="right">1685</td><td align="right">1610</td><td align="right">1610</td><td align="right">1610</td><td align="right">1610</td><td align="right">1610</td><td align="right"><strong>1610</strong></td><td align="right"><strong>1610</strong></td><td align="right">0</td><td align="right">0</td><td align="right">3365</td><td align="right">1</td><td align="right">1</td><td align="right">3445</td><td align="right">3</td><td align="right"><strong>0</strong></td><td align="right"><strong>0</strong></td></tr><tr><td align="right">2</td><td align="left">bays29</td><td align="right"><strong>2020</strong></td><td align="right">2258</td><td align="right">2078</td><td align="right">2020</td><td align="right"><strong>2020</strong></td><td align="right">2070</td><td align="right">2020</td><td align="right">2020</td><td align="right">2020</td><td align="right">2020</td><td align="right">0</td><td align="right">0</td><td align="right">2939</td><td align="right"><strong>0</strong></td><td align="right">1</td><td align="right">2902</td><td align="right">2</td><td align="right">2</td><td align="right">2</td></tr><tr><td align="right">3</td><td align="left">berlin52</td><td align="right"><strong>7542</strong></td><td align="right">8980</td><td align="right">8785</td><td align="right">7542</td><td align="right">7542</td><td align="right">7986</td><td align="right">7542</td><td align="right">7542</td><td align="right">7542</td><td align="right"><strong>7542</strong></td><td align="right">0</td><td align="right">1</td><td align="right">4335</td><td align="right">26</td><td align="right">5</td><td align="right">4674</td><td align="right">14</td><td align="right">11</td><td align="right"><strong>6</strong></td></tr><tr><td align="right">4</td><td align="left">bier127</td><td align="right"><strong>118282</strong></td><td align="right">135737</td><td align="right">123709</td><td align="right">118604</td><td align="right">118657</td><td align="right">121145</td><td align="right">120692</td><td align="right">118282</td><td align="right">118282</td><td align="right"><strong>118282</strong></td><td align="right">1</td><td align="right">14</td><td align="right">10000</td><td align="right">10000</td><td align="right">92</td><td align="right">10000</td><td align="right">8623</td><td align="right">506</td><td align="right"><strong>75</strong></td></tr><tr><td align="right">5</td><td align="left">brazil58</td><td align="right"><strong>25395</strong></td><td align="right">30774</td><td align="right">27390</td><td align="right">25395</td><td align="right">25395</td><td align="right">25622</td><td align="right">25395</td><td align="right">25395</td><td align="right">25395</td><td align="right"><strong>25395</strong></td><td align="right">0</td><td align="right">2</td><td align="right">5475</td><td align="right">19</td><td align="right">8</td><td align="right">5569</td><td align="right">12</td><td align="right">3</td><td align="right"><strong>2</strong></td></tr><tr><td align="right">6</td><td align="left">brg180</td><td align="right"><strong>1950</strong></td><td align="right">12360</td><td align="right">2030</td><td align="right">2660</td><td align="right">1950</td><td align="right">1950</td><td align="right">2610</td><td align="right">1950</td><td align="right">1950</td><td align="right"><strong>1950</strong></td><td align="right">0</td><td align="right">3</td><td align="right">10000</td><td align="right">220</td><td align="right">82</td><td align="right">10000</td><td align="right">560</td><td align="right">28</td><td align="right"><strong>24</strong></td></tr><tr><td align="right">7</td><td align="left">ch130</td><td align="right"><strong>6110</strong></td><td align="right">7579</td><td align="right">6502</td><td align="right">6136</td><td align="right">6128</td><td align="right">6248</td><td align="right">6167</td><td align="right">6124</td><td align="right"><strong>6110</strong></td><td align="right">6128</td><td align="right">1</td><td align="right">15</td><td align="right">10007</td><td align="right">10000</td><td align="right">94</td><td align="right">10001</td><td align="right">10012</td><td align="right">4584</td><td align="right">10000</td></tr><tr><td align="right">8</td><td align="left">ch150</td><td align="right"><strong>6528</strong></td><td align="right">8191</td><td align="right">6725</td><td align="right">6549</td><td align="right">6528</td><td align="right">6730</td><td align="right">6528</td><td align="right">6549</td><td align="right">6528</td><td align="right"><strong>6528</strong></td><td align="right">0</td><td align="right">56</td><td align="right">10000</td><td align="right">2067</td><td align="right">282</td><td align="right">7128</td><td align="right">10008</td><td align="right">5115</td><td align="right"><strong>724</strong></td></tr><tr><td align="right">9</td><td align="left">d1291</td><td align="right">50801</td><td align="right">60214</td><td align="right">56979</td><td align="right">55971</td><td align="right">53619</td><td align="right">53268</td><td align="right">102240</td><td align="right">52598</td><td align="right">51369</td><td align="right"><strong>51159</strong></td><td align="right">2</td><td align="right">14319</td><td align="right">10014</td><td align="right">10054</td><td align="right">634815</td><td align="right">10014</td><td align="right">189314</td><td align="right">10000</td><td align="right">10010</td></tr><tr><td align="right">10</td><td align="left">d1655</td><td align="right">62128</td><td align="right">74033</td><td align="right">69805</td><td align="right">68047</td><td align="right">67427</td><td align="right">65530</td><td align="right">136592</td><td align="right">65217</td><td align="right"><strong>63273</strong></td><td align="right">63715</td><td align="right">17</td><td align="right">30100</td><td align="right">10008</td><td align="right">10157</td><td align="right">875332</td><td align="right">10006</td><td align="right">933608</td><td align="right">10002</td><td align="right">10010</td></tr><tr><td align="right">11</td><td align="left">d198</td><td align="right">15780</td><td align="right">18240</td><td align="right">16153</td><td align="right">15842</td><td align="right">15805</td><td align="right">15939</td><td align="right">15833</td><td align="right">15788</td><td align="right"><strong>15783</strong></td><td align="right"><strong>15783</strong></td><td align="right">0</td><td align="right">40</td><td align="right">10000</td><td align="right">10000</td><td align="right">617</td><td align="right">10002</td><td align="right">10204</td><td align="right"><strong>10000</strong></td><td align="right"><strong>10000</strong></td></tr><tr><td align="right">12</td><td align="left">d2103</td><td align="right">80450</td><td align="right">86653</td><td align="right">85621</td><td align="right">93519</td><td align="right">87720</td><td align="right">83675</td><td align="right">224084</td><td align="right">85176</td><td align="right"><strong>82690</strong></td><td align="right">83063</td><td align="right">17</td><td align="right">7060</td><td align="right">10011</td><td align="right">10168</td><td align="right">2046086</td><td align="right">10006</td><td align="right">944512</td><td align="right">10000</td><td align="right">10007</td></tr><tr><td align="right">13</td><td align="left">d493</td><td align="right">35002</td><td align="right">41665</td><td align="right">37463</td><td align="right">35560</td><td align="right">35937</td><td align="right">36519</td><td align="right">37722</td><td align="right">36012</td><td align="right">35223</td><td align="right"><strong>35183</strong></td><td align="right">1</td><td align="right">1324</td><td align="right">10009</td><td align="right">10006</td><td align="right">9975</td><td align="right">10013</td><td align="right">14634</td><td align="right">10000</td><td align="right">10001</td></tr><tr><td align="right">14</td><td align="left">d657</td><td align="right">48912</td><td align="right">61627</td><td align="right">52206</td><td align="right">50029</td><td align="right">50982</td><td align="right">50349</td><td align="right">58431</td><td align="right">50721</td><td align="right">49234</td><td align="right"><strong>49186</strong></td><td align="right">0</td><td align="right">1529</td><td align="right">10009</td><td align="right">10015</td><td align="right">98604</td><td align="right">10014</td><td align="right">27628</td><td align="right">10000</td><td align="right">10002</td></tr><tr><td align="right">15</td><td align="left">dantzig42</td><td align="right"><strong>699</strong></td><td align="right">956</td><td align="right"><strong>699</strong></td><td align="right">699</td><td align="right"><strong>699</strong></td><td align="right"><strong>699</strong></td><td align="right">699</td><td align="right"><strong>699</strong></td><td align="right"><strong>699</strong></td><td align="right"><strong>699</strong></td><td align="right">0</td><td align="right"><strong>0</strong></td><td align="right">3550</td><td align="right"><strong>0</strong></td><td align="right"><strong>0</strong></td><td align="right">4055</td><td align="right"><strong>0</strong></td><td align="right"><strong>0</strong></td><td align="right"><strong>0</strong></td></tr><tr><td align="right">16</td><td align="left">eil101</td><td align="right"><strong>629</strong></td><td align="right">803</td><td align="right">690</td><td align="right">638</td><td align="right">630</td><td align="right">651</td><td align="right">638</td><td align="right">629</td><td align="right">629</td><td align="right"><strong>629</strong></td><td align="right">0</td><td align="right">8</td><td align="right">10003</td><td align="right">10000</td><td align="right">43</td><td align="right">10009</td><td align="right">5670</td><td align="right">35</td><td align="right"><strong>9</strong></td></tr><tr><td align="right">17</td><td align="left">eil51</td><td align="right"><strong>426</strong></td><td align="right">511</td><td align="right">444</td><td align="right">426</td><td align="right">426</td><td align="right">432</td><td align="right">426</td><td align="right">426</td><td align="right"><strong>426</strong></td><td align="right">426</td><td align="right">0</td><td align="right">9</td><td align="right">4187</td><td align="right">4259</td><td align="right">4</td><td align="right">4671</td><td align="right">6357</td><td align="right"><strong>4</strong></td><td align="right">5</td></tr><tr><td align="right">18</td><td align="left">eil76</td><td align="right"><strong>538</strong></td><td align="right">642</td><td align="right">562</td><td align="right">538</td><td align="right">538</td><td align="right">557</td><td align="right">543</td><td align="right">538</td><td align="right">538</td><td align="right"><strong>538</strong></td><td align="right">0</td><td align="right">3</td><td align="right">4432</td><td align="right">77</td><td align="right">4</td><td align="right">10004</td><td align="right">266</td><td align="right">16</td><td align="right"><strong>6</strong></td></tr><tr><td align="right">19</td><td align="left">fl1400</td><td align="right">20127</td><td align="right">27447</td><td align="right">21914</td><td align="right">21453</td><td align="right">20863</td><td align="right">20789</td><td align="right">32998</td><td align="right">20453</td><td align="right"><strong>20321</strong></td><td align="right">20386</td><td align="right">14</td><td align="right">36529</td><td align="right">10014</td><td align="right">10062</td><td align="right">619434</td><td align="right">10000</td><td align="right">372016</td><td align="right">10003</td><td align="right">10013</td></tr><tr><td align="right">20</td><td align="left">fl1577</td><td align="right">22249</td><td align="right">27996</td><td align="right">25103</td><td align="right">24470</td><td align="right">23909</td><td align="right">22729</td><td align="right">51493</td><td align="right">22724</td><td align="right"><strong>22346</strong></td><td align="right">22437</td><td align="right">15</td><td align="right">10437</td><td align="right">10001</td><td align="right">10129</td><td align="right">962587</td><td align="right">10011</td><td align="right">580440</td><td align="right">10002</td><td align="right">10009</td></tr><tr><td align="right">21</td><td align="left">fl3795</td><td align="right">28772</td><td align="right">35285</td><td align="right">30934</td><td align="right">47278</td><td align="right">32506</td><td align="right">30345</td><td align="right">155618</td><td align="right">30349</td><td align="right">29602</td><td align="right"><strong>29285</strong></td><td align="right">11</td><td align="right">714219</td><td align="right">10003</td><td align="right">13374</td><td align="right">26571284</td><td align="right">10000</td><td align="right">13728554</td><td align="right">10007</td><td align="right">10046</td></tr><tr><td align="right">22</td><td align="left">fl417</td><td align="right">11861</td><td align="right">15013</td><td align="right">12683</td><td align="right">11963</td><td align="right">11920</td><td align="right">12048</td><td align="right">12590</td><td align="right">11925</td><td align="right">11866</td><td align="right"><strong>11865</strong></td><td align="right">0</td><td align="right">331</td><td align="right">10010</td><td align="right">10003</td><td align="right">8843</td><td align="right">10000</td><td align="right">10750</td><td align="right">10001</td><td align="right">10006</td></tr><tr><td align="right">23</td><td align="left">fnl4461</td><td align="right">182566</td><td align="right">229963</td><td align="right">198781</td><td align="right">250850</td><td align="right">202601</td><td align="right">190748</td><td align="right">754112</td><td align="right">190417</td><td align="right">194962</td><td align="right"><strong>194105</strong></td><td align="right">32</td><td align="right">584440</td><td align="right">10011</td><td align="right">11222</td><td align="right">49703258</td><td align="right">10014</td><td align="right">50845165</td><td align="right">10049</td><td align="right">10015</td></tr><tr><td align="right">24</td><td align="left">fri26</td><td align="right"><strong>937</strong></td><td align="right">1112</td><td align="right">1016</td><td align="right">937</td><td align="right"><strong>937</strong></td><td align="right">937</td><td align="right">937</td><td align="right">937</td><td align="right">937</td><td align="right"><strong>937</strong></td><td align="right">0</td><td align="right">0</td><td align="right">2825</td><td align="right"><strong>0</strong></td><td align="right">1</td><td align="right">3130</td><td align="right">1</td><td align="right">1</td><td align="right"><strong>0</strong></td></tr><tr><td align="right">25</td><td align="left">gil262</td><td align="right">2378</td><td align="right">3208</td><td align="right">2503</td><td align="right">2399</td><td align="right">2381</td><td align="right">2519</td><td align="right">2452</td><td align="right">2411</td><td align="right">2395</td><td align="right"><strong>2380</strong></td><td align="right">0</td><td align="right">267</td><td align="right">10013</td><td align="right">10001</td><td align="right">1272</td><td align="right">10010</td><td align="right">10017</td><td align="right">10000</td><td align="right">10009</td></tr><tr><td align="right">26</td><td align="left">gr120</td><td align="right"><strong>6942</strong></td><td align="right">9351</td><td align="right">7341</td><td align="right">7005</td><td align="right">6961</td><td align="right">7146</td><td align="right">6967</td><td align="right">6956</td><td align="right"><strong>6942</strong></td><td align="right">6942</td><td align="right">1</td><td align="right">19</td><td align="right">10000</td><td align="right">10000</td><td align="right">92</td><td align="right">10000</td><td align="right">10000</td><td align="right"><strong>489</strong></td><td align="right">728</td></tr><tr><td align="right">27</td><td align="left">gr17</td><td align="right"><strong>2085</strong></td><td align="right">2187</td><td align="right">2095</td><td align="right">2085</td><td align="right"><strong>2085</strong></td><td align="right"><strong>2085</strong></td><td align="right">2085</td><td align="right"><strong>2085</strong></td><td align="right">2085</td><td align="right">2085</td><td align="right">0</td><td align="right">0</td><td align="right">1504</td><td align="right"><strong>0</strong></td><td align="right"><strong>0</strong></td><td align="right">1776</td><td align="right"><strong>0</strong></td><td align="right">1</td><td align="right">1</td></tr><tr><td align="right">28</td><td align="left">gr21</td><td align="right"><strong>2707</strong></td><td align="right">3333</td><td align="right">2877</td><td align="right">2707</td><td align="right"><strong>2707</strong></td><td align="right"><strong>2707</strong></td><td align="right">2707</td><td align="right">2707</td><td align="right"><strong>2707</strong></td><td align="right"><strong>2707</strong></td><td align="right">0</td><td align="right">0</td><td align="right">2299</td><td align="right"><strong>0</strong></td><td align="right"><strong>0</strong></td><td align="right">2156</td><td align="right">1</td><td align="right"><strong>0</strong></td><td align="right"><strong>0</strong></td></tr><tr><td align="right">29</td><td align="left">gr24</td><td align="right"><strong>1272</strong></td><td align="right">1553</td><td align="right">1286</td><td align="right">1272</td><td align="right">1272</td><td align="right">1314</td><td align="right">1272</td><td align="right"><strong>1272</strong></td><td align="right"><strong>1272</strong></td><td align="right"><strong>1272</strong></td><td align="right">0</td><td align="right">1</td><td align="right">2531</td><td align="right">1</td><td align="right">0</td><td align="right">2504</td><td align="right"><strong>0</strong></td><td align="right"><strong>0</strong></td><td align="right"><strong>0</strong></td></tr><tr><td align="right">30</td><td align="left">gr48</td><td align="right"><strong>5046</strong></td><td align="right">6098</td><td align="right">5107</td><td align="right">5046</td><td align="right">5046</td><td align="right">5138</td><td align="right">5075</td><td align="right">5046</td><td align="right"><strong>5046</strong></td><td align="right">5046</td><td align="right">0</td><td align="right">1</td><td align="right">4558</td><td align="right">5</td><td align="right">3</td><td align="right">10000</td><td align="right">29</td><td align="right"><strong>4</strong></td><td align="right">6</td></tr><tr><td align="right">31</td><td align="left">hk48</td><td align="right"><strong>11461</strong></td><td align="right">13181</td><td align="right">12441</td><td align="right">11461</td><td align="right">11461</td><td align="right">11805</td><td align="right">11461</td><td align="right">11461</td><td align="right">11461</td><td align="right"><strong>11461</strong></td><td align="right">0</td><td align="right">1</td><td align="right">4310</td><td align="right">4</td><td align="right">2</td><td align="right">4442</td><td align="right">17</td><td align="right">11</td><td align="right"><strong>3</strong></td></tr><tr><td align="right">32</td><td align="left">kroA100</td><td align="right"><strong>21282</strong></td><td align="right">27807</td><td align="right">22844</td><td align="right">21388</td><td align="right">21282</td><td align="right">21305</td><td align="right">21282</td><td align="right">21282</td><td align="right"><strong>21282</strong></td><td align="right">21282</td><td align="right">0</td><td align="right">10</td><td align="right">10000</td><td align="right">258</td><td align="right">44</td><td align="right">6892</td><td align="right">185</td><td align="right"><strong>18</strong></td><td align="right">22</td></tr><tr><td align="right">33</td><td align="left">kroA150</td><td align="right"><strong>26524</strong></td><td align="right">33633</td><td align="right">28094</td><td align="right">26701</td><td align="right">26525</td><td align="right">27909</td><td align="right">26961</td><td align="right">26524</td><td align="right">26524</td><td align="right"><strong>26524</strong></td><td align="right">0</td><td align="right">25</td><td align="right">10010</td><td align="right">10000</td><td align="right">140</td><td align="right">10000</td><td align="right">7624</td><td align="right">3243</td><td align="right"><strong>580</strong></td></tr><tr><td align="right">34</td><td align="left">kroA200</td><td align="right"><strong>29368</strong></td><td align="right">35859</td><td align="right">31269</td><td align="right">29882</td><td align="right">29368</td><td align="right">30230</td><td align="right">30035</td><td align="right">29606</td><td align="right"><strong>29368</strong></td><td align="right">29368</td><td align="right">0</td><td align="right">117</td><td align="right">10010</td><td align="right">7508</td><td align="right">681</td><td align="right">10007</td><td align="right">10260</td><td align="right"><strong>2949</strong></td><td align="right">5096</td></tr><tr><td align="right">35</td><td align="left">kroB100</td><td align="right"><strong>22141</strong></td><td align="right">29158</td><td align="right">22927</td><td align="right">22284</td><td align="right">22141</td><td align="right">22304</td><td align="right">22276</td><td align="right">22141</td><td align="right">22141</td><td align="right"><strong>22141</strong></td><td align="right">0</td><td align="right">9</td><td align="right">10011</td><td align="right">444</td><td align="right">77</td><td align="right">10001</td><td align="right">805</td><td align="right">82</td><td align="right"><strong>37</strong></td></tr><tr><td align="right">36</td><td align="left">kroB150</td><td align="right"><strong>26130</strong></td><td align="right">34499</td><td align="right">27568</td><td align="right">26279</td><td align="right">26132</td><td align="right">27135</td><td align="right">26228</td><td align="right">26141</td><td align="right">26141</td><td align="right"><strong>26130</strong></td><td align="right">0</td><td align="right">43</td><td align="right">10000</td><td align="right">10001</td><td align="right">72</td><td align="right">10000</td><td align="right">10005</td><td align="right">10000</td><td align="right">2651</td></tr><tr><td align="right">37</td><td align="left">kroB200</td><td align="right"><strong>29437</strong></td><td align="right">36980</td><td align="right">31267</td><td align="right">29673</td><td align="right">29448</td><td align="right">30209</td><td align="right">29853</td><td align="right">29586</td><td align="right"><strong>29437</strong></td><td align="right">29438</td><td align="right">0</td><td align="right">105</td><td align="right">10015</td><td align="right">10000</td><td align="right">715</td><td align="right">10002</td><td align="right">10212</td><td align="right">4537</td><td align="right">10000</td></tr><tr><td align="right">38</td><td align="left">kroC100</td><td align="right"><strong>20749</strong></td><td align="right">26227</td><td align="right">21369</td><td align="right">20852</td><td align="right">20749</td><td align="right">20852</td><td align="right">20749</td><td align="right">20749</td><td align="right"><strong>20749</strong></td><td align="right">20749</td><td align="right">0</td><td align="right">9</td><td align="right">10009</td><td align="right">163</td><td align="right">47</td><td align="right">6806</td><td align="right">508</td><td align="right"><strong>22</strong></td><td align="right">26</td></tr><tr><td align="right">39</td><td align="left">kroD100</td><td align="right"><strong>21294</strong></td><td align="right">26947</td><td align="right">22279</td><td align="right">21294</td><td align="right">21294</td><td align="right">21929</td><td align="right">21294</td><td align="right">21294</td><td align="right">21294</td><td align="right"><strong>21294</strong></td><td align="right">0</td><td align="right">10</td><td align="right">5539</td><td align="right">453</td><td align="right">46</td><td align="right">7953</td><td align="right">3199</td><td align="right">6641</td><td align="right"><strong>328</strong></td></tr><tr><td align="right">40</td><td align="left">kroE100</td><td align="right"><strong>22068</strong></td><td align="right">27460</td><td align="right">23383</td><td align="right">22160</td><td align="right">22106</td><td align="right">22160</td><td align="right">22100</td><td align="right"><strong>22068</strong></td><td align="right">22121</td><td align="right">22121</td><td align="right">0</td><td align="right">10</td><td align="right">10000</td><td align="right">10000</td><td align="right">73</td><td align="right">10015</td><td align="right">190</td><td align="right">10000</td><td align="right">10005</td></tr><tr><td align="right">41</td><td align="left">lin105</td><td align="right"><strong>14379</strong></td><td align="right">20356</td><td align="right">15893</td><td align="right">14379</td><td align="right">14379</td><td align="right">14577</td><td align="right">14379</td><td align="right">14379</td><td align="right">14379</td><td align="right"><strong>14379</strong></td><td align="right">0</td><td align="right">10</td><td align="right">5832</td><td align="right">228</td><td align="right">38</td><td align="right">6611</td><td align="right">98</td><td align="right">58</td><td align="right"><strong>9</strong></td></tr><tr><td align="right">42</td><td align="left">lin318</td><td align="right"><strong>42029</strong></td><td align="right">54019</td><td align="right">44849</td><td align="right">42972</td><td align="right">42524</td><td align="right">43070</td><td align="right">43600</td><td align="right">42992</td><td align="right"><strong>42029</strong></td><td align="right">42163</td><td align="right">0</td><td align="right">212</td><td align="right">10007</td><td align="right">10001</td><td align="right">3410</td><td align="right">10005</td><td align="right">11100</td><td align="right">6317</td><td align="right">10011</td></tr><tr><td align="right">43</td><td align="left">nrw1379</td><td align="right">56638</td><td align="right">68964</td><td align="right">62111</td><td align="right">60591</td><td align="right">60395</td><td align="right">58703</td><td align="right">101318</td><td align="right">58844</td><td align="right">57757</td><td align="right"><strong>57592</strong></td><td align="right">7</td><td align="right">20903</td><td align="right">10005</td><td align="right">10088</td><td align="right">617046</td><td align="right">10013</td><td align="right">447405</td><td align="right">10004</td><td align="right">10003</td></tr><tr><td align="right">44</td><td align="left">p654</td><td align="right">34643</td><td align="right">43457</td><td align="right">37110</td><td align="right">35835</td><td align="right">34843</td><td align="right">35233</td><td align="right">42008</td><td align="right">35135</td><td align="right"><strong>34669</strong></td><td align="right">34681</td><td align="right">2</td><td align="right">1696</td><td align="right">10003</td><td align="right">10011</td><td align="right">26871</td><td align="right">10005</td><td align="right">20144</td><td align="right">10003</td><td align="right">10011</td></tr><tr><td align="right">45</td><td align="left">pa561</td><td align="right">2763</td><td align="right">3422</td><td align="right">3151</td><td align="right">2853</td><td align="right">2838</td><td align="right">2876</td><td align="right">3170</td><td align="right">2898</td><td align="right">2785</td><td align="right"><strong>2784</strong></td><td align="right">1</td><td align="right">381</td><td align="right">10000</td><td align="right">10002</td><td align="right">15822</td><td align="right">10000</td><td align="right">14348</td><td align="right">10000</td><td align="right">10000</td></tr><tr><td align="right">46</td><td align="left">pcb1173</td><td align="right">56892</td><td align="right">71978</td><td align="right">62512</td><td align="right">60083</td><td align="right">60960</td><td align="right">59366</td><td align="right">97467</td><td align="right">59151</td><td align="right"><strong>57691</strong></td><td align="right">58107</td><td align="right">11</td><td align="right">6665</td><td align="right">10001</td><td align="right">10004</td><td align="right">235688</td><td align="right">10000</td><td align="right">234567</td><td align="right">10000</td><td align="right">10003</td></tr><tr><td align="right">47</td><td align="left">pcb3038</td><td align="right">137694</td><td align="right">176310</td><td align="right">150588</td><td align="right">164337</td><td align="right">152590</td><td align="right">143486</td><td align="right">438703</td><td align="right">143891</td><td align="right">144821</td><td align="right"><strong>143379</strong></td><td align="right">12</td><td align="right">118397</td><td align="right">10000</td><td align="right">10025</td><td align="right">9706220</td><td align="right">10000</td><td align="right">5242701</td><td align="right">10019</td><td align="right">10004</td></tr><tr><td align="right">48</td><td align="left">pcb442</td><td align="right">50778</td><td align="right">61979</td><td align="right">57171</td><td align="right">51491</td><td align="right">52176</td><td align="right">52606</td><td align="right">54374</td><td align="right">52786</td><td align="right"><strong>50956</strong></td><td align="right">51127</td><td align="right">0</td><td align="right">386</td><td align="right">10008</td><td align="right">10005</td><td align="right">9063</td><td align="right">10005</td><td align="right">10449</td><td align="right">10000</td><td align="right">10013</td></tr><tr><td align="right">49</td><td align="left">pr1002</td><td align="right">259045</td><td align="right">331103</td><td align="right">281036</td><td align="right">270069</td><td align="right">273466</td><td align="right">270183</td><td align="right">381306</td><td align="right">273080</td><td align="right"><strong>262842</strong></td><td align="right">263929</td><td align="right">4</td><td align="right">1501</td><td align="right">10003</td><td align="right">10010</td><td align="right">130736</td><td align="right">10001</td><td align="right">73284</td><td align="right">10003</td><td align="right">10001</td></tr><tr><td align="right">50</td><td align="left">pr107</td><td align="right"><strong>44303</strong></td><td align="right">46680</td><td align="right">46485</td><td align="right">44387</td><td align="right">44303</td><td align="right">44617</td><td align="right">44522</td><td align="right">44303</td><td align="right">44303</td><td align="right"><strong>44303</strong></td><td align="right">0</td><td align="right">6</td><td align="right">10004</td><td align="right">226</td><td align="right">55</td><td align="right">10001</td><td align="right">2176</td><td align="right">119</td><td align="right"><strong>80</strong></td></tr><tr><td align="right">51</td><td align="left">pr124</td><td align="right"><strong>59030</strong></td><td align="right">69297</td><td align="right">65668</td><td align="right">59608</td><td align="right">59030</td><td align="right">59076</td><td align="right">59548</td><td align="right">59030</td><td align="right">59030</td><td align="right"><strong>59030</strong></td><td align="right">0</td><td align="right">12</td><td align="right">10009</td><td align="right">58</td><td align="right">100</td><td align="right">10005</td><td align="right">602</td><td align="right">110</td><td align="right"><strong>26</strong></td></tr><tr><td align="right">52</td><td align="left">pr136</td><td align="right"><strong>96772</strong></td><td align="right">120769</td><td align="right">105133</td><td align="right">97232</td><td align="right">96772</td><td align="right">99635</td><td align="right">97251</td><td align="right">98464</td><td align="right"><strong>96772</strong></td><td align="right">96772</td><td align="right">0</td><td align="right">29</td><td align="right">10011</td><td align="right">3937</td><td align="right">133</td><td align="right">10010</td><td align="right">10052</td><td align="right"><strong>1776</strong></td><td align="right">3503</td></tr><tr><td align="right">53</td><td align="left">pr144</td><td align="right"><strong>58537</strong></td><td align="right">61652</td><td align="right">61847</td><td align="right">58600</td><td align="right">58537</td><td align="right">58763</td><td align="right">58590</td><td align="right">58537</td><td align="right">58537</td><td align="right"><strong>58537</strong></td><td align="right">0</td><td align="right">9</td><td align="right">10012</td><td align="right">144</td><td align="right">125</td><td align="right">10003</td><td align="right">2366</td><td align="right">26</td><td align="right"><strong>4</strong></td></tr><tr><td align="right">54</td><td align="left">pr152</td><td align="right"><strong>73682</strong></td><td align="right">85699</td><td align="right">75410</td><td align="right">74084</td><td align="right">73682</td><td align="right">74017</td><td align="right">73880</td><td align="right">73818</td><td align="right"><strong>73682</strong></td><td align="right">73682</td><td align="right">0</td><td align="right">9</td><td align="right">10007</td><td align="right">3631</td><td align="right">140</td><td align="right">10001</td><td align="right">10047</td><td align="right"><strong>18</strong></td><td align="right">291</td></tr><tr><td align="right">55</td><td align="left">pr226</td><td align="right"><strong>80369</strong></td><td align="right">94683</td><td align="right">86065</td><td align="right">81341</td><td align="right">80369</td><td align="right">82150</td><td align="right">81307</td><td align="right">80369</td><td align="right">80369</td><td align="right"><strong>80369</strong></td><td align="right">0</td><td align="right">9</td><td align="right">10002</td><td align="right">1829</td><td align="right">859</td><td align="right">10013</td><td align="right">4199</td><td align="right">694</td><td align="right"><strong>422</strong></td></tr><tr><td align="right">56</td><td align="left">pr2392</td><td align="right"><strong>378032</strong></td><td align="right">461170</td><td align="right">378032</td><td align="right">429248</td><td align="right"><strong>378032</strong></td><td align="right">378032</td><td align="right">1093433</td><td align="right"><strong>378032</strong></td><td align="right">378032</td><td align="right">378032</td><td align="right">19</td><td align="right">58</td><td align="right">10013</td><td align="right"><strong>0</strong></td><td align="right">112692</td><td align="right">10014</td><td align="right"><strong>0</strong></td><td align="right">780</td><td align="right">752</td></tr><tr><td align="right">57</td><td align="left">pr264</td><td align="right"><strong>49135</strong></td><td align="right">58023</td><td align="right">57512</td><td align="right">50134</td><td align="right">49135</td><td align="right">50339</td><td align="right">50258</td><td align="right">49203</td><td align="right"><strong>49135</strong></td><td align="right">49135</td><td align="right">0</td><td align="right">37</td><td align="right">10000</td><td align="right">4465</td><td align="right">1822</td><td align="right">10010</td><td align="right">10219</td><td align="right"><strong>138</strong></td><td align="right">1550</td></tr><tr><td align="right">58</td><td align="left">pr299</td><td align="right"><strong>48191</strong></td><td align="right">59890</td><td align="right">52667</td><td align="right">48556</td><td align="right">48749</td><td align="right">48793</td><td align="right">49522</td><td align="right">48991</td><td align="right">48224</td><td align="right"><strong>48191</strong></td><td align="right">0</td><td align="right">76</td><td align="right">10006</td><td align="right">10000</td><td align="right">1690</td><td align="right">10010</td><td align="right">10119</td><td align="right">10000</td><td align="right">7776</td></tr><tr><td align="right">59</td><td align="left">pr439</td><td align="right">107217</td><td align="right">131281</td><td align="right">116275</td><td align="right">111723</td><td align="right">107880</td><td align="right">111457</td><td align="right">115361</td><td align="right">110894</td><td align="right"><strong>107250</strong></td><td align="right">107292</td><td align="right">0</td><td align="right">165</td><td align="right">10006</td><td align="right">10001</td><td align="right">11019</td><td align="right">10014</td><td align="right">10670</td><td align="right">10001</td><td align="right">10011</td></tr><tr><td align="right">60</td><td align="left">pr76</td><td align="right"><strong>108159</strong></td><td align="right">153462</td><td align="right">118343</td><td align="right">109125</td><td align="right">108159</td><td align="right">112130</td><td align="right">108159</td><td align="right">108159</td><td align="right"><strong>108159</strong></td><td align="right">108159</td><td align="right">0</td><td align="right">1</td><td align="right">10007</td><td align="right">304</td><td align="right">17</td><td align="right">6099</td><td align="right">183</td><td align="right"><strong>6</strong></td><td align="right">12</td></tr><tr><td align="right">61</td><td align="left">rat195</td><td align="right"><strong>2323</strong></td><td align="right">2752</td><td align="right">2484</td><td align="right">2355</td><td align="right"><strong>2323</strong></td><td align="right">2390</td><td align="right">2374</td><td align="right">2356</td><td align="right">2328</td><td align="right">2328</td><td align="right">0</td><td align="right">9</td><td align="right">10000</td><td align="right">8148</td><td align="right">457</td><td align="right">10000</td><td align="right">10024</td><td align="right">10000</td><td align="right">10000</td></tr><tr><td align="right">62</td><td align="left">rat575</td><td align="right">6773</td><td align="right">8605</td><td align="right">7471</td><td align="right">7052</td><td align="right">7074</td><td align="right">7083</td><td align="right">7923</td><td align="right">7066</td><td align="right"><strong>6811</strong></td><td align="right">6863</td><td align="right">1</td><td align="right">205</td><td align="right">10005</td><td align="right">10011</td><td align="right">28656</td><td align="right">10002</td><td align="right">20744</td><td align="right">10002</td><td align="right">10004</td></tr><tr><td align="right">63</td><td align="left">rat783</td><td align="right">8806</td><td align="right">11054</td><td align="right">9480</td><td align="right">9252</td><td align="right">9353</td><td align="right">9172</td><td align="right">11676</td><td align="right">9126</td><td align="right"><strong>8921</strong></td><td align="right">8942</td><td align="right">15</td><td align="right">2519</td><td align="right">10008</td><td align="right">10025</td><td align="right">56809</td><td align="right">10014</td><td align="right">65418</td><td align="right">10001</td><td align="right">10004</td></tr><tr><td align="right">64</td><td align="left">rat99</td><td align="right"><strong>1211</strong></td><td align="right">1554</td><td align="right">1321</td><td align="right">1214</td><td align="right">1211</td><td align="right">1265</td><td align="right">1222</td><td align="right">1211</td><td align="right">1211</td><td align="right"><strong>1211</strong></td><td align="right">0</td><td align="right">8</td><td align="right">10003</td><td align="right">722</td><td align="right">35</td><td align="right">10005</td><td align="right">333</td><td align="right">145</td><td align="right"><strong>12</strong></td></tr><tr><td align="right">65</td><td align="left">rd100</td><td align="right"><strong>7910</strong></td><td align="right">9938</td><td align="right">8523</td><td align="right">7910</td><td align="right">7910</td><td align="right">8047</td><td align="right">7949</td><td align="right">7910</td><td align="right">7910</td><td align="right"><strong>7910</strong></td><td align="right">0</td><td align="right">11</td><td align="right">5855</td><td align="right">288</td><td align="right">27</td><td align="right">10010</td><td align="right">78</td><td align="right">338</td><td align="right"><strong>51</strong></td></tr><tr><td align="right">66</td><td align="left">rd400</td><td align="right">15281</td><td align="right">19183</td><td align="right">16376</td><td align="right">15696</td><td align="right">15538</td><td align="right">15933</td><td align="right">16129</td><td align="right">15855</td><td align="right">15428</td><td align="right"><strong>15287</strong></td><td align="right">0</td><td align="right">807</td><td align="right">10015</td><td align="right">10006</td><td align="right">7920</td><td align="right">10008</td><td align="right">10187</td><td align="right">10000</td><td align="right">10005</td></tr><tr><td align="right">67</td><td align="left">rl1304</td><td align="right">252948</td><td align="right">335779</td><td align="right">285536</td><td align="right">274109</td><td align="right">270205</td><td align="right">262659</td><td align="right">546642</td><td align="right">269500</td><td align="right">258063</td><td align="right"><strong>256374</strong></td><td align="right">16</td><td align="right">23056</td><td align="right">10011</td><td align="right">10019</td><td align="right">573347</td><td align="right">10013</td><td align="right">455686</td><td align="right">10003</td><td align="right">10007</td></tr><tr><td align="right">68</td><td align="left">rl1323</td><td align="right">270199</td><td align="right">332103</td><td align="right">294672</td><td align="right">288616</td><td align="right">286293</td><td align="right">280884</td><td align="right">566533</td><td align="right">277973</td><td align="right"><strong>272076</strong></td><td align="right">272432</td><td align="right">17</td><td align="right">32391</td><td align="right">10006</td><td align="right">10091</td><td align="right">573562</td><td align="right">10004</td><td align="right">510171</td><td align="right">10005</td><td align="right">10006</td></tr><tr><td align="right">69</td><td align="left">rl1889</td><td align="right">316536</td><td align="right">389270</td><td align="right">342694</td><td align="right">356890</td><td align="right">342276</td><td align="right">331589</td><td align="right">896820</td><td align="right">331915</td><td align="right">324475</td><td align="right"><strong>323870</strong></td><td align="right">10</td><td align="right">105024</td><td align="right">10000</td><td align="right">10312</td><td align="right">2517344</td><td align="right">10004</td><td align="right">2389999</td><td align="right">10007</td><td align="right">10011</td></tr><tr><td align="right">70</td><td align="left">si1032</td><td align="right"><strong>92650</strong></td><td align="right">94571</td><td align="right">93022</td><td align="right">93063</td><td align="right">92717</td><td align="right">93025</td><td align="right">103572</td><td align="right">93294</td><td align="right">92650</td><td align="right"><strong>92650</strong></td><td align="right">1</td><td align="right">1831</td><td align="right">10000</td><td align="right">10001</td><td align="right">137112</td><td align="right">10000</td><td align="right">85388</td><td align="right">4049</td><td align="right"><strong>2174</strong></td></tr><tr><td align="right">71</td><td align="left">si175</td><td align="right"><strong>21407</strong></td><td align="right">22263</td><td align="right">21638</td><td align="right">21431</td><td align="right">21415</td><td align="right">21557</td><td align="right">21445</td><td align="right">21407</td><td align="right"><strong>21407</strong></td><td align="right">21414</td><td align="right">0</td><td align="right">14</td><td align="right">10000</td><td align="right">10000</td><td align="right">417</td><td align="right">10000</td><td align="right">5126</td><td align="right"><strong>940</strong></td><td align="right">10000</td></tr><tr><td align="right">72</td><td align="left">si535</td><td align="right">48450</td><td align="right">50144</td><td align="right">49013</td><td align="right">48541</td><td align="right">48503</td><td align="right">48662</td><td align="right">49348</td><td align="right">48650</td><td align="right">48472</td><td align="right"><strong>48469</strong></td><td align="right">1</td><td align="right">499</td><td align="right">10000</td><td align="right">10003</td><td align="right">18432</td><td align="right">10000</td><td align="right">12577</td><td align="right">10001</td><td align="right">10000</td></tr><tr><td align="right">73</td><td align="left">st70</td><td align="right"><strong>675</strong></td><td align="right">830</td><td align="right">708</td><td align="right">675</td><td align="right">675</td><td align="right">684</td><td align="right">675</td><td align="right">675</td><td align="right"><strong>675</strong></td><td align="right">675</td><td align="right">4</td><td align="right">15</td><td align="right">4618</td><td align="right">840</td><td align="right">66</td><td align="right">5710</td><td align="right">307</td><td align="right"><strong>5</strong></td><td align="right">484</td></tr><tr><td align="right">74</td><td align="left">swiss42</td><td align="right"><strong>1273</strong></td><td align="right">1630</td><td align="right">1370</td><td align="right">1273</td><td align="right">1273</td><td align="right">1273</td><td align="right">1273</td><td align="right">1273</td><td align="right"><strong>1273</strong></td><td align="right"><strong>1273</strong></td><td align="right">0</td><td align="right">0</td><td align="right">3689</td><td align="right">2</td><td align="right">3</td><td align="right">3880</td><td align="right">2</td><td align="right"><strong>1</strong></td><td align="right"><strong>1</strong></td></tr><tr><td align="right">75</td><td align="left">ts225</td><td align="right"><strong>126643</strong></td><td align="right">152493</td><td align="right">134187</td><td align="right">127245</td><td align="right">126643</td><td align="right">133282</td><td align="right">132056</td><td align="right">126643</td><td align="right"><strong>126643</strong></td><td align="right">126643</td><td align="right">2</td><td align="right">10</td><td align="right">10000</td><td align="right">1442</td><td align="right">653</td><td align="right">10000</td><td align="right">2992</td><td align="right"><strong>327</strong></td><td align="right">830</td></tr><tr><td align="right">76</td><td align="left">tsp225</td><td align="right"><strong>3916</strong></td><td align="right">5030</td><td align="right">4082</td><td align="right">4002</td><td align="right">3919</td><td align="right">4076</td><td align="right">3992</td><td align="right">3948</td><td align="right">3948</td><td align="right"><strong>3916</strong></td><td align="right">3</td><td align="right">54</td><td align="right">10000</td><td align="right">10001</td><td align="right">1150</td><td align="right">10000</td><td align="right">10106</td><td align="right">10000</td><td align="right">636</td></tr><tr><td align="right">77</td><td align="left">u1060</td><td align="right">224094</td><td align="right">308980</td><td align="right">247073</td><td align="right">235187</td><td align="right">235853</td><td align="right">233363</td><td align="right">339920</td><td align="right">232942</td><td align="right"><strong>226448</strong></td><td align="right">227283</td><td align="right">2</td><td align="right">782</td><td align="right">10000</td><td align="right">10031</td><td align="right">251737</td><td align="right">10000</td><td align="right">167394</td><td align="right">10000</td><td align="right">10003</td></tr><tr><td align="right">78</td><td align="left">u1432</td><td align="right">152970</td><td align="right">188807</td><td align="right">169528</td><td align="right">165706</td><td align="right">167363</td><td align="right">160736</td><td align="right">278953</td><td align="right">160727</td><td align="right"><strong>156596</strong></td><td align="right">156710</td><td align="right">3</td><td align="right">1827</td><td align="right">10000</td><td align="right">10130</td><td align="right">596566</td><td align="right">10000</td><td align="right">870417</td><td align="right">10001</td><td align="right">10000</td></tr><tr><td align="right">79</td><td align="left">u159</td><td align="right"><strong>42080</strong></td><td align="right">54675</td><td align="right">42981</td><td align="right">42460</td><td align="right">42080</td><td align="right">42396</td><td align="right">42479</td><td align="right">42080</td><td align="right"><strong>42080</strong></td><td align="right">42080</td><td align="right">1</td><td align="right">1</td><td align="right">10000</td><td align="right">388</td><td align="right">187</td><td align="right">10000</td><td align="right">2279</td><td align="right"><strong>12</strong></td><td align="right">33</td></tr><tr><td align="right">80</td><td align="left">u1817</td><td align="right">57201</td><td align="right">72030</td><td align="right">64249</td><td align="right">64413</td><td align="right">62567</td><td align="right">60268</td><td align="right">142201</td><td align="right">60686</td><td align="right"><strong>58465</strong></td><td align="right">59107</td><td align="right">4</td><td align="right">5337</td><td align="right">10000</td><td align="right">10105</td><td align="right">1132689</td><td align="right">10000</td><td align="right">1094623</td><td align="right">10000</td><td align="right">10002</td></tr><tr><td align="right">81</td><td align="left">u2152</td><td align="right">64253</td><td align="right">79260</td><td align="right">72582</td><td align="right">74327</td><td align="right">71186</td><td align="right">67741</td><td align="right">179530</td><td align="right">68455</td><td align="right">66889</td><td align="right"><strong>66404</strong></td><td align="right">7</td><td align="right">10063</td><td align="right">10000</td><td align="right">10072</td><td align="right">3140315</td><td align="right">10000</td><td align="right">2968500</td><td align="right">10013</td><td align="right">10004</td></tr><tr><td align="right">82</td><td align="left">u2319</td><td align="right">234256</td><td align="right">278765</td><td align="right">254330</td><td align="right">247570</td><td align="right">250419</td><td align="right">240484</td><td align="right">511622</td><td align="right">241262</td><td align="right">239887</td><td align="right"><strong>239019</strong></td><td align="right">7</td><td align="right">9642</td><td align="right">10000</td><td align="right">10111</td><td align="right">4725590</td><td align="right">10000</td><td align="right">3403010</td><td align="right">10015</td><td align="right">10000</td></tr><tr><td align="right">83</td><td align="left">u574</td><td align="right">36905</td><td align="right">50459</td><td align="right">39266</td><td align="right">38279</td><td align="right">38397</td><td align="right">38510</td><td align="right">43293</td><td align="right">38573</td><td align="right">37383</td><td align="right"><strong>37080</strong></td><td align="right">5</td><td align="right">54</td><td align="right">10000</td><td align="right">10005</td><td align="right">33905</td><td align="right">10000</td><td align="right">17362</td><td align="right">10001</td><td align="right">10000</td></tr><tr><td align="right">84</td><td align="left">u724</td><td align="right">41910</td><td align="right">52943</td><td align="right">45531</td><td align="right">43246</td><td align="right">43735</td><td align="right">43553</td><td align="right">53371</td><td align="right">43106</td><td align="right"><strong>42176</strong></td><td align="right">42235</td><td align="right">1</td><td align="right">3821</td><td align="right">10000</td><td align="right">10021</td><td align="right">75655</td><td align="right">10000</td><td align="right">48134</td><td align="right">10001</td><td align="right">10000</td></tr><tr><td align="right">85</td><td align="left">vm1084</td><td align="right">239297</td><td align="right">301477</td><td align="right">263051</td><td align="right">257955</td><td align="right">252752</td><td align="right">252136</td><td align="right">412136</td><td align="right">250971</td><td align="right">241329</td><td align="right"><strong>240870</strong></td><td align="right">2</td><td align="right">16012</td><td align="right">10000</td><td align="right">10032</td><td align="right">365833</td><td align="right">10000</td><td align="right">288922</td><td align="right">10004</td><td align="right">10001</td></tr><tr><td align="right">86</td><td align="left">vm1748</td><td align="right">336556</td><td align="right">408102</td><td align="right">363517</td><td align="right">367307</td><td align="right">362314</td><td align="right">352835</td><td align="right">817011</td><td align="right">353231</td><td align="right"><strong>341702</strong></td><td align="right">345219</td><td align="right">6</td><td align="right">79973</td><td align="right">10000</td><td align="right">10190</td><td align="right">1829514</td><td align="right">10000</td><td align="right">1372701</td><td align="right">10004</td><td align="right">10031</td></tr></tbody></table></div><p>次に2-opt SAとImproved 2-opt ILSで見つかった解が最適解の何倍であるかをプロットした図を示します。</p><img src="/images/20211201a/ratio.png" alt="散布図" width="975" height="725" loading="lazy"><p>横軸が頂点数、縦軸が見つかった解の総距離/最適解の総距離です。点がグラフの下にプロットされているほど最適解に近く、良い解が見つかっています。</p><p>Improved 2-opt ILSの条件を2つとも見た場合と1つだけ見た場合の比較です。</p><img src="/images/20211201a/ratio_improved.png" alt="比較した散布図" width="975" height="725" loading="lazy"><p>頂点数が多いインスタンスでは、片方の条件のみを見た方が良い解が見つかる傾向にありそうです。これは制限時間10秒では、片方の条件を見ずに多少改善を見逃すことよりも、多くの回数のKick + LSを行った方が良いからだと考えられます。</p><h2 id="さいごに"><a href="#さいごに" class="headerlink" title="さいごに"></a>さいごに</h2><p>多くの場合に単純な2-opt SAより2-opt ILSの方が時間内に良い解を出せることが実験から分かりました。<br>自分でTSPやTSPに類似した問題のソルバを書かなければならない場合はこの知識が役に立つかと思います。しかし、自分で書く必要がなくライセンス条件を満たす場合は既存のヒューリスティックソルバ[5]を使ったほうが圧倒的に性能が良く、手間もかかりません。<br>また、厳密に解くソルバも存在します。TSPを厳密に解くのは数十頂点ですら難しいと思われがちですが、このソルバで厳密に解けている数万頂点の問題もあります[6]。各インスタンスの最適解がどうして分かるのか疑問に思った方もいると思いますが、このような厳密に解くソルバによって最適解が求まっています。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] Hong, Inki, Andrew B. Kahng, and Byung-Ro Moon. 1997. “Improved Large-Step Markov Chain Variants for the Symmetric TSP.” Journal of Heuristics 3 (1): 63–81. <a href="https://doi.org/10.1023/a:1009624916728">https://doi.org/10.1023/a:1009624916728</a>.</p><p>[2] Johnson, David S., Gregory Gutin, Lyle A. McGeoch, Anders Yeo, Weixiong Zhang, and Alexei Zverovitch. 2007. “Experimental Analysis of Heuristics for the ATSP.” In The Traveling Salesman Problem and Its Variations, edited by Gregory Gutin and Abraham P. Punnen, 445–87. Boston, MA: Springer US. <a href="https://doi.org/10.1007/0-306-48213-4_10">https://doi.org/10.1007/0-306-48213-4_10</a>.</p><p>[3] Martin, Olivier, Steve W. Otto, and Edward W. Felten. 1992. “Large-Step Markov Chains for the TSP Incorporating Local Search Heuristics.” Operations Research Letters 11 (4): 219–24. <a href="https://doi.org/10.1016/0167-6377(92)90028-2">https://doi.org/10.1016/0167-6377(92)90028-2</a>.</p><p>[4] Johnson, D., and L. A. McGeoch. 1995. “The Traveling Salesman Problem: A Case Study in Local Optimization.” <a href="https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.70.7639&amp;rep=rep1&amp;type=pdf">https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.70.7639&amp;rep=rep1&amp;type=pdf</a>.</p><p>[5] K. Helsgaun. 2019. “LKH-3” <a href="http://webhotel4.ruc.dk/~keld/research/LKH-3/">http://webhotel4.ruc.dk/~keld/research/LKH-3/</a></p><p>[6] “Concorde TSP Solver” <a href="https://www.math.uwaterloo.ca/tsp/concorde.html">https://www.math.uwaterloo.ca/tsp/concorde.html</a></p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/DataScience/">DataScience</category>
      
      
      <category domain="https://future-architect.github.io/tags/%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0/">アルゴリズム</category>
      
      <category domain="https://future-architect.github.io/tags/TSP/">TSP</category>
      
      <category domain="https://future-architect.github.io/tags/%E7%84%BC%E3%81%8D%E3%81%AA%E3%81%BE%E3%81%97%E6%B3%95/">焼きなまし法</category>
      
      <category domain="https://future-architect.github.io/tags/2-opt/">2-opt</category>
      
      
      <comments>https://future-architect.github.io/articles/20211201a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>LT大会 #12 2021 Summer ～YDCさんとコラボしました～</title>
      <link>https://future-architect.github.io/articles/20211130a/</link>
      <guid>https://future-architect.github.io/articles/20211130a/</guid>
      <pubDate>Mon, 29 Nov 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;img src=&quot;/images/20211130a/top.png&quot; alt=&quot;&quot; width=&quot;808&quot; height=&quot;414&quot;&gt;

&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/20211130a/top.png" alt="" width="808" height="414"><h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>TIG真野です。2021/08/20（金）19:30 ～ 21:00にフューチャー社内でLT大会を実施したので開催レポートをお送りします。</p><p><a href="https://future-architect.github.io/articles/20210228/">前回</a>に引き続き、情勢的にリモート開催でしたが、今回はグループ会社である<a href="https://www.ydc.co.jp/">YDC</a>さんとコラボ開催でき、新しい風が吹き込まれた気がします。こうしたLTを通してお互いの空気に触れ合えるのは素晴らしいですね。</p><p>さらに視聴者としてフューチャーグループの内定者や23卒の学生の方も参加いただきました。一緒に盛り上がれて嬉しかったです。ありがとうございます！（またぜひ来てくださいね！！）</p><h2 id="LTとは"><a href="#LTとは" class="headerlink" title="LTとは"></a>LTとは</h2><p>Lightning Talkの略で、5分程度の短いプレゼンテーションと言われています。ライトニングトークの略なのですが、IT界隈ではエルティーと略す人が多いかなと思います。何人集まったらLT”大会”になるのかは諸説あるかと思いますが、6人くらい集まれば大会かなと思っています。</p><p>フューチャー社内では2016年から年2回ほどのペースで開催しています。過去の記事は <a href="https://future-architect.github.io/tags/LT/">LTタグ</a>でまとめていますので、ぜひチェック下さい。</p><p>フューチャー社内LT大会は毎回テーマを定めており、今回は「今だから言えるゴメンナサイ話」でした。基本的にはIT技術に関することを話すような縛りにしています。</p><h2 id="発表資料"><a href="#発表資料" class="headerlink" title="発表資料"></a>発表資料</h2><p>朽方さん、木戸さんお二人の資料は社外公開がOKということで、共有します。楽しそう！</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/dc2393aaa6404c18950c28b2f3fd963d" title="Future LT#12 UUIDは本当に一意を保証してくれるのか？" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 560px; max-width:100%; height: 314px;" data-ratio="1.78343949044586"></iframe><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/0b1408ccc1964167a55e73a703b29637" title="Future LT ~Test Managemanet by GitHub Project for Scrum development~" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 560px; max-width:100%; height: 314px;" data-ratio="1.78343949044586"></iframe><p>当日のコンテンツは以下でした。どれもレベルが高く聞いていて楽しかったです。</p><div class="scroll"><table><thead><tr><th>No</th><th>Title</th><th>Category</th><th>Name</th></tr></thead><tbody><tr><td>1</td><td>問題児！？私という人間を知ってもらう</td><td>オープニングトーク</td><td>柴田健一さん</td></tr><tr><td>2</td><td>最近ホットなコロナウイルスと機械学習の話</td><td>前回優勝特典枠</td><td>玉木竜二さん</td></tr><tr><td>3</td><td>CPUがあたたまる競プロ事例集</td><td>LT</td><td>YDC内藤孝雄さん</td></tr><tr><td>4</td><td>UUIDは本当に一意を保証してくるのか？</td><td>LT</td><td>朽方邦孝さん</td></tr><tr><td>5</td><td>思わぬところで失敗してませんか？</td><td>LT</td><td>YDC土内伸吾さん</td></tr><tr><td>6</td><td>フィッシングメール訓練で遊んでｺﾞﾒﾝﾅｻｲ話</td><td>LT</td><td>井上圭さん</td></tr><tr><td>7</td><td>わいわいAP合格物語</td><td>LT</td><td>後藤田千里さん</td></tr><tr><td>8</td><td>GitHub Projectを使ってイケてるテストライフ</td><td>LT</td><td>木戸俊輔さん</td></tr><tr><td>9</td><td>今だから言える。僕は「行政デジタル改革」なんてものを何も分かって  なかったのだと。</td><td>LT</td><td>井上拓さん</td></tr></tbody></table></div><p>オープニングトーク、前回優勝枠の宣伝タイムは10分間、LTは5分が目安でした。オープニングからクロージングまで大体1.5hくらいの会でした。</p><h2 id="振り返り"><a href="#振り返り" class="headerlink" title="振り返り"></a>振り返り</h2><p>全体で140名弱に参加いただき、最後のアンケートに108名の方が投票、平均して120~130名程度の方に参加頂いたということで非常に熱気にあふれる良いイベントにできたかなと思っています。</p><p>ZoomのコメントでLTに対して皆さん気軽にコメント頂いていたので、まさにお祭り感がでて、登壇者や初見の参加者の方も楽しめたんじゃないかと考えています。</p><h2 id="次回"><a href="#次回" class="headerlink" title="次回"></a>次回</h2><p>年2回ペースでありますので、次回は2022年2~3月に LT2022 Winter を開催したいと思います！登壇者などコンテンツはこれからの検討です。もっと良い運営にしたいと考えていますので、手伝ってくれる方を大募集しています。社内の興味がある方は声をかけてもらえればです。フューチャーLT大会がもっと気になる！って方がいましたら、フューチャーは新卒・キャリア採用両方を積極的に行ってますので、ぜひ入社をお願いします！（お願いします！）</p><p>それでは次回もお会いできることをお楽しみにしています。最後まで読んでいただきありがとうございました。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Culture/">Culture</category>
      
      
      <category domain="https://future-architect.github.io/tags/LT/">LT</category>
      
      <category domain="https://future-architect.github.io/tags/%E7%99%BB%E5%A3%87%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/">登壇レポート</category>
      
      <category domain="https://future-architect.github.io/tags/GitHub/">GitHub</category>
      
      
      <comments>https://future-architect.github.io/articles/20211130a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Qiita Advent Calendar 2021 に参加します</title>
      <link>https://future-architect.github.io/articles/20211129a/</link>
      <guid>https://future-architect.github.io/articles/20211129a/</guid>
      <pubDate>Sun, 28 Nov 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;img src=&quot;/images/20211129a/pexels-torsten-dettlaff-195030.jpg&quot; alt=&quot;&quot; title=&quot;PexelsのTorsten Dettlaffによる写真&quot; width=&quot;1200&quot; height=&quot;800&quot;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/20211129a/pexels-torsten-dettlaff-195030.jpg" alt="" title="PexelsのTorsten Dettlaffによる写真" width="1200" height="800" loading="lazy"><h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>こんにちは。TIG/DXユニット所属の宮永です。</p><p>今年も残すところ１か月、2021年を振り返るとオリンピックやコロナなど様々なことがありました。<br>私事で恐縮ですが、2021年はフューチャーで社会人の第1歩を踏み出した年でもあり、個人としても非常に思い出深い1年となりました。</p><p>さて、そんな激動の2021年を締めくくる12月、フューチャーは今年もQiita主催のアドベントカレンダーに参加します。</p><p>フューチャーがアドベントカレンダーに参加するのは今年で7回目、本記事では<a href="https://qiita.com/advent-calendar/2021">Qiitaアドベントカレンダー</a>の紹介と<a href="https://qiita.com/advent-calendar/2021/future">2021年のフューチャーアドベントカレンダー</a>を紹介します。</p><h1 id="アドベントカレンダーとは"><a href="#アドベントカレンダーとは" class="headerlink" title="アドベントカレンダーとは"></a>アドベントカレンダーとは</h1><p>今回インデックス記事を書かせていただくこととなり知ったのですが、<a href="https://ja.wikipedia.org/wiki/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC">アドベントカレンダー</a>は一般的な用語です。クリスマス当日を待ち望みながら毎日ひとつずつ窓を開けていくカレンダーのことを「アドベントカレンダー」と呼びます。(例:サムネイル画像)</p><blockquote><p><em>アドベントカレンダー (Advent calendar) は、クリスマスまでの期間に日数を数えるために使用されるカレンダーである。待降節の期間（イエス・キリストの降誕を待ち望む期間）に窓を毎日ひとつずつ開けていくカレンダーである。(Wikipedia)</em></p></blockquote><p>Qiitaが主催するアドベントカレンダーは上記のアドベントカレンダーになぞらえて、12月1日から12月25日までエンジニアがリレー方式で記事を投稿していくイベントです。<br>プログラミング言語やクラウドなど技術分野のカテゴリをはじめ、企業や学校など団体ベースのカテゴリがあり、各々気になるテーマのカレンダーに参加し自分の担当日に記事を公開します。</p><p>アドベントカレンダーへの参加方法はシンプルで、気になるカレンダーを探して、投稿したい日を予約するだけです。<a href="https://qiita.com/advent-calendar/2021/categories">こちら</a>からカレンダーを探すことができます。</p><p>アドベントカレンダーへの参加方法の詳細は<a href="https://help.qiita.com/ja/articles/qiita-adcal-join">こちら</a>に記載されているので参考にしてください。<br>参加者が特に気にするポイントは「予約投稿機能」でしょう。限定共有記事で事前にURLを登録しておくことで公開日にやきもきすることなく投稿することができます。</p><h1 id="2020年の振り返り、2021年のカレンダー紹介"><a href="#2020年の振り返り、2021年のカレンダー紹介" class="headerlink" title="2020年の振り返り、2021年のカレンダー紹介"></a>2020年の振り返り、2021年のカレンダー紹介</h1><p>2021年のアドベントカレンダーを紹介する前に2020年のフューチャーのカレンダーを振り返ります。</p><h2 id="2020年の振り返り"><a href="#2020年の振り返り" class="headerlink" title="2020年の振り返り"></a>2020年の振り返り</h2><p>こちらは<a href="https://qiita.com/advent-calendar/2020/future">2020年のアドベントカレンダー</a>です。総合LGTM数は666で企業カテゴリで17位でした。<br>記事のタイトルをざっと眺めてみるとAWSやGCPなどのクラウドサービスのTipsから機械学習やツール紹介、ナレッジ共有など様々です。</p><p>中でも注目すべきは12月24日に投稿されている真野さんの<a href="https://qiita.com/ma91n/items/207f32db1b51754d6933">「テックリードになって気をつけていること」</a>でしょう。LGTM数508という驚異的な数字をたたき出しています。記事は9500文字の大作でタイトルの通り「テックリードになって気を付けていること」をアーキテクチャ設計や開発生産性、メンバーのマネジメントなどの観点からまとめています。</p><img src="/images/20211129a/image.png" alt="2020年カレンダー" width="1200" height="789" loading="lazy"><h2 id="2021年のカレンダー"><a href="#2021年のカレンダー" class="headerlink" title="2021年のカレンダー"></a>2021年のカレンダー</h2><p>こちらが<a href="https://qiita.com/advent-calendar/2021">2021年のアドベントカレンダー</a>です(2021年11月28日現在)。</p><p>昨年同様25日すべて埋めることができました。今年も昨年に引き続きバラエティ豊かなカレンダーになっています。</p><p>参加者は毎年参加しているベテラン勢から今年新卒入社した方(自分含む)まで幅広いです。<br>私も12月19日に「量子コンピュータとジャンケンする」というテーマで参加する予定です。読んでいただけると大変嬉しいです。<br><img src="/images/20211129a/image_2.png" alt="2021年カレンダー" width="1088" height="625" loading="lazy"></p><h1 id="発表テーマについて"><a href="#発表テーマについて" class="headerlink" title="発表テーマについて"></a>発表テーマについて</h1><p><a href="https://future-architect.github.io/articles/20201125/">昨年の記事</a>に発表テーマに関する注意点が記載されていたため引用します。</p><blockquote><p>例年と同じく、IT技術であること以外はフリーテーマです。</p></blockquote><blockquote><p>ポリシーとしては基本的にはQiitaそのものに投稿していただくスタイルですが（順位も少し気にしています）、Qiitaの投稿規約に沿わない記事（エッセー過ぎるもの、プログラミングに関係ないもの）は技術ブログ側に投稿することもあります。このあたりの決めは各人にお願いしています。<br>その他、個人ブログへのリンクは非推奨で基本的にはNGとアナウンスしています。</p></blockquote><p>記事内容に関してはQiitaの投稿規約に照らし合わせて投稿者の裁量に任せているようです。個人ブログへのリンクは基本的にNGなので参加される方は気を付けてください。</p><h1 id="さいごに"><a href="#さいごに" class="headerlink" title="さいごに"></a>さいごに</h1><p>学生時代に眺めていたQiitaのアドベントカレンダー、まさか自分が参加することになるとは思っていませんでした。初参加ということもあり気合が入ります。<br>昨年は企業カテゴリでLGTM数17位だったので今年は10位圏内を目指したいですね。</p><p>多種多様なテーマで埋め尽くされた2021年のフューチャーアドベントカレンダー、良いと思った記事には是非LGTMお願いいたします。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Culture/">Culture</category>
      
      
      <category domain="https://future-architect.github.io/tags/TechBlog/">TechBlog</category>
      
      <category domain="https://future-architect.github.io/tags/Qiita/">Qiita</category>
      
      <category domain="https://future-architect.github.io/tags/%E3%82%A2%E3%83%89%E3%83%99%E3%83%B3%E3%83%88%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC/">アドベントカレンダー</category>
      
      
      <comments>https://future-architect.github.io/articles/20211129a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>フューチャーのスポンサー・協賛活動をまとめてみた</title>
      <link>https://future-architect.github.io/articles/20211125a/</link>
      <guid>https://future-architect.github.io/articles/20211125a/</guid>
      <pubDate>Wed, 24 Nov 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;img src=&quot;/images/20211125a/meeting-g6ae35b33a_640.png&quot; alt=&quot;&quot; title=&quot;TRESOR69によるPixabayからの画像&quot; width=&quot;640&quot; height=&quot;497&quot;&gt;

&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/20211125a/meeting-g6ae35b33a_640.png" alt="" title="TRESOR69によるPixabayからの画像" width="640" height="497"><h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>TIG真野です。2021からみてここ数年（2018年くらいまで）におけるフューチャーのテクノロジー・CS周りのスポンサー情報をまとめました。</p><p>意外とこの手のカットな情報が社内で見当たらず、整理がてらまとめました。表の理由としてはこういった活動をしているということを皆さまにお知らせしたかったのと、これに刺激を受けて特にフューチャーメンバーの人が様々なコミュニティに対して登壇が活発になったり、スポンサー化をリーダー陣に提案する輪が広がると良いなと思っています。裏の理由としてはこういった各活動を技術ブログ化として書いてくれないかといったこと狙っています。すでに「アレこんなことやっているんだ。ブログ書いて欲しかった…」が複数件発生しています。</p><p>内容ですが、学会やフォーラムなどとともにコミュニティベースのカンファレンス一緒にまとめております。他にもビジネス・スポーツ・フォーラムなどいくつか協賛があるかと思いますが、技術系に絞って紹介させてもらいます。また、スポンサー・協賛はしていないもののフューチャーメンバーが運営協力・登壇・寄稿するケースも多数ありますが、それらは除かせていただきます。登壇については<a href="https://future-architect.github.io/tags/%E7%99%BB%E5%A3%87%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/">登壇レポートタグ</a>にまとめています。</p><h2 id="協賛活動リスト"><a href="#協賛活動リスト" class="headerlink" title="協賛活動リスト"></a>協賛活動リスト</h2><p>調査日: 2021.11.22</p><h3 id="協賛・会員（2021年11月時点）"><a href="#協賛・会員（2021年11月時点）" class="headerlink" title="協賛・会員（2021年11月時点）"></a>協賛・会員（2021年11月時点）</h3><p><a href="https://www.future.co.jp/company_profile/corporate_profile/#tab-1">コーポレートサイト</a>にもいくつか記載されています。</p><ul><li><a href="https://www.jdla.org/">日本ディープラーニング協会（JDLA）</a><ul><li><a href="https://www.jdla.org/membership/#membership_No04">ゴールド賛助会員</a></li></ul></li><li><a href="https://www.ai-gakkai.or.jp/">人工知能学会（JSAI）</a><ul><li><a href="https://www.ai-gakkai.or.jp/about/sponsors/">賛助会員</a></li></ul></li><li><a href="https://www.stanford-svnj.org/">スタンフォード大学 シリコンバレーニュージャパンプロジェクト（SVNJ）</a><ul><li><a href="http://www.stanford-svnj.org/sponsors">SUPPORTERS</a></li></ul></li><li><a href="https://www.jmfrri.gr.jp/">ロボット革命イニシアティブ協議会</a><ul><li><a href="https://www.jmfrri.gr.jp/outline/list_of_members.html">会員</a></li></ul></li><li><a href="https://www.ipsj.or.jp/index.html">情報処理学会</a><ul><li><a href="https://www.ipsj.or.jp/annai/aboutipsj/sanjo.html">賛助会員</a></li></ul></li></ul><h3 id="イベント（学会）"><a href="#イベント（学会）" class="headerlink" title="イベント（学会）"></a>イベント（学会）</h3><ul><li>人工知能学会（JSAI）<ul><li><a href="https://www.ai-gakkai.or.jp/jsai2021/sponsor">2021年 プラチナスポンサー</a></li><li><a href="https://www.ai-gakkai.or.jp/jsai2020/sponsor/">2020年 プラチナスポンサー</a></li><li><a href="https://www.ai-gakkai.or.jp/jsai2019/sponsor/">2019年 プラチナスポンサー</a></li><li><a href="https://www.ai-gakkai.or.jp/jsai2018/sponsor/">2018年 プラチナスポンサー</a></li><li>登壇レポート<ul><li><a href="https://future-architect.github.io/articles/20190627/">2019年</a>、<a href="https://future-architect.github.io/articles/20180723/">2018年</a></li></ul></li></ul></li><li>言語処理学会(NLP)<ul><li><a href="https://www.anlp.jp/proceedings/annual_meeting/2021/html/body.html">2021年 27回シルバースポンサー</a></li><li><a href="https://www.anlp.jp/proceedings/annual_meeting/2020/html/body.html">2020年 26回プラチナスポンサー</a></li><li><a href="https://www.anlp.jp/proceedings/annual_meeting/2019/html/body.html">2019年 25回プラチナスポンサー</a></li><li><a href="https://www.anlp.jp/proceedings/annual_meeting/2018/html/body.html">2018年 24回プラチナスポンサー</a></li></ul></li><li>NLP若手の会(YANS)<ul><li>2021, 2020年はオンライン開催のためスポンサー募集なし</li><li><a href="https://yans.anlp.jp/entry/yans2019sponsors">2019年 プラチナスポンサー</a></li><li><a href="https://yans.anlp.jp/entry/yans2018">2018年 ゴールドスポンサー</a></li><li>登壇レポート<ul><li><a href="https://future-architect.github.io/articles/20180912/">2018年</a>、<a href="https://future-architect.github.io/articles/20170922/">2017年</a></li></ul></li></ul></li><li>画像の認識・理解シンポジウム(MIRU)<ul><li><a href="https://sites.google.com/view/miru2020/%E3%83%9B%E3%83%BC%E3%83%A0?authuser=1&pli=1#h.p_nPsjKENmgW7w">2020年 ゴールドスポンサー</a></li><li><a href="http://cvim.ipsj.or.jp/MIRU2019/">2019年 ゴールドスポンサー</a></li></ul></li><li>WebDB Forum<ul><li><a href="https://db-event.jpn.org/webdbf2018/">2018年 プラチナスポンサー</a></li></ul></li><li><a href="https://www.wiss.org/">WISS 日本ソフトウェア科学会インタラクティブシステムとソフトウェア（ISS）研究会</a><ul><li><a href="https://www.wiss.org/WISS2019/">2019年 企業スポンサー</a></li><li><a href="https://www.wiss.org/WISS2018/">2018年 企業スポンサー</a></li></ul></li></ul><h3 id="イベント（ソフトウェア全般）"><a href="#イベント（ソフトウェア全般）" class="headerlink" title="イベント（ソフトウェア全般）"></a>イベント（ソフトウェア全般）</h3><ul><li><a href="https://event.shoeisha.jp/devsumi">Developers Summit</a><ul><li><a href="https://event.shoeisha.jp/devsumi/20200213/sponsor">2020年 ゴールドスポンサー</a></li></ul></li><li><a href="http://asucon.alleyoop.jp/">明日の開発カンファレンス</a><ul><li><a href="http://asucon2018.alleyoop.jp/">2018年 ゴールドスポンサー</a></li></ul></li><li><a href="https://ledge.ai/the-ai-3rd/">THE AI 3rd</a><ul><li><a href="https://ledge.ai/the-ai-3rd/">2019年 プラチナスポンサー</a></li><li><a href="https://ledge.ai/theai-3rd-future/">【登壇記事】AI導入のカギはデジタルトランス フォーメーション。今こそ目の前の現場を見つめなおそう | Ledge.ai</a></li></ul></li><li><a href="https://codeblue.jp/">CODE BLUE</a><ul><li><a href="https://codeblue.jp/2019/sponsors/">2019年 ゴールドスポンサー</a></li><li><a href="https://codeblue.jp/2018/sponsors/">2018年 ゴールドスポンサー</a></li></ul></li><li>サイバー防衛シンポジウム<ul><li><a href="https://www.5th-battlefield.com/summary.html">2021年 協賛</a></li></ul></li><li><a href="https://www.seckansai.com/ucsecquiz/">Ultimate Cyber Security Quiz</a><ul><li><a href="https://www.seckansai.com/ucsecquiz/">2021年 シルバースポンサー</a></li><li><a href="https://www.seckansai.com/ucsecquiz2020/index.html">2020年 シルバースポンサー</a></li><li><a href="https://www.seckansai.com/ucsecquiz2019/index.html">2019年 ゴールドスポンサー</a></li></ul></li><li><a href="https://manabiya.tech/">MANABIYA</a><ul><li><a href="https://manabiya.tech/sponsor">2018年 シルバースポンサー</a></li></ul></li><li><a href="https://atcoder.jp/">AtCoder</a><ul><li>2021年 AGC/ARC/ABC ゴールドスポンサー<ul><li><a href="https://atcoder.jp/contests/arc129">ARC129</a>, <a href="https://atcoder.jp/contests/arc130">ARC130</a></li></ul></li></ul></li></ul><h3 id="イベント（技術要素）"><a href="#イベント（技術要素）" class="headerlink" title="イベント（技術要素）"></a>イベント（技術要素）</h3><ul><li>JAWS Days<ul><li><a href="https://jawsdays2021.jaws-ug.jp/corporate-supporter/future/">2021年 Session Supporter</a></li><li>2020年は開催がキャンセル</li><li><a href="https://jawsdays2019.jaws-ug.jp/supporter/">2019年 Lunch Supporter</a></li></ul></li><li><a href="https://discovery.soracom.jp/">ソラコムディスカバリー</a><ul><li><a href="https://discovery.soracom.jp/sponsor/">2021年 ゴールドスポンサー</a></li><li>登壇動画<ul><li><a href="https://www.youtube.com/watch?v=KX7Icd_2q-E">SORACOM Discovery2021 ｜ 講演「ニチガスの事例解説から知る、データをフル活用した現場業務の変革」</a></li></ul></li></ul></li><li><a href="https://vuefes.jp/">Vue Fes Japan</a><ul><li><a href="https://vuefes.jp/2019/sponsors/">2019年 ランチスポンサー</a></li></ul></li><li><a href="https://jsconf.jp/">JSConf JP</a><ul><li><a href="https://jsconf.jp/2019/">2019年 シルバースポンサー</a></li></ul></li><li>東京Node学園祭<ul><li><a href="https://nodefest.jp/2018/sponsors.html">2018年 ゴールドスポンサー</a></li></ul></li><li><a href="https://gocon.jp/">Go Conference - JP</a><ul><li><a href="https://gocon.jp/2021autumn/">2021年 Autumn: ブロンズスポンサー</a></li><li><a href="https://gocon.jp/2021spring/">2021年 Spring: ブロンズスポンサー</a></li><li>2020年 Autumn: Tofu On Fireスポンサー<ul><li><a href="https://future-architect.github.io/articles/20191203/">Go Conferenceの📛を作る</a> を参考ください</li></ul></li></ul></li><li>golang.tokyo<ul><li>2020年 <a href="https://golangtokyo.connpass.com/event/164955/">#29</a> の回で会場とフードをスポンサー提供</li></ul></li></ul><p>フード・会場提供系のスポンサーは2020年以前は他にも多数あるかと思いますが、調べきれずでした。これもあるということがあればTwitterなどでコメントいただければです。</p><h3 id="イベント（学生さん向け）"><a href="#イベント（学生さん向け）" class="headerlink" title="イベント（学生さん向け）"></a>イベント（学生さん向け）</h3><ul><li>技育祭<ul><li><a href="https://talent.supporterz.jp/geeksai/2021/">2021年 プラチナスポンサー</a></li><li><a href="https://talent.supporterz.jp/geeksai/2020/">2020年 ゴールドスポンサー</a></li><li><a href="https://corp.supporterz.jp/news/2019/geeksai">2019年 ゴールドスポンサー</a></li><li>参加レポート<ul><li><a href="https://future-architect.github.io/articles/20210907a/">技育祭2021に登壇しました </a></li><li><a href="https://future-architect.github.io/articles/20210511a/">技育祭登壇しました。これから機械学習を学びたい方向けへの自分の経験談とおすすめの本、サイトの紹介もします</a></li><li><a href="https://note.future.co.jp/n/nc607f6d10422">技術者を育てるイベント「技育祭2020」参加レポート｜未来報</a></li></ul></li></ul></li><li>未踏ジュニア<ul><li><a href="https://jr.mitou.org/assets/download/flyer_2020.pdf">2020年 シルバースポンサー</a></li><li><a href="https://prtimes.jp/main/html/rd/p/000000007.000022934.html">2019年 ゴールドスポンサー</a></li></ul></li><li>JPHACKS<ul><li><a href="https://jphacks.com/2018/">2018年 ゴールドスポンサー</a></li><li><a href="https://jphacks.com/2018/">2017年 ゴールドスポンサー</a></li></ul></li><li>FRC(FIRST Robotics Competition) RAIJINboticsチーム<ul><li><a href="https://raijin-botics.org/sponsors/">2020年 ゴールドスポンサー</a></li></ul></li></ul><h3 id="その他（賛同）"><a href="#その他（賛同）" class="headerlink" title="その他（賛同）"></a>その他（賛同）</h3><ul><li><a href="https://prtimes.jp/main/html/rd/p/000000026.000028415.html">アルゴリズム実技検定</a></li></ul><h2 id="協賛-スポンサーのキッカケ"><a href="#協賛-スポンサーのキッカケ" class="headerlink" title="協賛/スポンサーのキッカケ"></a>協賛/スポンサーのキッカケ</h2><p>技術系のカンファレンスに関しては、その技術要素に興味があるメンバーが自発的にスポンサーしてはどうか？とSlackなどで投げかけて話が進むことが多いと思います。もちろん、採用チームなどがPR・ブランディング目的で始まったものも多いかと思います。各コミュニティに対して繋がりを持てることは良いですね</p><p>協賛すると、会社ロゴを載せてもらったり、ブースを作っていただけたり、スポンサーセッションの場をいただくことも多く、貴重な機会だなと感じています。</p><h2 id="さいごに"><a href="#さいごに" class="headerlink" title="さいごに"></a>さいごに</h2><p>いつもと違ったカットで情報を整理してみました。フューチャーにはテクノロジー組織のTIGの他にも、AIデータサイエンスを得意とするSAIG、セキュリティのCSIGなどの専門部隊が複数存在し、それぞれが活発に活動していることがよく分かりました。お互いのチームのやっていることを理解しながら、さらに盛り上げていきたいですね。</p><p>今回のまとめのようなものは定期的にアップデートして、業界全体に貢献していければと思います。最後まで読んでいただきありがとうございました。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Culture/">Culture</category>
      
      
      <category domain="https://future-architect.github.io/tags/%E3%82%AB%E3%83%B3%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/">カンファレンス</category>
      
      <category domain="https://future-architect.github.io/tags/OSS/">OSS</category>
      
      <category domain="https://future-architect.github.io/tags/%E5%AD%A6%E4%BC%9A/">学会</category>
      
      <category domain="https://future-architect.github.io/tags/%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B5%E3%83%BC/">スポンサー</category>
      
      
      <comments>https://future-architect.github.io/articles/20211125a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JSレスBootstrapなdaisyUIの秘密</title>
      <link>https://future-architect.github.io/articles/20211124a/</link>
      <guid>https://future-architect.github.io/articles/20211124a/</guid>
      <pubDate>Tue, 23 Nov 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;最近、趣味開発でフロントエンドをいじる場合とか、Reactの技術サポートで手っ取り早く使い捨ての環境を作る場合は次の組み合わせで作っています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://vitejs.dev/&quot;&gt;Vite.js&lt;/a&gt;でReact +</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>最近、趣味開発でフロントエンドをいじる場合とか、Reactの技術サポートで手っ取り早く使い捨ての環境を作る場合は次の組み合わせで作っています。</p><ul><li><a href="https://vitejs.dev/">Vite.js</a>でReact + TypeScriptプロジェクト作成</li><li><a href="https://tailwindcss.com/">Tailwind CSS</a></li></ul><p>これにESLintとPrettierを入れて完了です。何かすごい便利、というよりもJSON設定ファイルいじりを最小にして、手間最小な必要十分なところを狙っています。eslint-config-prettierを入れた後に”prettier”ってESLintの設定に足すところだけは設定ファイルの修正が必要です。</p><p>UI部品は<a href="https://mui.com/">MUI</a>（以前のMaterial UI)を使ったり、WebComponentsベースのものとかいろいろ試していましたが、最近お気に入りなのは<a href="https://daisyui.com/">daisyUI</a>です。</p><img src="/images/20211124a/スクリーンショット_2021-11-17_19.39.55.png" alt="daisyUIトップページ" width="1200" height="842"><p>本記事の執筆にあたっては、<a href="https://twitter.com/wozozo">@wozozo</a>, <a href="https://twitter.com/moriyoshit">@moriyoshit</a>, <a href="https://twitter.com/aodag">@aodag</a>が雑談に乗ってくれましたので、感謝申し上げます。</p><h1 id="Bootstrap風な使い勝手"><a href="#Bootstrap風な使い勝手" class="headerlink" title="Bootstrap風な使い勝手"></a>Bootstrap風な使い勝手</h1><p>Tailwind CSSの設定が終わっていれば、<code>npm install daisyui</code>してからTailwind CSSの設定ファイルに一行足すだけで設定は完了します。</p><figure class="highlight js"><figcaption><span>tailwind.config.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">&#x27;daisyui&#x27;</span>),</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使い方は、CSSのクラスにちょっと書き足すだけで動きます。使い勝手はBootstrapみたいですね。ドキュメントが検索しやすくて、サンプルが豊富で、シンプルに書かれているので、フロントエンドが苦手でCopy And Paste from Stack Overflowな人にも使いやすいと思います。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>neutral<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>primary<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span>&gt;</span>secondary<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-accent&quot;</span>&gt;</span>accent<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-ghost&quot;</span>&gt;</span>ghost<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-link&quot;</span>&gt;</span>link<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/images/20211124a/スクリーンショット_2021-11-17_19.50.40.png" alt="ボタン" width="1200" height="134" loading="lazy"><p>優れている点は、Tailwind CSSに乗っかっているので、CSSの最適化がTailwind CSSのお作法で適切に行われて、サイズが小さいCSSが出力される点と、CSSだけなので、Reactだろうが、Vue.jsだろうが、Svelteだろうが、どんなフレームワークとも食い合わせが悪くなくて、ラッパーライブラリとか不要な点です。標準のHTMLのinput要素とかタグを扱う使い方で自然と扱えます。</p><p>UI部品の種類もそこそこ多いのも嬉しいですね。Headless UIよりも多い。</p><p>デフォルトで普通に使えるデザイン済みの部品が提供されていますが、<a href="https://github.com/saadeghi/daisyui/tree/master/src/components">ソースを見ると</a>、styledと、unstyledというフォルダーがあります。設定で<a href="https://daisyui.com/docs/customize">スタイルをオフにする</a>こともでき、コンポーネントの機構はそのまま利用して、独自デザインも作り込むことができるようになっています。</p><p>ステート管理をReactとかVue.jsとかで作り込まなくても、サンプル通りに置くだけで動作する点もうれしいですね。最近はUI部品はuncontrolledで使うのが流行りっぽいですが、そういう使い方にも合致していると言えます。</p><h1 id="ちょっと待てよ？なんでお前動くの？？？？"><a href="#ちょっと待てよ？なんでお前動くの？？？？" class="headerlink" title="ちょっと待てよ？なんでお前動くの？？？？"></a>ちょっと待てよ？なんでお前動くの？？？？</h1><p>UI部品にはこんなものもあります。</p><ul><li>プルダウンメニュー</li><li>ドロワー（サイズ変更でサイドバーが出たり、ボタンでサイドバーが出たり）</li><li>モーダル（いわゆるダイアログ）</li><li>数字が勝手に減っていくカウントダウン</li></ul><p>設定したときにはCSSの変更しかしてないわけですよ。JavaScriptをロードしたり組み込んだりを一切していない。まあプルダウンメニューぐらいは擬似セレクターでできるというのは想像できるのですが、クリックなしでモーダルとかドロワーとかどうやるんだ？というのがここ数日眠れないほど悩んでいた（嘘です）ことです。</p><p>というわけでコードを読んでみました。まずはドロップダウン。<code>.dropdown-open</code>をつければ開けっ放しになるし、あとはホバー時、フォーカス時に表示、みたいな感じですかね。DOMの擬似セレクタをうまくつかっていますね。</p><figure class="highlight scss"><figcaption><span>/src/components/unstyled/dropdown.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dropdown</span><span class="selector-class">.dropdown-open</span> <span class="selector-class">.dropdown-content</span>,</span><br><span class="line"><span class="selector-class">.dropdown</span><span class="selector-class">.dropdown-hover</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropdown-content</span>,</span><br><span class="line"><span class="selector-class">.dropdown</span><span class="selector-pseudo">:not</span>(.dropdown-hover)<span class="selector-pseudo">:focus</span> <span class="selector-class">.dropdown-content</span>,</span><br><span class="line"><span class="selector-class">.dropdown</span><span class="selector-pseudo">:not</span>(.dropdown-hover)<span class="selector-pseudo">:focus</span>-within <span class="selector-class">.dropdown-content</span>&#123;</span><br><span class="line">  <span class="keyword">@apply</span> visible opacity-<span class="number">100</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ボタンでドロワーが表示される機能は次のようなHTMLで実現します。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;rounded-lg shadow bg-base-200 drawer h-52&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;my-drawer&quot;</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;drawer-toggle&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex flex-col items-center justify-center drawer-content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;my-drawer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary drawer-button&quot;</span>&gt;</span>open menu<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;drawer-side&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;my-drawer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;drawer-overlay&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;menu p-4 overflow-y-auto w-80 bg-base-100 text-base-content&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span>&gt;</span>Menu Item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span>&gt;</span>Menu Item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>チェックボックスとラベルがありますね。ラベルをつけると、場所が離れたinputつまり、チェックボックスの操作ができます。ON/OFFの切り替えはボタンに見えるラベルを使い、ON/OFFの状態管理はチェックボックスを使っておこなっています。ちなみに、この状態管理をしているチェックボックスは非表示要素となっています。</p><figure class="highlight scss"><figcaption><span>/src/components/unstyled/drawer.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.drawer-toggle</span>&#123;</span><br><span class="line">  <span class="keyword">@apply</span> appearance-none opacity-<span class="number">0</span> w-<span class="number">0</span> h-<span class="number">0</span> absolute;</span><br><span class="line">  :</span><br><span class="line">  &amp;:checked&#123;</span><br><span class="line">    &amp; ~ .drawer-side&#123;</span><br><span class="line">      @apply overflow-y-auto;</span><br><span class="line">      &amp;&gt;<span class="selector-class">.drawer-overlay</span>&#123;</span><br><span class="line">        <span class="keyword">@apply</span> visible;</span><br><span class="line">      &#125;</span><br><span class="line">      &amp;&gt;<span class="selector-class">.drawer-overlay</span> + *&#123;</span><br><span class="line">        <span class="keyword">@apply</span> translate-x-<span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最後に、一番摩訶不思議だったモーダルです。モーダルもドロワーみたいなチェックボックスを使うモードもありますが、そうじゃないモードもあります。アンカーリンクモードのコードは次のようになっています。意味不明ですね。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/components/modal#my-modal&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>open modal<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;my-modal&quot;</span> <span class="attr">class</span>=<span class="string">&quot;modal&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Enim dolorem dolorum omnis atque necessitatibus. Consequatur aut adipisci qui iusto illo eaque. Consequatur repudiandae et. Nulla ea quasi eligendi. Saepe velit autem minima.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-action&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/components/modal#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>Accept<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/components/modal#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>種明かしのCSSを見てみると、<code>:target</code>擬似セレクタを使っています。aタグをクリックしたときに選択されている要素であればこのセレクタが発動します。チェックボックスは同じ要素をON/OFFしますが、これであれば、クリックしたのと別の要素を使って選択を外せます。モーダルの場合、表示した後は元の表示ボタンは隠れてしまうわけで、モーダル上のOK/キャンセルボタンを使って閉じたいわけなので、こういう機能になっているのだと思います。</p><figure class="highlight scss"><figcaption><span>/src/components/unstyled/modal.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.modal-open</span>,</span><br><span class="line"><span class="selector-class">.modal</span><span class="selector-pseudo">:target</span>,</span><br><span class="line"><span class="selector-class">.modal-toggle</span><span class="selector-pseudo">:checked</span> + <span class="selector-class">.modal</span>&#123;</span><br><span class="line">  <span class="keyword">@apply</span> visible opacity-<span class="number">100</span> pointer-events-auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>単なるお手軽部品かと思いきや、C++やRustで実装されているブラウザネイティブな機能のみをつかっているということは、ある意味、最速のUIコンポーネントなのでは？</p><h1 id="コードからコントロールしたい場合はどうするか？"><a href="#コードからコントロールしたい場合はどうするか？" class="headerlink" title="コードからコントロールしたい場合はどうするか？"></a>コードからコントロールしたい場合はどうするか？</h1><p>フォーカスやら隠れた<code>&lt;input&gt;</code>タグやら、<code>&lt;label&gt;</code>タグやら、<code>&lt;a&gt;</code>タグやらを使って制御しているということはわかりました。</p><p>例えば、最初のチュートリアルで自動でサイドバーを開きたい、エラーが発生したのでスクリプトからモーダルを開きたい、といった場合はどうすればいいでしょうか？もちろん、これらのタグをDOM経由で操作すれば一応できますが、今まで説明してきたように、かなりトリッキーなタグの使い方をしているので、コードの見た目が変になってしまいますし、ReactとかVue.jsとか、せっかく宣言的な感じで書けるのに、急に手続型っぽくなってしまいます。</p><p>ドロップダウンからは強制的にモードを切り替えるCSSのクラス<code>dropdown-open</code>が提供されているので、このCSSのON/OFFで制御するのが良いと思います。まあ、あとは隠されたチェックボックスをcontrolledフォームにして、この状態をスクリプトで制御するのが良いですかね。</p><h1 id="アクセシビリティの懸念"><a href="#アクセシビリティの懸念" class="headerlink" title="アクセシビリティの懸念"></a>アクセシビリティの懸念</h1><p>紹介したコードは、いくつか、HTMLの元のタグのセマンティクスから外れた使い方をしていました。このようなものは本来はロールをきちんとつけてアクセシビリティに配慮すべきものです。</p><div class="scroll"><table><thead><tr><th align="left">コンポーネント</th><th align="left">付けるべきロール</th></tr></thead><tbody><tr><td align="left"><a href="https://daisyui.com/components/alert">alert</a></td><td align="left"><a href="https://w3c.github.io/aria/#alert">alert</a>ロール</td></tr><tr><td align="left"><a href="https://daisyui.com/components/breadcrumbs">breadcrumbs</a></td><td align="left"><a href="https://w3c.github.io/aria/#navigation">navigation</a>ロール(もしリンク集になっていたら)</td></tr><tr><td align="left"><a href="https://daisyui.com/components/drawer">drawer</a></td><td align="left">サイドバーは<a href="https://w3c.github.io/aria/#menu">menu</a>ロール, <a href="https://w3c.github.io/aria/#button">button</a>ロール(開閉要素), 本体は<a href="https://w3c.github.io/aria/#main">main</a>ロールか<a href="https://w3c.github.io/aria/#document">document</a>ロール, <a href="https://w3c.github.io/aria/#landmark">landmark</a>ロール</td></tr><tr><td align="left"><a href="https://daisyui.com/components/dropdown">dropdown</a></td><td align="left"><a href="https://w3c.github.io/aria/#combobox">combobox</a>ロール</td></tr><tr><td align="left"><a href="https://daisyui.com/components/footer">footer</a></td><td align="left"><a href="https://w3c.github.io/aria/#navigation">navigation</a>ロール</td></tr><tr><td align="left"><a href="https://daisyui.com/components/menu">menu</a></td><td align="left"><a href="https://w3c.github.io/aria/#menu">menu</a>ロール</td></tr><tr><td align="left"><a href="https://daisyui.com/components/modal">modal</a></td><td align="left"><a href="https://w3c.github.io/aria/#dialog">dialog</a>ロールか<a href="https://w3c.github.io/aria/#alertdialog">alertdialog</a>ロール, <a href="https://w3c.github.io/aria/#button">button</a>ロール(開閉要素)</td></tr><tr><td align="left"><a href="https://daisyui.com/components/navbar">navbar</a></td><td align="left"><a href="https://w3c.github.io/aria/#toolbar">toolbar</a>ロール</td></tr><tr><td align="left"><a href="https://daisyui.com/components/tooltip">tooltip</a></td><td align="left"><a href="https://w3c.github.io/aria/#tooltip">tooltip</a>ロール</td></tr></tbody></table></div><p>僕はアクセシビリティの専門家ではないので、もしこれも付与すべき、これよりもこちらの方が良い、というのがあればTwitterのDMか、ここのブログに編集リクエストを送っていただけると助かります。あとは、選べるなら最初からセマンティクスに合致したタグを選ぶというのも手ですね。ドロワーの真ん中のコンテンツのところに<code>&lt;main&gt;</code>とか<code>&lt;content&gt;</code>タグを使うとか。daisyUIのサンプルでも<a href="https://daisyui.com/components/footer">footer</a>は<code>&lt;footer&gt;</code>タグを使っていますし、<a href="https://daisyui.com/components/kbd">kbd</a>は<code>&lt;kbd&gt;</code>タグを使っていますね。</p><p>これは目安で、条件によって別のロールが良かったりとかあると思うのでロール一覧を見て付与するのがよいと思います。</p><p>daisyUIのサイトにPRでも送ってサンプルにロールをつけてもらおうかとも思ってコードのフォークをしていくつかrole属性をつけたりしていたのですが、かつてBootstrapはサンプルにロールを入れていたが、アクセシビリティについてよく知らない人がそのままコピペして広まった結果、アクセシビリティの世間の使われ方が破滅した、ということがあったと聞いたので、自分できちんと考えて付与してください。</p><p>breadcrumbsで、現在ページにはaria-currentもつけたりした方がいいんですかね・・・</p><h1 id="用法容量を守ってご利用ください"><a href="#用法容量を守ってご利用ください" class="headerlink" title="用法容量を守ってご利用ください"></a>用法容量を守ってご利用ください</h1><p>うまく、標準のHTMLの状態管理をハイジャックしてUIの状態管理を実現していることがわかりました。おかげで、JavaScriptを使わずに動くUIを実現している仕組みがわかると同時にアクセシビリティ的には少し行儀が良くないね、というのも見えたと思います。</p><p>裏の仕組みがわかったので、daisyUIを書いていてうまく動かない場合のトラブルシュートも方向性が見えてきたので、今後はもっとうまく使えそうです。</p><p>僕個人はかっこいいCSS書けない勢なので、UI部品は積極的に使いたいし、その方向性でWebComponentsに期待していたところもあったのですが、JSを読み込まずにしゅっと表示できてしまうので、個人的なニーズにはすごく合致しています。ただ、最後に触れたようにアクセシビリティ的にはちょっとあれなので、きちんとロールを付けながら使っていきたいですね。</p><p>ちなみに、紹介しなかった実装面白コンポーネントに<a href="https://daisyui.com/components/countdown">カウントダウン</a>があります。ぜひどう実装されているのか見てみてください。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Programming/">Programming</category>
      
      
      <category domain="https://future-architect.github.io/tags/%E3%83%95%E3%83%AD%E3%83%B3%E3%83%88%E3%82%A8%E3%83%B3%E3%83%89/">フロントエンド</category>
      
      <category domain="https://future-architect.github.io/tags/TailwindCSS/">TailwindCSS</category>
      
      <category domain="https://future-architect.github.io/tags/CSS/">CSS</category>
      
      <category domain="https://future-architect.github.io/tags/daisyUI/">daisyUI</category>
      
      
      <comments>https://future-architect.github.io/articles/20211124a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Go Conference 2021 Autumn にGoの静的解析で登壇しました</title>
      <link>https://future-architect.github.io/articles/20211122a/</link>
      <guid>https://future-architect.github.io/articles/20211122a/</guid>
      <pubDate>Sun, 21 Nov 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;こんにちは、TIGの辻です。渋川、伊藤と同じく &lt;a href=&quot;https://gocon.jp/2021autumn/&quot;&gt;Go Conference Online 2021 Autumn&lt;/a&gt; に登壇しました。Go Conference Autumn</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>こんにちは、TIGの辻です。渋川、伊藤と同じく <a href="https://gocon.jp/2021autumn/">Go Conference Online 2021 Autumn</a> に登壇しました。Go Conference Autumn には2019年にも登壇しているので、2年ぶり2度目の出場になります。</p><p>2019年はGoの特徴である並行処理に焦点を当てた、<a href="/articles/20191120/">Goによる並列のシミュレーテッドアニーニングの実装</a>、というマニアックな内容でしたが、今回はGoの静的解析、という身近なテーマで登壇しました。</p><img src="/images/20211122a/image.png" alt="image.png" width="1200" height="619"><p>スライドは以下です。</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/02845f0d6f7d43fc8a2b12b6da677c94" title="Starting static analysis with Go" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 560px; height: 314px;" data-ratio="1.78343949044586"></iframe><p>静的解析というと、聞いたことはある。実際 <a href="https://github.com/golangci/golangci-lint"><code>golangci-lint</code></a> にはめちゃくちゃお世話になっている。ただ、自分でアドホックな静的解析のモジュールを自作するとなると、めちゃくちゃハードル高いんじゃないの？と思う方が多いと思います。しかし、そんなことはありません。本発表では実際に私がはじめて静的解析のモジュールを自作した経験から、静的解析のモジュールを作るのはハードル高くないよ、ということをお伝えしたくて登壇しました。</p><p>以下は、静的解析のモジュールを作って、現場で活用できるようになったよ、という記事です。<br><a href="https://future-architect.github.io/articles/20210603a/">https://future-architect.github.io/articles/20210603a/</a></p><p>カンファレンスでお伝えしたかったことは以下の2点です。</p><ul><li>Goが提供している順標準ライブラリ(<a href="https://pkg.go.dev/golang.org/x/tools/go/analysis)%E3%82%92%E4%BD%BF%E3%81%8A%E3%81%86%EF%BC%81">https://pkg.go.dev/golang.org/x/tools/go/analysis)を使おう！</a></li><li>Goが提供している静的解析のモジュールのコードを参考にしよう！</li></ul><p>加えて、静的解析のモジュールを実際に実装するときには、エコシステムのライブラリ( <a href="https://github.com/gostaticanalysis/skeleton">gostaticanalysis/skeleton</a> など)を使うと、より効率的に開発ができます。今回は時間の関係上割愛しましたが、このあたりのTipsもどこかでお話しできれば、と思います。</p><p>今回の発表が静的解析をはじめるみなさんの参考になれば嬉しいです。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Programming/">Programming</category>
      
      
      <category domain="https://future-architect.github.io/tags/%E7%99%BB%E5%A3%87%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/">登壇レポート</category>
      
      <category domain="https://future-architect.github.io/tags/%E3%82%AB%E3%83%B3%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/">カンファレンス</category>
      
      <category domain="https://future-architect.github.io/tags/Go/">Go</category>
      
      <category domain="https://future-architect.github.io/tags/GoConference/">GoConference</category>
      
      <category domain="https://future-architect.github.io/tags/%E9%9D%99%E7%9A%84%E8%A7%A3%E6%9E%90/">静的解析</category>
      
      
      <comments>https://future-architect.github.io/articles/20211122a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>「Contextを完全に理解する」というテーマでGo Conference 2021 Autumnに登壇しました</title>
      <link>https://future-architect.github.io/articles/20211119a/</link>
      <guid>https://future-architect.github.io/articles/20211119a/</guid>
      <pubDate>Thu, 18 Nov 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;TIGの伊藤真彦です&lt;/p&gt;
&lt;p&gt;先日&lt;a href=&quot;https://gocon.jp/2021autumn/&quot;&gt;Go Conference 2021 Autumn&lt;/a&gt;に登壇させていただきました、リモート登壇です。&lt;/p&gt;
&lt;img</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>TIGの伊藤真彦です</p><p>先日<a href="https://gocon.jp/2021autumn/">Go Conference 2021 Autumn</a>に登壇させていただきました、リモート登壇です。</p><img src="/images/20211119a/image.png" alt="image.png" width="100%" height="649" loading="lazy"><p>発表資料はこちらです。</p><iframe src="//www.slideshare.net/slideshow/embed_code/key/4pZJNIRQud0Iy0" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/ssuserebd24d1/go-conference-2021-autumn" title="Go conference 2021 autumn" target="_blank">Go conference 2021 autumn</a> </strong> from <strong><a href="https://www.slideshare.net/ssuserebd24d1" target="_blank">masahiko ito</a></strong> </div><h1 id="contextを発表資料に選定した意義"><a href="#contextを発表資料に選定した意義" class="headerlink" title="contextを発表資料に選定した意義"></a>contextを発表資料に選定した意義</h1><p><a href="https://github.com/golang/go/blob/master/src/context/context.go">context</a>はGoでアプリケーションを実装する上でお世話にならない方が少ないくらいのパッケージだと思います。</p><p>一方使いやすいインターフェースであるため、仕組みをよく分かっていなくてもとりあえず使っておけば機能は実装できます。そういったものを自分自身良く知りたい、学べるコンテンツを作りたい、というモチベーションがありました。</p><p>またcontextはgoのパッケージの中では極めてシンプルかつ少ない行数で完結したパッケージです。そしてGoをスマートに実装するテクニック、並行処理の実装方法が少ないコードに詰め込まれています。そのためコードリーディングのコンテンツに適しており、40分の枠内で全てのコードを紹介する事が出来ました。</p><p>contextの基礎的な利用方法も発表の前半に組み込むつもりでしたが、<a href="https://zenn.dev/hsaki/books/golang-context">zennの無料書籍</a>が登場したため、発表はコードの読み取りとそこから得られる知見にフォーカスしました。</p><h1 id="contextのコードリーディングから得られる知見"><a href="#contextのコードリーディングから得られる知見" class="headerlink" title="contextのコードリーディングから得られる知見"></a>contextのコードリーディングから得られる知見</h1><p>600行以下のcontextを読むだけで、以下の内容が学べます。</p><ul><li>Interface</li><li>struct(structにstructを埋め込むなど高度なテクニック)</li><li>型アサーション</li><li>errorを拡張した独自のエラー型</li><li>並行処理(goroutine, channel, sync.Mutex, sync/atomic)</li><li>internal/reflectlite(発表では流しました)</li><li>名前付き戻り値</li></ul><p>これらにな馴染みが無い方は是非contextの実装を読み込んでみていただければと思います。</p><h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><p>勉強になる、contextを教材として採用したい、といった反響を頂けました、目的が達成できたという手ごたえを感じることができました。</p><p>今回のGo Conferenceは<a href="https://remo.co/">remo</a>を使ったバーチャル会場が賑わっており、参加者同士のコミュニケーションも楽しむことができました。</p><p>また次回も参加できるよう精進します。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Programming/">Programming</category>
      
      
      <category domain="https://future-architect.github.io/tags/%E7%99%BB%E5%A3%87%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/">登壇レポート</category>
      
      <category domain="https://future-architect.github.io/tags/%E3%82%AB%E3%83%B3%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/">カンファレンス</category>
      
      <category domain="https://future-architect.github.io/tags/Go/">Go</category>
      
      <category domain="https://future-architect.github.io/tags/GoConference/">GoConference</category>
      
      <category domain="https://future-architect.github.io/tags/CodeReading/">CodeReading</category>
      
      
      <comments>https://future-architect.github.io/articles/20211119a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Go Conference Online 2021 Autumnが開催されました＆作って学ぶシェル</title>
      <link>https://future-architect.github.io/articles/20211118a/</link>
      <guid>https://future-architect.github.io/articles/20211118a/</guid>
      <pubDate>Wed, 17 Nov 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;Go Conference Online 2021</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>Go Conference Online 2021 Autumnが開催されました。スタッフのみなさん、登壇者、参加者のみなさん、お疲れ様でした。フューチャーは今回もブロンズスポンサーでした。また、フューチャーからは伊藤（真）、辻、渋川の三人が登壇しました。</p><img src="/images/20211118a/3I3nVBN6Jla9J7j1636787586_1636787641.png" alt="3I3nVBN6Jla9J7j1636787586_1636787641.png" width="1000" height="514" loading="lazy"><p>その中の、渋川の発表内容を紹介します。タイトルは「Learning Computer Systems by Crafting: Shell 〜作って学ぶシェル〜」で、シェルの動作の紹介をしつつ、自分で実装してみるには、という感じの解説でした。<a href="https://ascii.jp/serialarticles/1235262/">Goならわかるシステムプログラミング</a>（書籍は<a href="https://www.lambdanote.com/products/go">こちら</a>)では詳しく触れていなかったシェルについて詳しく説明する追加コンテンツです。</p><img src="/images/20211118a/image_(15).png" alt="image_(15).png" width="1200" height="646" loading="lazy"><p>発表資料はこちらです。</p><iframe src="https://docs.google.com/presentation/d/e/2PACX-1vTjNhH-Fh3WwUe-hLT777OI4YOAxtG5YUqIfEzt63nwyvzNra-7leKPz4YcwWSuHt-jBJxAbuPliWXg/embed?start=false&loop=false&delayms=3000" frameborder="0" width="95%" height="569" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe><p>Twitter等でたまに話題になるのは、次のようなことです。</p><blockquote><p>「若い人の中にはシェルの概念をあまり知らない人もいる」<br>「はたしてそのような人はどのようなきっかけ（経路）でシェルを知るようになるのか」</p></blockquote><p>踏み台へのsshなど、現在でもシェル操作そのものが要求されますし、コードを書いているとgo mod initなりnpm installなりのいくつかの操作が必要となります。中には、flutterコマンドとか、Gitのように優秀なIDEプラグインやGUIツールのおかげで、「GUIツールだけで済ます」ということも可能な領域もありますが、まだまだそうでない領域もあります。</p><p>シェルを使うにあたっては、いくつものコマンド以外に、内部状態や、裏でシェルがやってくれることを知る必要があります。</p><ul><li>PATH</li><li>環境変数＆変数展開</li><li>ワイルドカード</li><li>パイプ＆リダイレクト　etc…</li></ul><p>今日のセッションでは、この「シェルが何者か」という説明をします。このページに検索して辿り着いた人はシェルが何かがわかっている人の方が多いかもしれませんが、もし周りにシェルがよくわからん、という人がいればこのブログのリンクを送ってもらうような使い方をしてもらえたらな、と思っています。</p><h1 id="シェルとは何か？"><a href="#シェルとは何か？" class="headerlink" title="シェルとは何か？"></a>シェルとは何か？</h1><ul><li>どんなソフトウェアを思い浮かべますか？<ul><li>bash、zsh、fish、黒い怖い画面（コマンドプロンプト）、PowerShell</li></ul></li><li>WindowsのGUI（Explorer.exe）もシェルと呼ばれることもある<ul><li>キオスクモードだと、そこで起動されるアプリケーションも<a href="https://docs.microsoft.com/ja-jp/windows/configuration/kiosk-shelllauncher">シェル</a></li></ul></li><li>PythonやNode.js、Rubyのirbなど、多くのプログラミング言語が備えるREPL（Read-Eval-Print Loop）画面もシェルと呼ばれることもある<ul><li>→Interactive Shell</li></ul></li></ul><p>もともとの意味は人間とコンピュータの境界となるソフトウェアという意味なので、幅広いソフトウェアがシェルと呼ばれます。</p><h1 id="より狭い意味で使われるシェル＝コマンドシェル"><a href="#より狭い意味で使われるシェル＝コマンドシェル" class="headerlink" title="より狭い意味で使われるシェル＝コマンドシェル"></a>より狭い意味で使われるシェル＝コマンドシェル</h1><p>「外部コマンド実行でシェルを利用する」、「シェルを/bin/falseにして、ログインできないシステムユーザーを作る」などの文脈で使われる、開発者がよく目にするCUIのプログラムランチャーがコマンドシェルです。</p><p>いわゆる黒い画面でファイル操作をしたりプログラムを起動したりするソフトウェア（bashとかzsh）。</p><p>Unix系のシェルではファイル管理のコマンド群は外部の独立したコマンドであるが、MS-DOSのcommand.comは内部コマンドでそのような機能も持っています。</p><p>いわゆる「黒い画面」はターミナルエミュレータと呼ばれる別のソフトウェアで、シェルに対してキーボードの入力や画面（文字描画）を提供するものです。「人とソフトウェアの境界」というと、こちらの方がシェルなのでは、という気がしないでもないですが、昔はここは専用のハードウェア(vt100とか)だったこともあり、「本来はハードウェアだが、ソフトウェアでエミュレーションしている」という扱いです。</p><h1 id="もっと狭い定義のシェル-POSIXシェル"><a href="#もっと狭い定義のシェル-POSIXシェル" class="headerlink" title="もっと狭い定義のシェル=POSIXシェル"></a>もっと狭い定義のシェル=POSIXシェル</h1><p><a href="https://pubs.opengroup.org/onlinepubs/9699919799/">Single UNIX Specification</a>(SUS)とも呼ばれる、UNIXを名乗るために必要な規格があります。</p><ul><li>標準準拠のシステムで提供されるべきC言語のヘッダーファイルの一覧</li><li>シェルのコマンド（ユーティリティ）および、シェルの言語仕様</li><li>OSとのやりとりに利用するシステムコールやライブラリ関数の定義</li></ul><p>シェルは人間の入力で動かすものではありますが、この規格の中には、コマンド実行文をテキストファイルに並べて、連続実行するシェルスクリプトやその文法（制御構文など）も定義されています。「シェルスクリプト」と呼ばれるときの「シェル」はこちらです。</p><p>bash/zshなどは「互換シェル」ではあるが、大きく拡張している部分もあれば、非互換なところもあります。</p><p>だいたい、いままで紹介してきたものを並べると以下のような感じになるでしょう。</p><img src="/images/20211118a/スクリーンショット_2021-11-13_16.10.13.png" alt="スクリーンショット_2021-11-13_16.10.13.png" width="1200" height="635" loading="lazy"><p>このエントリーでは主にコマンドシェルとPOSIXシェルについて紹介します。</p><h1 id="コマンドシェルがコマンドを実行するまで"><a href="#コマンドシェルがコマンドを実行するまで" class="headerlink" title="コマンドシェルがコマンドを実行するまで"></a>コマンドシェルがコマンドを実行するまで</h1><p>だいたいこんな感じで処理されているでしょう。</p><ol><li>ユーザーが入力したテキストを取り出す</li><li>コマンドの文字列をパースして、コマンドと引数に分ける</li><li>環境変数参照があれば展開する</li><li>ファイルのワイルドカードがあれば展開する</li><li>コマンドをPATH環境変数で指定されているフォルダから探し出す</li><li>見つけたコマンドに引数を渡して実行する</li></ol><p>まずはユーザーがキーボードからコマンドを入力します。改行が入力されたらそこで1行取り込みます。</p><p>その後、文字列をパースして、コマンドと引数に分けていきます。必要に応じて（エスケープとかに注意しながら）、環境変数があれば展開します。ワイルドカード（<code>*</code>とか<code>？</code>とか)も展開します。展開されるとマッチするファイルのリストに置き換えられます。なお、Windowsのシェルはワイルドカードの展開はシェルは行わず、各プログラムが行います。</p><p>環境変数はマップのような文字列がキーで文字列を値として持つデータ構造で、親プロセスで定義したものが子プロセスに伝搬していきます。あえて子プロセス起動時にリセットしない限りは自動で伝搬していきます。プログラムやシェルスクリプトなどは固定されたままで、外部から必要な設定を差し込むことができるため、今時のクラウド系のシステムでは設定の手段としてかなり活用されています。コンテナの定義時に設定したり、クラウドへのアプリケーションのデプロイ時やインフラの構成時に環境変数が設定できるようになっています。コマンド実行ログにも表示されないため、クレデンシャルを設定する手段としても活用されています。</p><p>PATH環境変数はコロン区切り（Windows以外）、セミコロン区切りでフォルダのパスを列挙して格納します。シェルはこの <code>PATH</code>に登録されているフォルダを先頭から順番に探索して実行を再開します。</p><p>PATH環境変数にフォルダを追加して、実行したいプログラムが発見できるようにすることを「パスを通す」と呼びます。</p><p>それ以外にもいろいろな仕事をしています。</p><ul><li>パイプやリダイレクトの場合、パイプやファイルを開いてファイルディスクリプタをOSに作ってもらい、起動するプロセスに設定する</li><li>ワークフォルダをプロセスに設定する</li><li>環境変数はプロセス起動時のオプションとして設定する</li></ul><p>Goのコードを見ると、gidとかchrootの設定とか、ホストとコンテナ内のUIDとGIDのマッピングとか、プロセスをフォワードに持ってくるとか、いろいろやっていますね。</p><p><a href="https://github.com/golang/go/blob/master/src/syscall/exec_linux.go">https://github.com/golang/go/blob/master/src/syscall/exec_linux.go</a> のforkAndExecInChild1()</p><h1 id="ちょっと裏方っぽいシェルのお仕事"><a href="#ちょっと裏方っぽいシェルのお仕事" class="headerlink" title="ちょっと裏方っぽいシェルのお仕事"></a>ちょっと裏方っぽいシェルのお仕事</h1><p>自作のプログラムから外部プロセスを呼び出すには、「シェルを経由する実行」と、「シェルを経由しない実行」の2つの実行形態があります。プログラミング言語のライブラリをみると、だいたいこっそり書かれています。</p><p>シェル経由で実行の場合、コマンドライン引数の分解はシェルがやってくれるので、パラメータこみで丸ごと起動したいコマンドを単一の文字列を引数として取ります。</p><p>シェルを経由しない実行の場合、直接コマンドを実行します。引数の分解とかはしてくれないため、呼び出し側のプログラムで行う必要があります、引数を文字列の配列として渡す。ただし、コマンドをPATHからの探索はどの言語のライブラリもやってくれそう（Goも）。</p><p>C言語は標準ライブラリの<code>system()</code>はシェル経由、POSIXのunistd.hの<code>exec()</code>ファミリーはシェルを経由しない外部プロセス実行です。Pythonの<code>subprocess.run()</code>とかPHPの<code>proc_open()</code>にはシェルを経由するかどうかのフラグがあります。RubyやDockerは文字列でコマンドを渡すか、配列で渡すかでシェル経由かシェルを経由しないかの動作が変わります。</p><p>Goの<code>os/exec</code>はシェルを経由しない実行のみをサポートしています。シェル経由の実行をエミュレーションするには、次のようにします。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cmd *exec.Cmd</span><br><span class="line"><span class="keyword">if</span> runtime.GOOS == <span class="string">&quot;windows&quot;</span> &#123;</span><br><span class="line">cmd = exec.Command(<span class="string">&quot;cmd.exe&quot;</span>, <span class="string">&quot;/C&quot;</span>, <span class="string">&quot;timeout 5&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">cmd = exec.Command(os.Getenv(<span class="string">&quot;SHELL&quot;</span>), <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;sleep 5&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">cmd.Run()</span><br></pre></td></tr></table></figure><p>PATH環境変数の中のコマンドの探索は裏で自動でやってくれますし、独立した関数（<code>os/exec</code>パッケージの<code>LookPath()</code>関数)としても利用できます。</p><h1 id="コマンドシェルを作ってみよう"><a href="#コマンドシェルを作ってみよう" class="headerlink" title="コマンドシェルを作ってみよう"></a>コマンドシェルを作ってみよう</h1><p>シェルがどのような仕事をしているか説明してきました。それぞれの項目は、次のように実現できます。</p><ul><li><strong>ループでユーザーの入力を受ける</strong></li><li><strong>コマンドと引数を分解</strong></li><li><strong>環境変数を展開</strong></li><li><strong>ワイルドカードを展開</strong></li><li><strong>リダイレクトとパイプ</strong></li><li><strong>環境変数とワークフォルダを設定して実行</strong></li></ul><p>カレントディレクトリや環境変数は子プロセスに渡すものを設定できるが親プロセスの持っている状態は変更できません。シェルから子プロセスを呼び出すときにシェル側の状態を変えることはできないので、カレントディレクトリと環境変数の変更（<code>cd</code>と<code>export</code>)は「内部コマンド」として実装する必要があります。</p><h2 id="ループでユーザーの入力を受ける"><a href="#ループでユーザーの入力を受ける" class="headerlink" title="ループでユーザーの入力を受ける"></a>ループでユーザーの入力を受ける</h2><p><code>github.com/peterh/liner</code>を使いました。”tui golang”あたりでググればいろいろライブラリが出てくるのでお好きなものを選ぶと良いです。<code>fmt.Scanf</code>とかでもいいですが、コード補完とかヒストリーとかいろいろ機能があるのでこの手のライブラリの方が良いです。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/peterh/liner&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">line := liner.NewLiner()</span><br><span class="line">line.SetCtrlCAborts(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">if</span> cmd, err := line.Prompt(<span class="string">&quot; &quot;</span>); err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> cmd == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ここでコマンドを処理する</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> errors.Is(err, io.EOF) &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> err == liner.ErrPromptAborted &#123;</span><br><span class="line">log.Print(<span class="string">&quot;Aborted&quot;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">log.Print(<span class="string">&quot;Error reading line: &quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="コマンドと引数を分解"><a href="#コマンドと引数を分解" class="headerlink" title="コマンドと引数を分解"></a>コマンドと引数を分解</h2><p>コードの分解には<code>github.com/google/shlex</code>を使います。Pythonの標準ライブラリにshlexがあり、どの言語でもたいてい、同様のライブラリはこれの移植で、この名前であることが多いです。大雑把にはこんな感じで使います。自分でパースするのも良いですが、ダブルクオートのエスケープみたいなややこしいものをやってくれるので、使った方が楽ですね。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/google/shlex&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">parseCmd</span><span class="params">(cmdStr)</span> <span class="params">(cmd <span class="keyword">string</span>, args []<span class="keyword">string</span>, err error)</span></span> &#123;</span><br><span class="line">l := shlex.NewLexer(strings.NewReader(cmdStr))</span><br><span class="line">cmd, err = l.Next()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ; token, err := l.Next(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">args = <span class="built_in">append</span>(args, token)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ただし、バッククオート（別のコマンドを実行して、その結果を文字列として引数などに設定する）の中をさらにパースしたり、POSIXシェルのリダイレクトやらパイプをフルサポートするために、次のような記号で文字列を複数のコマンドに分割すると言った処理は頑張る必要があります。オライリーの「Go言語でつくるインタプリタ」を読んで、ステートマシンを作る練習に最適です。</p><ul><li><code>|</code> <code>;</code> <code>||</code> <code>&amp;&amp;</code> <code>&lt;</code> <code>&gt;</code> <code>&gt;&gt;</code> <code>2&gt;</code> <code>2&gt;&gt;</code> <code>&amp;&gt;</code> <code>&amp;&gt;&gt;</code></li></ul><h2 id="環境変数を展開"><a href="#環境変数を展開" class="headerlink" title="環境変数を展開"></a>環境変数を展開</h2><p>通常のプログラムであれば、<code>os.ExpandEnv()</code>を使えば文字列中の環境変数（<code>$&#123;ENV&#125;</code>)を環境変数の値に置き換えてくれます。しかし、これはGoのプログラムのプロセス自体が持っている環境変数をもとにしてしまいます。シェルは自分の子プロセスのための環境変数を持つものなのでこれは使えません。<code>os.ExpandEnv()</code>の低レベル版の<code>os.Expand()</code>であれば、変換するキーと値の交換を関数で指定するのでこれが使えます。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> args []<span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> env <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span> <span class="comment">// ←ここに環境変数が入っているものとする</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, arg := <span class="keyword">range</span> origArgs &#123;</span><br><span class="line">p.Args = <span class="built_in">append</span>(p.Args, os.Expand(arg, <span class="function"><span class="keyword">func</span><span class="params">(key <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> env[key]</span><br><span class="line">&#125;))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ワイルドカードを展開"><a href="#ワイルドカードを展開" class="headerlink" title="ワイルドカードを展開"></a>ワイルドカードを展開</h2><p><code>path/filepath</code>か、<code>io/fs</code>の<code>Glob()</code>関数でワイルドカード(<code>*</code>, <code>?</code>, <code>[]</code>)展開ができます。シェルはマッチするファイルのリストに展開するので、引数の数が膨れることがあります。Globでマッチする前に、パスを絶対パスにしておきます。そうでないと、作業フォルダが現在のシェル自身の作業フォルダとずれている場合に、相対パスでマッチするファイルが変わってしまうので要注意です。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">expandPath</span><span class="params">(dir, workDir <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> filepath.IsAbs(path) &#123;</span><br><span class="line"><span class="keyword">return</span> path</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> filepath.Join(workDir, path)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">expandWildcard</span><span class="params">(arg, workDir <span class="keyword">string</span>)</span> <span class="params">([]<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> !strings.ContainsAny(arg, <span class="string">&quot;*?[&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> []<span class="keyword">string</span>&#123;arg&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">files, err := filepath.Glob(expandPath(arg, workDir))</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(files) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, ErrWildcardNoMatchError</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> files, err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="リダイレクトとパイプ"><a href="#リダイレクトとパイプ" class="headerlink" title="リダイレクトとパイプ"></a>リダイレクトとパイプ</h2><p>パイプ(<code>|</code>)がコマンド列にあったら、前のコマンドの標準出力の結果を、次のコマンドの標準入力に直接流し込む指定になります。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">reader, writer := io.Pipe()</span><br><span class="line">c1.Stdout = writer</span><br><span class="line">c2.Stdin = reader</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line">wg.Add(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">c1.Start()</span><br><span class="line">c1.Wait()</span><br><span class="line">writer.Close()</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;()</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">c2.Start()</span><br><span class="line">c2.Wait()</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;()</span><br><span class="line">wg.Wait()</span><br></pre></td></tr></table></figure><p>標準出力のリダイレクトの場合、ファイルを開いて、標準出力につなげます。<code>&gt; FILE</code>という形式であれば上書きなので<code>O_TRUNC</code>フラグをつけます。<code>&gt;&gt; FILE</code>という形式であれば、<code>O_APPEND</code>をつけます。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">flag := os.O_CREATE | os.O_WRONLY</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">append</span> &#123;</span><br><span class="line">flag += os.O_APPEND</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">flag += os.O_TRUNC</span><br><span class="line">&#125;</span><br><span class="line">f, err := os.OpenFile(p.Shell.ExpandPath(path), flag, <span class="number">0</span>o777)</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">c.Stdout = f</span><br><span class="line">c.Start()</span><br><span class="line">c.Wait()</span><br></pre></td></tr></table></figure><h2 id="環境変数とワークフォルダを設定して実行"><a href="#環境変数とワークフォルダを設定して実行" class="headerlink" title="環境変数とワークフォルダを設定して実行"></a>環境変数とワークフォルダを設定して実行</h2><p>これは通常の<code>os/exec</code>の<code>Cmd</code>構造体（<code>exec.CommandContext()</code>のレスポンス)の<code>Dir</code>と<code>Env</code>に格納してあげると、実行時に考慮されます。<code>Start()</code>を呼ぶ前に設定しましょう。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmd.Dir = workDir</span><br><span class="line"><span class="keyword">var</span> env []<span class="keyword">string</span></span><br><span class="line"><span class="keyword">for</span> key, value := <span class="keyword">range</span> envs &#123;</span><br><span class="line">env = <span class="built_in">append</span>(env, key + <span class="string">&quot;=&quot;</span> + value)</span><br><span class="line">&#125;</span><br><span class="line">cmd.Env = env</span><br></pre></td></tr></table></figure><h1 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h1><p>これらのコーディングの要素を駆使すればコマンドシェルが実装できるでしょう。コマンドをパースしたタイミングで、内部コマンドとして実装したコマンドがあればそれを、なければ外部コマンドの実行をするようにすることになるでしょう。内部コマンドが充実すればするほど、OS間のポータビリティもあがると思います。</p><p>一年ぐらい前に、Markdownに書かれているコード片をパースして処理する処理系作れば、Go関連のタスク実行の手段でmakeを使っている代わりが作れるのではないか、ということで、ぼちぼち調べたりしていました。Markdownなら、文芸的プログラミング的だし、きっとメンテナンス性も良いだろうと。ただし作るからにはある程度インストール系のタスクで使われるコマンドをいろいろ内部コマンドとして作り込もうとしたり、リダイレクトとかバッククオートとかいろいろ対応しなきゃ、ということで長らくのんびり作業をしておりました。</p><p>それはそうと、「シェルをどう学べばいいか」というTwitterで話題になることについて、「内部の挙動を知れば解になるだろう」ということでシェルっぽいものを作っていた知識を書き出してみたのが今回の発表です。もちろん、トップダウンで使い方から学ぶ方が良い人もいれば、今回のようにボトムアップで学んだ方がイメージがつきやすい人もいるはずで、後者の人のヒントになれば、と思っています。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Programming/">Programming</category>
      
      
      <category domain="https://future-architect.github.io/tags/%E7%99%BB%E5%A3%87%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/">登壇レポート</category>
      
      <category domain="https://future-architect.github.io/tags/%E3%82%AB%E3%83%B3%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/">カンファレンス</category>
      
      <category domain="https://future-architect.github.io/tags/Go/">Go</category>
      
      <category domain="https://future-architect.github.io/tags/GoConference/">GoConference</category>
      
      <category domain="https://future-architect.github.io/tags/ShellScript/">ShellScript</category>
      
      <category domain="https://future-architect.github.io/tags/%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0/">システムプログラム</category>
      
      
      <comments>https://future-architect.github.io/articles/20211118a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JFPUGオープンセミナー2021 DX時代のプロジェクトのあり方で登壇しました</title>
      <link>https://future-architect.github.io/articles/20211117a/</link>
      <guid>https://future-architect.github.io/articles/20211117a/</guid>
      <pubDate>Tue, 16 Nov 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;img src=&quot;/images/20211117a/top.png&quot; alt=&quot;.png&quot; width=&quot;1182&quot; height=&quot;220&quot; loading=&quot;lazy&quot;&gt;

&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/20211117a/top.png" alt=".png" width="1182" height="220" loading="lazy"><h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>TIG DXユニットの真野です。同僚の長坂さんからの紹介があり<a href="http://www.jfpug.gr.jp/app-def/S-102/wp/?page_id=2361">JFPUGオープンセミナー2021～DX時代のプロジェクトのあり方～</a> にて、「DX時代の開発と品質。アジャイルでどう品質を担保するか」というテーマにて登壇しました。</p><p>登壇枠は50分（発表45分、質疑応答5分）でして、当日はZoomにてリモートから発表させていただきました。おおよそ200名ほどの皆様の前で話させていただけて本当に貴重な機会をいただけたなと感じています。ユーザーグループ及び参加者の皆さまに感謝をしております。</p><h2 id="JFPUGとは"><a href="#JFPUGとは" class="headerlink" title="JFPUGとは"></a>JFPUGとは</h2><p><a href="http://www.jfpug.gr.jp/app-def/S-102/wp/?page_id=27">JFPUGの紹介ページ</a>から引用します。</p><p>JFPUGとはJapan Function Point User Group（日本ファンクションユーザ会）の略で、<strong>ファンクションポイント法に関して、IFPUG法の日本国内における理解と普及、その利用法の検討及びソフトウェア計測の検討を主な目的とし、これを通して会員相互の情報交換と親睦を図る</strong> ことを目的としているユーザ会です。</p><p>IFPUG法についても補足します。</p><p>IFPUGとは主に以下の特徴を持つ見積もり方法です。</p><ul><li>アプリケーションプログラムの大きさに相当する量を、プログラムの入出力とデータの集合によって表す方法のこと</li><li>ISOではFunctional Size Measurementとも呼ばれています。日本ではFP法と略すことも多いと思います</li></ul><p>興味が有る方は、<a href="https://www.ipa.go.jp/sec/publish/tn05-001.html">SEC BOOKS：ソフトウェア開発見積りガイドブック：IPA 独立行政法人 情報処理推進機構</a> にあるPDFの p81（PDF上の物理ページはp51）に説明があります。</p><h2 id="オープンセミナー「DX時代のプロジェクトのあり方」の趣旨"><a href="#オープンセミナー「DX時代のプロジェクトのあり方」の趣旨" class="headerlink" title="オープンセミナー「ＤＸ時代のプロジェクトのあり方」の趣旨"></a>オープンセミナー「ＤＸ時代のプロジェクトのあり方」の趣旨</h2><p>「DX時代のプロジェクトのあり方」と題し、ユーザー視点、開発担当視点、運用担当視点の3視点から、DX時代のプロジェクトのあり方を考えていきます。デジタル変革がプロジェクトのあり方にどのような影響をもたらすのかを、あらためて考える絶好の機会として企画されました。</p><p>私はこのうちの、開発担当視点として登壇させていただきました。実際に開発していますし、すこしテックリード/EMのようなロールも増えてきたのでちょうどよい塩梅だったと思っています。同僚の長坂さんからは <a href="https://future-architect.github.io/articles/20210804b/">Future Tech Night #13「アジャイルと品質保証を考える勉強会」 | フューチャー技術ブログ</a> で登壇した内容をアップデートして登壇したら？というお声がけでしたのでアジャイル開発中心に話しました。</p><h2 id="登壇資料"><a href="#登壇資料" class="headerlink" title="登壇資料"></a>登壇資料</h2><iframe src="https://docs.google.com/presentation/d/e/2PACX-1vTh-lBCsGgGrv1RbHIW5IswYUAUspM7O9cpadSV8eDkZ_s7J6aiWCI0kx7Xnb526ABxeCbbCkL2UhLl/embed?start=false&loop=false&delayms=3000" frameborder="0" width="95%" height="569" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe><h2 id="頂いた質問"><a href="#頂いた質問" class="headerlink" title="頂いた質問"></a>頂いた質問</h2><p>お二人の方から質問をいただけました。反応をいただけて嬉しいです</p><ul><li>アジャイルの場合の契約はどうするのか？<ul><li>請負、準委任のどちらか？という意図可と思いました。DX案件でアジャイルだと準委任が適切かなと回答しました</li></ul></li><li>見積もり方法についてのコツがあるか<ul><li>プランニングポーカー（ある意味で2点見積りの一種）というアジャイルの見積もり方法を共有しました</li><li>もう少しFP法と絡めた回答をご期待されていそうな気がしますが、、こちらは私も手探りなところがあります<ul><li>あまり見積もりをしっかりしようとすると、見積もり詳細設計バックログを作りたくなるので痛し痒し</li></ul></li></ul></li></ul><h2 id="おわりに"><a href="#おわりに" class="headerlink" title="おわりに"></a>おわりに</h2><p>普段はconnpassで募集されているようなGo言語などのコミュニティベースの勉強会に参加することが多いですが、こういった少しソフトウェア工学よりの勉強会への参加は久しぶりで、他の登壇者の方の発表も含めて刺激をもらいました。</p><p>FP法のような科学的手法もうまく組み合わせて、自分自身の開発手法もアップデートしたいと思います。例えばプランニングポーカーで算出したベロシティと、FP法で算出した値を比較し、相関についてや見積もりについての妥当性があるかなどは実験しても面白いなと感じています。</p><p>関係者みなさま、ありがとうございました！</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/DevOps/">DevOps</category>
      
      
      <category domain="https://future-architect.github.io/tags/%E7%99%BB%E5%A3%87%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/">登壇レポート</category>
      
      <category domain="https://future-architect.github.io/tags/%E3%82%A2%E3%82%B8%E3%83%A3%E3%82%A4%E3%83%AB/">アジャイル</category>
      
      <category domain="https://future-architect.github.io/tags/JFPUG/">JFPUG</category>
      
      
      <comments>https://future-architect.github.io/articles/20211117a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Go言語によるCFB8暗号化</title>
      <link>https://future-architect.github.io/articles/20211116a/</link>
      <guid>https://future-architect.github.io/articles/20211116a/</guid>
      <pubDate>Mon, 15 Nov 2021 15:00:00 GMT</pubDate>
      
        
        
          
          
      <description>&lt;img src=&quot;/images/20211116a/cfb.png&quot; alt=&quot;&quot; width=&quot;798&quot; height=&quot;420&quot;&gt;

&lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/20211116a/cfb.png" alt="" width="798" height="420"><h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>こんにちは。2020年1月にキャリア入社した、TIGの八巻です。今年初めて、プロジェクトでGo言語に触れました。Go言語初心者です。</p><p>プロジェクトで利用したデータ取得のAPIで、リクエストパラメータを暗号化利用モード「CFB8」で暗号化する必要がありました。この暗号化利用モード「CFB8」をGo言語で実装する際に躓いたため、実装内容を備忘として記載したいと思います。</p><h1 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h1><ul><li>CFB暗号化利用モードについて</li><li>Go言語での実装</li><li>まとめ</li></ul><h1 id="CFB暗号化利用モードについて"><a href="#CFB暗号化利用モードについて" class="headerlink" title="CFB暗号化利用モードについて"></a>CFB暗号化利用モードについて</h1><p>まず、暗号利用モードとは、ブロック暗号を繰り返し利用することで、一定のブロック長よりも長いメッセージを暗号化するメカニズムのことで、CFB(Cipher Feedback Mode)もその一つです。CFBの他に、ECB、CBC、OFBなどの暗号化利用モードがありますが、これらは、FIPS(Federal Information Processing Standards)で標準化されています。</p><p>※<a href="https://csrc.nist.gov/csrc/media/publications/fips/81/archive/1980-12-02/documents/fips81.pdf">FIPS PUB-81</a></p><p>CFBモードは、1つ前の暗号文ブロックを暗号化アルゴリズムの入力に戻し、次の平文ブロックとのXORを取って暗号ブロックとして出力します。最初の暗号文ブロックを作る時は、１つ前の暗号文ブロックが存在しないため、初期ベクトル(iv)と呼ばれるランダムなビット列を使用します。この暗号ブロックを入力に戻すのがCFBモードの特徴です。</p><h1 id="Go言語での実装"><a href="#Go言語での実装" class="headerlink" title="Go言語での実装"></a>Go言語での実装</h1><h3 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h3><p>本記事では以下の環境で行いました。<br>OS： macOS Big Sur 11.4<br>Go：1.17</p><h3 id="Go言語でのCFB8のブロック暗号化"><a href="#Go言語でのCFB8のブロック暗号化" class="headerlink" title="Go言語でのCFB8のブロック暗号化"></a>Go言語でのCFB8のブロック暗号化</h3><p>Goの「crypto/cipher」パッケージに記載されている<a href="https://pkg.go.dev/crypto/cipher#example-NewCFBEncrypter">サンプルコード</a>では、CFB8の暗号文を得られなかったのが、プロジェクトでの躓きポイントでした。CFB8では、セグメントサイズが8ビットとなるようですが、Goの「crypto/cipher」パッケージにあるサンプルのままでは対応していないらしく、手を加える必要がありました。</p><p>※ここで言うセグメントサイズは、暗号文と平文をXORで結合するビット数のことを指します。<br>(この辺り、もう少し深く理解したい。)</p><p>CFB8での実装例は以下となります。</p><figure class="highlight go"><figcaption><span>main.go</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;crypto/aes&quot;</span></span><br><span class="line">  <span class="string">&quot;crypto/cipher&quot;</span></span><br><span class="line">  <span class="string">&quot;crypto/rand&quot;</span></span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">  <span class="string">&quot;io&quot;</span></span><br><span class="line">  <span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> cfb8 <span class="keyword">struct</span> &#123;</span><br><span class="line">  b         cipher.Block</span><br><span class="line">  blockSize <span class="keyword">int</span></span><br><span class="line">  in        []<span class="keyword">byte</span></span><br><span class="line">  out       []<span class="keyword">byte</span></span><br><span class="line"></span><br><span class="line">  decrypt <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> plaintext <span class="keyword">string</span> = <span class="string">&quot;平文の文字列&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  key := []<span class="keyword">byte</span>(<span class="string">&quot;0123456789ABCDEF&quot;</span>)</span><br><span class="line">  block, err := aes.NewCipher(key)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ciphertext := <span class="built_in">make</span>([]<span class="keyword">byte</span>, aes.BlockSize+<span class="built_in">len</span>(plaintext))</span><br><span class="line">  iv := ciphertext[:aes.BlockSize]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> _, err = io.ReadFull(rand.Reader, iv); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  stream := newCFB8Encrypter(block, iv)</span><br><span class="line">  stream.XORKeyStream(ciphertext[aes.BlockSize:], []<span class="keyword">byte</span>(plaintext))</span><br><span class="line">  fmt.Printf(<span class="string">&quot;Encrypted result:%x\n&quot;</span>, plaintext)</span><br><span class="line"></span><br><span class="line">  stream = newCFB8Decrypter(block, iv)</span><br><span class="line">  stream.XORKeyStream([]<span class="keyword">byte</span>(plaintext), ciphertext[aes.BlockSize:])</span><br><span class="line">  fmt.Printf(<span class="string">&quot;Decrypted result:%s\n&quot;</span>, plaintext)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newCFB8Encrypter</span><span class="params">(block cipher.Block, iv []<span class="keyword">byte</span>)</span> <span class="title">cipher</span>.<span class="title">Stream</span></span> &#123;</span><br><span class="line">  <span class="keyword">return</span> newCFB8(block, iv, <span class="literal">false</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newCFB8Decrypter</span><span class="params">(block cipher.Block, iv []<span class="keyword">byte</span>)</span> <span class="title">cipher</span>.<span class="title">Stream</span></span> &#123;</span><br><span class="line">  <span class="keyword">return</span> newCFB8(block, iv, <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newCFB8</span><span class="params">(block cipher.Block, iv []<span class="keyword">byte</span>, decrypt <span class="keyword">bool</span>)</span> <span class="title">cipher</span>.<span class="title">Stream</span></span> &#123;</span><br><span class="line">  blockSize := block.BlockSize()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(iv) != blockSize &#123;</span><br><span class="line">    <span class="built_in">panic</span>(<span class="string">&quot;cipher.newCFB: IV length must equal block size&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  x := &amp;cfb8&#123;</span><br><span class="line">    b:         block,</span><br><span class="line">    blockSize: blockSize,</span><br><span class="line">    out:       <span class="built_in">make</span>([]<span class="keyword">byte</span>, blockSize),</span><br><span class="line">    in:        <span class="built_in">make</span>([]<span class="keyword">byte</span>, blockSize),</span><br><span class="line">    decrypt:   decrypt,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">copy</span>(x.in, iv)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(x *cfb8)</span> <span class="title">XORKeyStream</span><span class="params">(dst, src []<span class="keyword">byte</span>)</span></span> &#123;</span><br><span class="line">  <span class="keyword">for</span> i := <span class="keyword">range</span> src &#123;</span><br><span class="line">    x.b.Encrypt(x.out, x.in)</span><br><span class="line">    <span class="built_in">copy</span>(x.in[:x.blockSize<span class="number">-1</span>], x.in[<span class="number">1</span>:])</span><br><span class="line">    <span class="keyword">if</span> x.decrypt &#123;</span><br><span class="line">      x.in[x.blockSize<span class="number">-1</span>] = src[i]</span><br><span class="line">    &#125;</span><br><span class="line">    dst[i] = src[i] ^ x.out[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> !x.decrypt &#123;</span><br><span class="line">      x.in[x.blockSize<span class="number">-1</span>] = dst[i]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>※keyは、長さは16、24、32バイトのいずれかである必要があります。ここでは便宜上「0~F」の16文字を設定しています。</p><p>参考：<a href="https://stackoverflow.com/questions/23897809/different-results-in-go-and-pycrypto-when-using-aes-cfb">https://stackoverflow.com/questions/23897809/different-results-in-go-and-pycrypto-when-using-aes-cfb</a></p><p>実行結果は、以下のようになります。</p><figure class="highlight plaintext"><figcaption><span>実行結果</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Encrypted result:e5b9b3e69687e381aee69687e5ad97e58897</span><br><span class="line">Decrypted result:平文の文字列</span><br></pre></td></tr></table></figure><h1 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h1><p>今回は、Go言語での「CFB8」の実装について記載させていただきました。</p><p>言語やパッケージによっても、暗号化利用モードの細かい部分に違いがあることがわかりました。</p><p>ニッチな内容ではありますが、Go言語でCFB8での暗号化が必要になった方のお役にたてば幸いです。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Programming/">Programming</category>
      
      
      <category domain="https://future-architect.github.io/tags/Go/">Go</category>
      
      <category domain="https://future-architect.github.io/tags/%E6%9A%97%E5%8F%B7/">暗号</category>
      
      <category domain="https://future-architect.github.io/tags/CFB/">CFB</category>
      
      
      <comments>https://future-architect.github.io/articles/20211116a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>IBM Quantum Challenge Fall 2021参加レポート</title>
      <link>https://future-architect.github.io/articles/20211115b/</link>
      <guid>https://future-architect.github.io/articles/20211115b/</guid>
      <pubDate>Sun, 14 Nov 2021 15:00:01 GMT</pubDate>
      
        
        
          
          
      <description>&lt;img src=&quot;/images/20211115b/ibm-quantum-challenge-fall-2021-advanced.png&quot; alt=&quot;ibm-quantum-challenge-fall-2021-advanced.png&quot; width=&quot;600&quot;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/20211115b/ibm-quantum-challenge-fall-2021-advanced.png" alt="ibm-quantum-challenge-fall-2021-advanced.png" width="600" height="600"><h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>こんにちは。TIG/DXユニット所属の宮永です。</p><p>本記事は2021年10月27日~11月5日に開催された<a href="https://ibm.co/challenge-fall-21%E3%80%80">IBM Quantum Challenge Fall 2021</a>の参加レポートです。</p><p>イベントで出題された問題は<a href="https://github.com/qiskit-community/ibm-quantum-challenge-fall-2021">GitHubリポジトリ</a>に格納されているため、参考にしてください。</p><h1 id="執筆の動機"><a href="#執筆の動機" class="headerlink" title="執筆の動機"></a>執筆の動機</h1><p>本記事の執筆の動機は多くの人にこの素晴らしいイベントを知ってもらい、参加していただきたいと思ったためです。</p><p>私自身は当イベントへの参加は前回と今回、2回の参加経験しかないですが、<a href="https://ibm.co/challenge-fall-21%E3%80%80">IBM Quantum Challenge Fall 2021</a>は前回大会に比べ、より広い層の方が取り組みやすい内容となっており、量子計算入門者でも十分に楽しめる内容となっていました。</p><p>フューチャーに多数在籍している競プロer出身の方々にも興味を持っていただけるのではないかと思い、執筆しました。<br>よろしくお願いいたします。</p><h1 id="大会の概要"><a href="#大会の概要" class="headerlink" title="大会の概要"></a>大会の概要</h1><p>大会の概要はこちらに記載されています。</p><ul><li><a href="https://www.ibm.com/blogs/think/jp-ja/fall2021-quantum-challenge-japan/">量子プログラミング・コンテスト開催 | THINK Blog Japan</a></li></ul><p>IBM Quantum ChallengeはIBM社が開発を進めている量子計算パッケージ<a href="https://qiskit.org/">Qiskit</a>を使用し、与えられた課題を解いてくハッカソン形式の大会です。全世界同時開催されており、<a href="https://ibm.co/challenge-fall-21%E3%80%80">IBM Quantum Challenge Fall 2021</a>では約1300名が10日間、頭を悩ませ、問題に挑戦しました。</p><p><a href="https://ibm.co/challenge-fall-21%E3%80%80">IBM Quantum Challenge Fall 2021</a>では「金融」、「化学」、「機械学習」、「最適化」に関する全4問の課題が出題されました。全4問の課題はチュートリアル形式になっており、参加者は与えられたヒントや参考文献をもとに問題を解いていきます。中には論文片手に解き進める問題もあり、入門者から上級者まで楽しめるようになっています。</p><p>大会終了後は参加者の解答状況によってサムネイルのようなバッチが進呈されます。こういったイベントも参加者のモチベーションになり、とても良いですね。</p><p>さらに、全4問を解き終えると最終問題として超難問が用意されています。この最終問題についてはスコアが用意されており、より良いスコアをたたき出したトップ10名は<a href="https://github.com/qiskit-community/ibm-quantum-challenge-fall-2021">イベントのリポジトリ</a>に掲載されます。</p><h1 id="問題の内容と所感"><a href="#問題の内容と所感" class="headerlink" title="問題の内容と所感"></a>問題の内容と所感</h1><p>参考までにどのような問題が出題されたのか一例を抜粋します。</p><p>以下、公式から抜粋した「最適化」の問題です。</p><blockquote><p>2つの市場<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="3.182ex" height="1.885ex" role="img" focusable="false" viewBox="0 -683 1406.6 833"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1003,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container> , <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="3.182ex" height="1.885ex" role="img" focusable="false" viewBox="0 -683 1406.6 833"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1003,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg></mjx-container> を考えます。時間枠は最大<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>個あり、電池は各時間枠（通常は1日）において、どちらか一方の市場で動作します。毎日が独立しているとみなされ、1日のうちの最適化は別の問題とみなします。毎朝、電池は同じレベルの電力でスタートするため、充電の問題は考慮しません。 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>個の時間枠で2つの市場が利用可能と予測するため、各時間枠<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.817ex" height="1.441ex" role="img" focusable="false" viewBox="0 -626 361 637"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></svg></mjx-container>（日）と各市場において、以下が既知であると仮定します：<br>日々の収益 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.669ex" xmlns="http://www.w3.org/2000/svg" width="2.307ex" height="2.492ex" role="img" focusable="false" viewBox="0 -805.6 1019.6 1101.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="TeXAtom" transform="translate(616,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(616,-295.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container> , <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.669ex" xmlns="http://www.w3.org/2000/svg" width="2.307ex" height="2.492ex" role="img" focusable="false" viewBox="0 -805.6 1019.6 1101.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="TeXAtom" transform="translate(616,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(616,-295.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg></mjx-container><br>電池の日々の劣化、または健康コスト（サイクル数）<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.669ex" xmlns="http://www.w3.org/2000/svg" width="1.967ex" height="2.492ex" role="img" focusable="false" viewBox="0 -805.6 869.6 1101.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(466,-295.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container>, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.669ex" xmlns="http://www.w3.org/2000/svg" width="1.967ex" height="2.492ex" role="img" focusable="false" viewBox="0 -805.6 869.6 1101.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(466,-295.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg></mjx-container><br>私たちは、最適なスケジュールを見つけたい、つまり<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="4.971ex" height="1.952ex" role="img" focusable="false" viewBox="0 -705 2197.4 862.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1407,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></g></g></svg></mjx-container>サイクル以下のコストで寿命時間と収益を最適化したいです。ここで、<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="16.639ex" height="2.501ex" role="img" focusable="false" viewBox="0 -855.6 7354.6 1105.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(797.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1853.6,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2731.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="msub" transform="translate(3260.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4170.8,0)"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4670.8,0)"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(466,-247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(869.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msubsup" transform="translate(1314.2,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(466,-247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(6854.6,0)"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></g></g></g></svg></mjx-container><br>を導入します。<br>決定変数<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="12.417ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5488.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(803.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1247.9,0)"><path data-c="2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z"></path></g><g data-mml-node="mi" transform="translate(1803.9,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(2442.7,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mo" transform="translate(3387.5,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mn" transform="translate(3665.5,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4165.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4610.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(5210.2,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container>を導入し、すべての取りうるベクトル、つまりスケジュール<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="14.607ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6456.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(742.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1798.6,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="msub" transform="translate(2076.6,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2978.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(3422.8,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(4761.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(5206.1,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6178.4,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container><br>に関して、<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="3.182ex" height="1.885ex" role="img" focusable="false" viewBox="0 -683 1406.6 833"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1003,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container>が選択された場合は<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="5.966ex" height="1.864ex" role="img" focusable="false" viewBox="0 -666 2636.8 823.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1081,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(2136.8,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>、<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="3.182ex" height="1.885ex" role="img" focusable="false" viewBox="0 -683 1406.6 833"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1003,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg></mjx-container>が選択された場合は<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="5.966ex" height="1.864ex" role="img" focusable="false" viewBox="0 -666 2636.8 823.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1081,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(2136.8,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>とします。先ほど定式化された問題は、次のように表すことができます。<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="26.582ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 11749.1 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mrow" transform="translate(395.5,0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1407,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="mrow" transform="translate(0,-708.3) scale(0.707)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(465,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mo" transform="translate(1132,0)"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="mn" transform="translate(1632,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2132,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2410,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="msup" transform="translate(2910,0)"><g data-mml-node="mo"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g><g data-mml-node="mstyle" transform="translate(2936.6,0)"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(142.5,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(361,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1139,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1444,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1833,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2555.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(3555.4,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4358.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(4747.7,0)"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="TeXAtom" transform="translate(616,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(616,-247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5989.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(6989.7,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="msubsup" transform="translate(7793,0)"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="TeXAtom" transform="translate(616,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(616,-247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.819ex" xmlns="http://www.w3.org/2000/svg" width="32.395ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 14318.8 2808.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(469,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(913.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(1274.7,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="munderover" transform="translate(1719.3,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(142.5,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(361,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1139,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(509.9,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3163.3,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(3441.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(3830.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4552.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(5552.8,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6356,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msubsup" transform="translate(6745,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(466,-247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7836.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(8837,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g><g data-mml-node="msubsup" transform="translate(9640.3,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(466,-247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10509.9,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(11065.6,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="msub" transform="translate(12121.4,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(748,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1407,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></g></g></svg></mjx-container></p><p>この問題は、よく知られている組み合わせ最適化の問題の1つとは思えませんが、心配する必要はありません。順番にヒントを解きながら、量子計算でこの問題を解いていきます。<br><em><a href="https://github.com/qiskit-community/ibm-quantum-challenge-fall-2021/blob/main/content/challenge-4/challenge-4-ja.ipynb">ibm-quantum-challenge-fall-2021/challenge-4-ja.ipynb at main · qiskit-community/ibm-quantum-challenge-fall-2021</a></em></p></blockquote><p>一見するとどこから手をつければよいかわからないと思います。私も問題を見たときは面食らいましたが、問題各所で丁寧に誘導がされているため指示に従ってゆけば自然と解くことのできる構成になっています。</p><p>上記は「最適化」の例ですが、「化学」分野に関しても<strong>有機EL分子のエネルギーバンドギャップの計算</strong>とややアカデミックな内容が出題テーマとなっていました。課題を解くという点に関しては高校卒業程度の化学知識を備えていれば問題なく解くことができるようになっています。</p><p>全体として、量子計算や出題テーマの専門性よりもQiskitライブラリや参考文献を紐解く力が試されていると感じました。</p><h1 id="参加するにあたって"><a href="#参加するにあたって" class="headerlink" title="参加するにあたって"></a>参加するにあたって</h1><p>問題は主催側が用意しているJupyter Notebook環境で取り組めるため、参加に必要なものはネットワークに接続されたPC1台です。</p><p>注意事項としては当イベントでは<a href="https://qiskit.org/">Qiskit</a>という量子計算パッケージを用いる必要があるため、Pythonの知識が必須です。<a href="https://qiskit.org/">公式Document</a>は一部日本語化されているため、参加への敷居は低いと思います。また、公式からは<a href="https://qiskit.org/textbook/ja/preface.html">テキストブック</a>も提供されています。</p><p>テキストブックだけではなく動画コンテンツも充実しています。動画コンテンツも日本語化されており、学習環境に悩むことはないと思います。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/P5cGeDKOIP0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><p>IBM社から提供されている資料以外にも量子計算について学べるリソースはたくさんあります。</p><p>Microsoft社が提供している<a href="https://github.com/microsoft/QuantumKatas">Quantum Katas</a>はその1つです。こちらも線形代数の基礎から基本的な量子アルゴリズムまでJupyter Notebook環境で学習を進めることができます。</p><p>また、日本語化されたドキュメントではQunaSys社が提供している<a href="https://dojo.qulacs.org/ja/latest/">Quantum Native Dojo</a>や、東京大学が提供している講義資料<a href="https://utokyo-icepp.github.io/qc-workbook/welcome.html">量子コンピューティング・ワークブック</a>などたくさんのリソースがあります。</p><p>より専門的な内容、もっと深い量子コンピューティングの基礎研究などが気になる方は、<a href="https://www.sqei.c.u-tokyo.ac.jp/qed/">量子技術教育プログラム公式サイト</a>で提供されている基礎ノートをご覧になるとよいかもしれません。</p><h1 id="参加してみて"><a href="#参加してみて" class="headerlink" title="参加してみて"></a>参加してみて</h1><p>10日間は長いようで短かったです。</p><p>イベント期間中は<a href="qiskit.slack.com">Slack</a>でのコミュニケーションが頻繁に行われており、質問やお互いを褒めあう文化が溢れていて気持ちの良いものでした。</p><img src="/images/20211115b/quantum_challenge_slack.png" alt="quantum_challenge_slack.png" width="1200" height="211" loading="lazy"><p>私自身の実績としては全4問の課題を解き終え、サムネイルのAdvancedバッジを取得することができました。</p><img src="/images/20211115b/image.png" alt="image.png" width="1068" height="312" loading="lazy"><p>最終問題は自分には難しく、まだまだ勉強が足らないなと痛感しました。次回大会では本当の意味でCompleteを成し遂げたいです。</p><h1 id="おわりに"><a href="#おわりに" class="headerlink" title="おわりに"></a>おわりに</h1><p>少し前まではSFの世界であった量子コンピューターが自分のPC1つで学べるというのは非常に刺激的な体験です。</p><p>より多くの人にイベントの楽しさや量子計算への期待感が伝われば幸いです。機会があればまた参加レポートなどを執筆したいと思います。</p><p>最後まで読んでいただきありがとうございました。</p>]]></content:encoded>
      
      
      <category domain="https://future-architect.github.io/categories/Programming/">Programming</category>
      
      
      <category domain="https://future-architect.github.io/tags/%E3%83%8F%E3%83%83%E3%82%AB%E3%82%BD%E3%83%B3/">ハッカソン</category>
      
      <category domain="https://future-architect.github.io/tags/%E3%82%B3%E3%83%B3%E3%83%86%E3%82%B9%E3%83%88/">コンテスト</category>
      
      <category domain="https://future-architect.github.io/tags/%E9%87%8F%E5%AD%90%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC/">量子コンピューター</category>
      
      <category domain="https://future-architect.github.io/tags/QuantumChallenge/">QuantumChallenge</category>
      
      
      <comments>https://future-architect.github.io/articles/20211115b/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
